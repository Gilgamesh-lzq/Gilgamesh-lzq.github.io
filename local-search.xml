<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在云服务器上部署hexo博客</title>
    <link href="/2022/04-10-228a57503020/"/>
    <url>/2022/04-10-228a57503020/</url>
    
    <content type="html"><![CDATA[<h1 align="center">在云服务器上部署hexo博客</h1><p>hexo这类静态博客可以在github上免费直接部署，而且不用考虑高防、负载均衡等问题；但它的域名必须为<code>用户名.github.io</code>，这使得一些名字过长，而且github的大陆访问速度一直不稳定。</p><blockquote><p>其实根据我的实际体验，GitHub每天凌晨两点以后访问特别稳，页面秒开。</p></blockquote><p>对于域名过长的问题，有些小伙伴可能想到了去云服务商那里购买一个自己的域名。在这个时候他就会发现一个有趣的问题：没有剩余时长3个月及以上的云服务器，IPC是不发备案号的——也就是说这个域名可以买，但用不了。</p><p>对于此，我在阿里云购买了一个域名和一个云服务器。服务器闲着也是闲着，下面记录一下以阿里云为例如何在云服务器上部署hexo博客。</p><h2 id="1-一些准备"><a href="#1-一些准备" class="headerlink" title="1.一些准备"></a>1.一些准备</h2><h3 id="1-1-域名"><a href="#1-1-域名" class="headerlink" title="1.1.域名"></a>1.1.域名</h3><p>要购买域名必须首先在实名填写一个“信息模版”，需要上传身份证正反面无遮挡高清照片。1-2天后审核通过。</p><p>审核通过后才能购买域名。搜索你喜欢的二级域名，会显示给你搭配不同顶级域名的价格，比如<code>good.com</code>会比<code>good.xyz</code>贵。点击购买按钮时会跳出来一些可选服务，土豪可以购买全程代办，穷学生可以什么都不选。</p><blockquote><p>这里面有一个“云解析DNS”非常让人困惑，让人不清楚是不是买了域名必须要买这个才能正常使用。实际上那个服务是<strong>给你返回你查询这个域名的IP</strong>，而不是<strong>把你的域名映射到指定的IP上</strong>——也就是说和我们搭博客没啥关系。其实在阿里云买域名本身就附带了解析服务。</p></blockquote><p>刚刚购买完域名会显示正在审核，其实此时已经可以做域名到指定IP的映射。2-3小时后审核通过，但此时还是只能做域名到指定IP的映射。如果你尝试使用其他几种映射，比如重定向到另一个域名，就会提示你：没备案，不行。</p><p>域名购买后2-3天才会同步给工信部系统，在此之前是不能IPC备案的。</p><h3 id="1-2-云服务器"><a href="#1-2-云服务器" class="headerlink" title="1.2.云服务器"></a>1.2.云服务器</h3><p>如果是首次购买阿里云服务器，会有99一年的优惠活动，请自行探索。如果已经不是第一次购买——静态博客不需要什么性能，挑最便宜的买就行。首先选地区，推荐上海，网站备案省事（买偏远的服务器会更便宜）。然后选共享型机器（性能突发型），CPU和内存都选最低就行。时长至少选3个月。网络按最低选就行，是固定带宽还是按量付费按需选择即可。</p><p>我个人习惯用ubuntu18.04版本。阿里云的服务器直接给root用户，这很好。设置一下密码，主机名。安全策略里面打开80和443端口。</p><h3 id="1-3-IPC备案"><a href="#1-3-IPC备案" class="headerlink" title="1.3.IPC备案"></a>1.3.IPC备案</h3><p>域名的控制台页面上方应该有一个IPC备案的按钮，点击进入。填写信息后点击“信息校验”。</p><blockquote><p>挖个坑。我还没备案完。慢慢更新。</p></blockquote><h3 id="1-4-本机hexo环境"><a href="#1-4-本机hexo环境" class="headerlink" title="1.4.本机hexo环境"></a>1.4.本机hexo环境</h3><p>参考我以前的文章 hexo博客fluid主题美化。</p><blockquote><p>备案完我再添加链接。</p></blockquote><h2 id="2-配置服务器"><a href="#2-配置服务器" class="headerlink" title="2.配置服务器"></a>2.配置服务器</h2><p>大体上分为安装软件、设置用户、设置git、配置nginx四个步骤。一键配置脚本如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install -y git nginx &amp;&amp; <br><br>useradd -m git -d /home/git -g root -s /usr/bin/git-shell &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;git:qwertyuiop&quot;</span>|chpasswd &amp;&amp; <br><br><span class="hljs-built_in">mkdir</span> -p /home/git/Blog/repo /home/git/Blog/hexo &amp;&amp; <span class="hljs-built_in">cd</span> /home/git/Blog/repo &amp;&amp; git init --bare blog.git &amp;&amp; <br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;#\!/bin/bash\ngit --work-tree=/home/git/Blog/hexo --git-dir=/home/git/Blog/repo/blog.git checkout -f&quot;</span> &gt; /home/git/Blog/repo/blog.git/hooks/post-update &amp;&amp; <br><span class="hljs-built_in">chmod</span> -R 777 /home/git &amp;&amp; <br><br><span class="hljs-built_in">mv</span> /etc/nginx/sites-available/default /etc/nginx/sites-available/old_default &amp;&amp; <br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;server &#123;\n    listen    80 default_server;\n    server_name    yourwebsite.com;\n    root    /home/git/Blog/hexo;\n&#125;&quot;</span> &gt; /etc/nginx/conf.d/blog.conf &amp;&amp; <br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;server &#123;\nroot /var/www/html;\nindex index.html index.htm index.nginx-debian.html;\nserver_name _;\nlocation / &#123;\ntry_files \$uri \$uri/ =404;\n&#125;\n&#125;&quot;</span> &gt; /etc/nginx/sites-available/default &amp;&amp; <br>nginx -t &amp;&amp; nginx -s reload<br></code></pre></td></tr></table></figure><p>下面对每一条命令具体解释。</p><h3 id="2-1-安装软件"><a href="#2-1-安装软件" class="headerlink" title="2.1.安装软件"></a>2.1.安装软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get update <span class="hljs-comment"># 更新apt库</span><br>apt-get upgrade -y <span class="hljs-comment"># 更新本机已安装软件</span><br>apt-get install -y git nginx <span class="hljs-comment"># 安装git和nginx</span><br></code></pre></td></tr></table></figure><h3 id="2-2-设置用户"><a href="#2-2-设置用户" class="headerlink" title="2.2.设置用户"></a>2.2.设置用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 新建用户，名为git，登陆目录为/home/git，加入root用户组，默认终端为git终端（权限低）</span><br>useradd -m git -d /home/git -g root -s /usr/bin/git-shell <br><br><span class="hljs-comment"># 设置用户密码</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;git:qwertyuiop&quot;</span>|chpasswd <span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h3 id="2-3-设置git"><a href="#2-3-设置git" class="headerlink" title="2.3.设置git"></a>2.3.设置git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 在git用户家目录下新建Blog文件夹，里面repo文件夹用于储存git信息，hexo文件夹用于储存网页</span><br><span class="hljs-built_in">mkdir</span> -p /home/git/Blog/repo /home/git/Blog/hexo<br><span class="hljs-built_in">cd</span> /home/git/Blog/repo<br><br><span class="hljs-comment"># 在repo文件夹下初始化git，新建一个blog仓库</span><br>git init --bare blog.git<br><br><span class="hljs-comment"># 写入配置文件工作目录和发布目录</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;#\!/bin/bash\ngit --work-tree=/home/git/Blog/hexo --git-dir=/home/git/Blog/repo/blog.git checkout -f&quot;</span> &gt; /home/git/Blog/repo/blog.git/hooks/post-update<br><br><span class="hljs-comment"># 给权限，不然上传会失败</span><br><span class="hljs-built_in">chmod</span> -R 777 /home/git &amp;&amp; <br></code></pre></td></tr></table></figure><h3 id="2-4-配置nginx"><a href="#2-4-配置nginx" class="headerlink" title="2.4.配置nginx"></a>2.4.配置nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx默认的配置有点问题，需要修改一个文件，因此先备份原文件</span><br><span class="hljs-built_in">mv</span> /etc/nginx/sites-available/default /etc/nginx/sites-available/old_default<br><br><span class="hljs-comment"># nginx的配置，确定你的浏览器地址栏显示的名称和你网页的位置</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;server &#123;\n    listen    80 default_server;\n    server_name    yourwebsite.com;\n    root    /home/git/Blog/hexo;\n&#125;&quot;</span> &gt; /etc/nginx/conf.d/blog.conf<br><br><span class="hljs-comment"># 修改nginx原本的陪配置，关掉这里所有监听的80端口，否则会由于端口冲突运行不起来</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;server &#123;\nroot /var/www/html;\nindex index.html index.htm index.nginx-debian.html;\nserver_name _;\nlocation / &#123;\ntry_files \$uri \$uri/ =404;\n&#125;\n&#125;&quot;</span> &gt; /etc/nginx/sites-available/default<br><br><span class="hljs-comment"># 测试nginx，启动</span><br>nginx -t &amp;&amp; nginx -s reload<br></code></pre></td></tr></table></figure><h2 id="3-本地配置"><a href="#3-本地配置" class="headerlink" title="3.本地配置"></a>3.本地配置</h2><p>修改hexo根目录下<code>_config.yml</code>文件，设置git目标：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@[你主机的IP地址或者域名]:/home/git/Blog/repo/blog.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>此时应该已经可以使用了，在hexo根目录下使用<code>hexo clean &amp;&amp; hexo g -d</code>重新编译博客并发布。浏览器输入域名可以访问。</p><h2 id="4-一些后话"><a href="#4-一些后话" class="headerlink" title="4.一些后话"></a>4.一些后话</h2><p>我自己测试我的博客在单核0.5G内存1M带宽的机器上可以流畅访问，对于博客小白来说性能应该没什么问题，20G的硬盘只用了3G多。建议把主题的资源文件和博客的图片都扔到图床中，这样对服务器的空间、计算压力、网络压力都有极大缓解。</p><p>没测试过高并发能抗多少。或许以后有时间可以试试。</p>]]></content>
    
    
    <categories>
      
      <category>类别</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>汉明码纠错原理</title>
    <link href="/2022/04-08-ac173d5009b2/"/>
    <url>/2022/04-08-ac173d5009b2/</url>
    
    <content type="html"><![CDATA[<p><h1 align="center">计算机网络-课程报告</h1></p><h3 align="center" style="color:black;">汉明码纠错原理</h3><p>本文主要参考了3blue1brown大佬的 <a href="https://www.bilibili.com/video/BV1WK411N7kz?spm_id_from=333.337.search-card.all.click"><u><em>汉明码，如何克服噪声</em></u></a> 和 <a href="https://www.bilibili.com/video/BV1pV411y7E8?spm_id_from=333.999.0.0"><u><em>汉明码，优雅的全貌</em></u></a>。</p><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1.引言"></a>1.引言</h2><p>光盘有了划痕却仍然能正确显示存储的内容，除非被划得遍体鳞伤。 原因是光盘存储数据有冗余，可以通过数学的方式恢复少量被破坏的数据。图像、视频、音乐等等媒体格式都设计有纠错的方案。所有数据在计算机中的存储最终都是一串0和1的序列，很容易想到一种最简单的纠错方案，就是把所有数据都存储3份。机器读取数据时比较这3份比特序列，如果有差别就以相同的那两个为准。但这就意味着有$\frac{2}{3}$的空间是冗余的，而且即使浪费了这么多空间，仍然不能可靠地解决3份数据里两个都被破坏了的情况。</p><p>所以问题来了：如何设计一种纠错策略，既能纠正错误，又能尽可能减少空间占用？纠错的基本原则就是，在所有可能的消息所组成的巨大空间中，只有一些子集才算得上是有效信息。举个例子，单词”Hello World”被拼写为”Helho Worhd”人们仍然能够识别出。当一条信息被修改时，接收方需要把错误信息纠正回最接近的有效信息。</p><h2 id="2-奇偶校验"><a href="#2-奇偶校验" class="headerlink" title="2.奇偶校验"></a>2.奇偶校验</h2><p>首先介绍一下前置知识：奇偶校验。奇偶校验过程中，发送方会调整数据块的一个比特位，其余的比特位被用作存放信息。这个被调整的比特位唯一的用途是确保这条信息中有偶数个1——如果其余比特位中1的总数是奇数，就将这个校验位调整为1，否则调整为0。通过这个方法，信息中任意一位的翻转都会导致1的个数变为奇数。这样接收方收到这条信息就可以确定其中有错误。</p><p>此方法有一个问题：偶数个位发生翻转时，接收方无法确定信息中是否有错误。两个错误都不能保证可靠也许听起来很差劲，但事实上在足够多的错误下任何纠错策略都不能保证信息准确，我们要做的是在给定最大错误数$N$的情况下，保证数据可靠。奇偶校验虽然很脆弱，但是把一个信息块转化为一个比特的思想可以作为更复杂方案的强大基础。下文将介绍一种纠错方案，在256个比特中仅仅占用9个比特，在有一处比特位错误时能够纠正它；在有两处比特位错误时虽然无法纠正，但是可以探测到有两个错误。之后会讨论如何把这个策略放大到更大的数据块。</p><h2 id="3-汉明码"><a href="#3-汉明码" class="headerlink" title="3.汉明码"></a>3.汉明码</h2><p>为了找到发生错误的位置而不仅仅是知道错误存在，汉明(Richard Hamming)想到了一个好方法，在做奇偶校验时不是对整块信息作校验，而是对其中精心挑选的一部分作校验，这样就可以通过一系列的验证来逐步定位发生错误的具体位置。这种校验的基本思想是如何通过多次奇偶校验来二分查找出错误所在。</p><p>举个例子：只对第2列和第4列这些奇数编号位置做校验，如果校验位有错误，那么接收方就可以把错误锁定在更小的范围内；如果校验位无误，那么要么整个信息没有错误，要么错误出在偶数编号位上。对一半的数据做校验看起来更低效了（因为这一块数据需要两个校验位而不是原本的一个），实际上通过有设计的组合，校验可以做到更高效。</p><p>我们举一个$4\times4$矩阵的例子，将这些比特位标记为0-15，只用其中的12个实际存储数据，4个纠错码分布在位置编号1248，也就是$2^n$位置。暂时假设错误最多只有1处。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:08-03:49:24-image-20220408013736031.png" alt="image-20220408013736031" style="zoom: 30%;" /></p><p>在做奇偶校验时必须有一些用来控制整组数据奇偶性的特殊位，第一次校验通过1号位检查第2第4列，第二次检查通过2号位检查第3第4列。通过这两次检查可以将错误锁定在某一列。同样的道理，通过4号位和8号位的两次检查可以将错误锁定在某一行，此时成功确定了错误的位置。推广到 $16\times16=256$ 的数组上，只要8个校验位就可以确定错误所在的位置。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:08-03:49:24-image-20220408015924841.png" alt="image-20220408015924841" style="zoom:33%;" /></p><p>说回$4\times4$矩阵，4个校验位有16种可能的数值组合，对应于16个位置任意一个出错的16种情况。那么用什么来表达第17种情况——没有数据出错呢？我们选择舍弃0号位，也就是校验计算的时候根本不把0号位算在内，这样16种校验组合可以和16种情况一一对应。这种对15位数据进行处理表达了11位有效数据的方式称为<strong>(15,11)汉明码</strong>。</p><p>0号位其实还可以发挥一点作用：将其作为整块数据的奇偶校验码，这样我们就可以检测到2位的错误，虽然没有办法修复它。这个操作被称为<strong>扩展汉明码</strong>。</p><h2 id="4-另一种理解"><a href="#4-另一种理解" class="headerlink" title="4.另一种理解"></a>4.另一种理解</h2><p>观察上文的简单示例，或许你已经发现了，四个校验位的数组拼在一起成为一个二进制数，其十进制值就是对应的位置号，例如四个校验位倒着排，0111，恰好代表7号位出错。通过这个特性可以使得硬件实现惊人的简单。这个特性并不是巧合，如果将16个二进制数填进对应的位置，那么仅有4个数是只包含一个1的，分别是1、2、4、8号位置。对它们的校验事实上就是在检查“错误是否出现在这一位上”。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:08-03:49:24-image-20220408023027907.png" alt="image-20220408023027907" style="zoom:33%;" /></p><p>异或运算XOR，可以有以下三种理解方式：</p><ul><li>运算的两个二进制数中有且只有一个为1时结果为1，否则为0</li><li>两个数不同结果为1，相同结果为0</li><li>模二的加法，或不进位的二进制加法</li></ul><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:08-03:49:24-image-20220408024159314.png" alt="image-20220408024159314" style="zoom:33%;" /></p><p>对很多串数的的异或运算实际上就是在做奇偶校验，并把结果作为一串数保留下来。因此对汉明码的计算还可以有另一种理解方式：把数组中所有值为1的位取出来，它们对应的位置为一个二进制数，把这些二进制数放在一列，对每一位做异或运算，得到的比特编码实际上就是之前奇偶性检验出来的位置。</p><p>数据发送方直接调整刚刚校验出来需要调平的位置，这样整个数组再进行校验的结果就是0000。传输过程中任意一位的0翻转成1都会导致那一位对应的位置编码被加进需要异或运算的序列中，计算结果也就从0000变成了错误那一位的位置编码。同样的道理，1翻转成0会导致那一位对应的位置编码被移出需要异或运算的序列中，计算结果同样从0000变成了错误那一位的位置编码。</p><h2 id="5-对多个块的组织"><a href="#5-对多个块的组织" class="headerlink" title="5.对多个块的组织"></a>5.对多个块的组织</h2><p>可以观察到，每多一个校验位，数据块的大小就可以翻倍。也就是说，数据块越大，冗余信息占比越小。但数据块不是越大越好，因为上面提到的汉明码只能纠正一个位的错误、指示两个位的错误，而数据块越大其中有多个错误的可能性就越高。实际上错误一旦产生往往会影响很多个位，导致整个块被毁掉。因此实际的处理中会把多个块的数据交替排列，这样可以把一连串的错误交错打散到许多个数据块中。当然现在已经有Reed Solomon等更先进的编码来处理这种问题。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:08-03:49:24-image-20220408030947794.png" alt="image-20220408030947794" style="zoom: 33%;" /></p><h2 id="6-后记"><a href="#6-后记" class="headerlink" title="6.后记"></a>6.后记</h2><p>在此引用3blue1brown的话：</p><p>聪明的想法往往看起来尤其简洁，甚至会让人们以为理所当然。通过本篇介绍，希望汉明码这种代码存在的合理性对你来说已经显而易见。但千万不要草率地以为这些代码真的显而易见，因为这绝不简单。</p><p>聪明的想法看似太简单是因为我们只看到了最终的结果，清理掉了过程中的琐事，缄口不提其中的错误岔路，一笔带过解决问题的伊始和前路上无穷的可以探索的可能性，包括所有这一切。对一些特别的发明发现而言，大体上总是有第二个更深层次的原因——人们会忘记欣赏。</p><p>把信息当作比特位这种想法直到1948年才被集中整理成完整的理论收集在克劳德·香农独创的信息论论文中，这篇论文的发表和汉明提出他的算法是同时发生的。某种意义上讲，正是这篇奠定基础的论文展示了有效的纠错方式在理论上是永远可行的，无论出现错误的概率有多高。</p><p>几十年的快速发展，许多人已经习惯于把比特和信息放在一起思考，很容易忽视掉这两者是多么的不同。可悲的是，那些深远地影响了未来人们思想的想法最终会被年轻一代视作平淡无奇。</p>]]></content>
    
    
    <categories>
      
      <category>课程作业</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客fluid主题美化</title>
    <link href="/2022/04-07-6560820db005/"/>
    <url>/2022/04-07-6560820db005/</url>
    
    <content type="html"><![CDATA[<h1 align="center">hexo博客fluid主题美化</h1><p>本人不才，没学过前端，课程作业中没有用到过太复杂的前端，修改主题全靠敲过三年代码的直觉。可能我的某些设置是没用的，或者是我错误的理解，或者有更好的解决方案。Anyway，总归是希望我折腾主题美化的经验和踩过的坑能对大家有所帮助。</p><p>$\ $</p><h2 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1.安装hexo"></a>1.安装hexo</h2><p>hexo是一个静态个人博客框架，“静态”顾名思义，不支持交互功能。这使得hexo整个项目的配置和功能非常简洁，性能也比较好。静态博客可以免费部署在github、gitee等平台。</p><p>要使用 <a href="https://hexo.io/zh-cn/docs/"><u><em>hexo</em></u></a> 首先需要一些环境：<a href="https://nodejs.org/en/"><u><em>node.js</em></u></a>、<a href="https://git-scm.com"><u><em>git</em></u></a>。具体步骤可以观看 <u><em><a href="https://www.bilibili.com/video/BV1Yb411a7ty">程序羊的视频</a></em></u> ，除了git配置之外非常详细。具体使用方法可以查看官方文档，本文中已经通过超链接给出，可以点击跳转查看。</p><p>博客安装好后最常用的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 新建一个博客文件，markdown格式，默认目录在 [博客根目录]/source/_posts</span><br>hexo new <span class="hljs-string">&quot;[File Name]&quot;</span><br><span class="hljs-comment"># 清理上一次生成的临时文件</span><br>hexo clean<br><span class="hljs-comment"># 生成博客</span><br>hexo g<br><span class="hljs-comment"># 在本地查看生成效果</span><br>hexo s<br><span class="hljs-comment"># 部署到远端</span><br>hexo d<br></code></pre></td></tr></table></figure><p>默认的主题是landscape，很简洁，有些简陋。我个人推荐使用fluid主题，官方注释详细，功能丰富，对大多数人来说可以做到<strong>“开箱即用”</strong>。</p><p>目前fluid主题的优势有：</p><ul><li>优雅的颜值，使用 Material Design 风格突出层次感，但又不失简约，让用户能专注于写作；</li><li>提供大量定制化配置项，使每个用户使用该主题都能具有独特的样式；</li><li>响应式页面，适配手机、平板等设备，包括极端的分辨率都能轻松应对；</li><li>主题中少有的整合了 LaTeX 和 mermaid 的支持</li></ul><p>目前fluid主题支持以下功能特性：</p><ul><li>图片懒加载</li><li>自定义代码高亮方案</li><li>内置多语言</li><li>支持多款评论插件</li><li>支持使用数据文件存放配置</li><li>自定义静态资源 CDN</li><li>无比详实的用户文档</li><li>内置文章搜索</li><li>页脚备案信息</li><li>网页访问统计</li><li>支持 LaTeX 数学公式</li><li>支持 mermaid 流程图</li></ul><h2 id="2-修改主题"><a href="#2-修改主题" class="headerlink" title="2.修改主题"></a>2.修改主题</h2><h3 id="2-1-切换主题"><a href="#2-1-切换主题" class="headerlink" title="2.1.切换主题"></a>2.1.切换主题</h3><p>切换主题很简单，可以从github <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases"><u><em>直接下载</em></u></a> 整个主题包放入themes文件夹下，或者<code>npm install --save hexo-theme-fluid</code>直接安装。在hexo博客根目录下创建<code>_config.fluid.yml</code>文件，并将主题包内部的<code>_config.yml</code>内容全部复制进去。如果是使用npm安装的，主题包路径为<code>[博客根目录]/node_modules/hexo-theme-fluid</code>。最后在<code>_config.yml</code>文件中将主题修改为fluid：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/     landscape-plus</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br></code></pre></td></tr></table></figure><p>此时重新生成博客，已经可以观看到效果。</p><h3 id="2-2-修改配置"><a href="#2-2-修改配置" class="headerlink" title="2.2.修改配置"></a>2.2.修改配置</h3><h4 id="2-2-1-主题内置功能包"><a href="#2-2-1-主题内置功能包" class="headerlink" title="2.2.1.主题内置功能包"></a>2.2.1.主题内置功能包</h4><p>主题配置文件中本身已经配置了很多可选项，每一行代码都有详细的配置。推荐初次使用的人详细阅读完整个配置文件，按需开关功能。<a href="https://hexo.fluid-dev.com/docs/"><u><em>fluid官方文档</em></u></a> 对所有功能做了详细的解释，点击链接跳转。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:07-14:03:03-image-20220407112140493.png" alt="image-20220407112140493"></p><p>主题中的资源可以进行一些替换，将默认字体替换为自己习惯的字体，路径从<code>source</code>下开始。推荐把默认背景图片可以替换为图床中的链接，这样加载比较快，否则半天加载不出来背景。用户可以自己添加自己的css，在其中覆盖一些默认样式。另外，博客中用到的所有图片最好都 <a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html#默认配置文件"><u><em>上传图床</em></u></a> ，这样hexo比较容易管理资源，用起来也更流畅。</p><h3 id="2-3-公式支持"><a href="#2-3-公式支持" class="headerlink" title="2.3.公式支持"></a>2.3.公式支持</h3><p>写博客，行内公式和行间公式必不可少。然而hexo默认的引擎对latex公式渲染有点问题。请按照以下步骤修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm uninstall hexo-renderer-marked --save<br>npm install hexo-renderer-kramed --save<br></code></pre></td></tr></table></figure><p>打开<code>/node_modules/hexo-renderer-kramed/lib/renderer.js</code>，将</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// Change inline math rule</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">formatText</span>(<span class="hljs-params">text</span>) &#123;<br>    <span class="hljs-comment">// Fit kramed&#x27;s rule: $$ + \1 + $$</span><br>    <span class="hljs-keyword">return</span> text.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/`\$(.*?)\$`/g</span>, <span class="hljs-string">&#x27;$$$$$1$$$$&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>替换为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// Change inline math rule</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">formatText</span>(<span class="hljs-params">text</span>) &#123;<br>    <span class="hljs-keyword">return</span> text;<br>&#125;<br></code></pre></td></tr></table></figure><p>打开<code>/node_modules/hexo-renderer-mathjax/mathjax.html</code>，将最后一行的<code>&lt;script&gt;</code>改为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>打开<code>/node_modules\kramed\lib\rules\inline.js</code>，更改第12行和22行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">escape</span>: <span class="hljs-regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span>,<br><span class="hljs-attr">em</span>: <span class="hljs-regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,<br></code></pre></td></tr></table></figure><p>在主题配置文件中将mathjax设为true，此时已经可以完美渲染行内和行间公式。</p><p>有些文章中写道<strong>卸载hexo-math安装mathjax这一步骤，本主题中不需要这样做</strong>，这样反而会导致渲染公式出问题，字体漂移。</p><h3 id="2-4-自定义css"><a href="#2-4-自定义css" class="headerlink" title="2.4.自定义css"></a>2.4.自定义css</h3><p>主题默认设置虽然动效和框体等都设计得很好，但是在文章显示方面白底黑字，太素了。为了更方便阅读，我们可以自定义css，在其中修改对markdown格式的渲染，更方便阅读。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:07-14:03:03-image-20220407121130949.png" alt="image-20220407121130949"></p><p>在<code>sources/css</code>下新建一个<code>fluid-extention.css</code>文件，向其中添加内容。整体的css配置文件如下，此配置文件是我直接从typora主题的github.css下复制出来并修改了一部分得到的。下面来讲解每一段的配置要点和含义。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.col-lg-8</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-class">.container</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-id">#board</span><span class="hljs-selector-class">.py-5</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">123%</span>;<br>    <span class="hljs-attribute">left</span>: -<span class="hljs-number">23%</span>; <br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">767px</span>) &#123;<br>    <span class="hljs-selector-class">.col-lg-8</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-class">.container</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-id">#board</span><span class="hljs-selector-class">.py-5</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>; <br>    &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">424px</span>) &#123;<br>    <span class="hljs-selector-class">.col-lg-8</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-class">.container</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-id">#board</span><span class="hljs-selector-class">.py-5</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>; <br>    &#125;<br>&#125;<br><br><span class="hljs-selector-class">.tocbot-active-link</span> &#123;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>    <span class="hljs-comment">/*color var(--link-hover-color)*/</span><br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#800000</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#FA807233</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>&#125;<br><span class="hljs-selector-class">.toc-list-item</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#800000</span>;<br>&#125;<br><br><span class="hljs-selector-tag">figure</span><span class="hljs-selector-class">.highlight</span> &#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    background: #21252b;</span><br><span class="hljs-comment">    background: rgb(246,248,250);</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">246</span>,<span class="hljs-number">248</span>,<span class="hljs-number">250</span>);<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">2px</span> <span class="hljs-number">22px</span> <span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">3</span>);<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">25px</span>;<br>    <span class="hljs-attribute">z-index</span>:<span class="hljs-number">998</span>;<br>&#125;<br><br><span class="hljs-selector-tag">figure</span><span class="hljs-selector-class">.highlight</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fc625d</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#fdbc40</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#35cd4b</span>;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27; &#x27;</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">z-index</span>:<span class="hljs-number">999</span>;<br>&#125;<br><br><span class="hljs-selector-tag">a</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#173774</span>;<br>&#125;<br><span class="hljs-selector-tag">h1</span>,<br><span class="hljs-selector-tag">h2</span>,<br><span class="hljs-selector-tag">h3</span>,<br><span class="hljs-selector-tag">h4</span>,<br><span class="hljs-selector-tag">h5</span>,<br><span class="hljs-selector-tag">h6</span> &#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">1rem</span>;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.4</span>;<br>    <span class="hljs-attribute">cursor</span>: text;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><span class="hljs-selector-tag">h1</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.anchor</span>,<br><span class="hljs-selector-tag">h2</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.anchor</span>,<br><span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.anchor</span>,<br><span class="hljs-selector-tag">h4</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.anchor</span>,<br><span class="hljs-selector-tag">h5</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.anchor</span>,<br><span class="hljs-selector-tag">h6</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.anchor</span> &#123;<br>    <span class="hljs-attribute">text-decoration</span>: none;<br>&#125;<br><span class="hljs-selector-tag">h1</span> tt,<br><span class="hljs-selector-tag">h1</span> <span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: inherit;<br>&#125;<br><span class="hljs-selector-tag">h2</span> tt,<br><span class="hljs-selector-tag">h2</span> <span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: inherit;<br>&#125;<br><span class="hljs-selector-tag">h3</span> tt,<br><span class="hljs-selector-tag">h3</span> <span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: inherit;<br>&#125;<br><span class="hljs-selector-tag">h4</span> tt,<br><span class="hljs-selector-tag">h4</span> <span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: inherit;<br>&#125;<br><span class="hljs-selector-tag">h5</span> tt,<br><span class="hljs-selector-tag">h5</span> <span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: inherit;<br>&#125;<br><span class="hljs-selector-tag">h6</span> tt,<br><span class="hljs-selector-tag">h6</span> <span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: inherit;<br>&#125;<br><span class="hljs-selector-tag">h1</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2.25em</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.2</span>;<br>    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#eee</span>;<br>&#125;<br><span class="hljs-selector-tag">h2</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.75em</span>  ;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.1</span>;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    border-bottom: 0px solid #eee;</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#7e3131</span>;<br>&#125;<br><br><span class="hljs-selector-tag">h3</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.5em</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.1</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">RGB</span>(<span class="hljs-number">47</span>,<span class="hljs-number">85</span>,<span class="hljs-number">151</span>);<br>&#125;<br><span class="hljs-selector-tag">h4</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.25em</span>;<br>&#125;<br><span class="hljs-selector-tag">h5</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1em</span>;<br>&#125;<br><span class="hljs-selector-tag">h6</span> &#123;<br>   <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1em</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#777</span>;<br>&#125;<br><br><span class="hljs-selector-tag">p</span>,<br><span class="hljs-selector-tag">blockquote</span>,<br><span class="hljs-selector-tag">ul</span>,<br><span class="hljs-selector-tag">ol</span>,<br><span class="hljs-selector-tag">dl</span>,<br><span class="hljs-selector-tag">table</span>&#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0.8em</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">2em</span>; <span class="hljs-comment">/*首行缩进*/</span><br>&#125;<br><span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.markdown-body</span> &gt; <span class="hljs-selector-tag">strong</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#be0000</span>;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>&#125;<br><br><br><span class="hljs-selector-tag">li</span>&gt;<span class="hljs-selector-tag">ol</span>,<br><span class="hljs-selector-tag">li</span>&gt;<span class="hljs-selector-tag">ul</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>;<br>&#125;<br>hr &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">2px</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">16px</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#e7e7e7</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span> none;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>    <span class="hljs-attribute">box-sizing</span>: content-box;<br>&#125;<br><br><span class="hljs-selector-tag">li</span> <span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.first</span> &#123;<br>    <span class="hljs-attribute">display</span>: inline-block;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-tag">ul</span>,<br><span class="hljs-selector-tag">ol</span> &#123;<br>    <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><span class="hljs-selector-tag">ul</span><span class="hljs-selector-pseudo">:first</span>-child,<br><span class="hljs-selector-tag">ol</span><span class="hljs-selector-pseudo">:first</span>-child &#123;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-tag">ul</span><span class="hljs-selector-pseudo">:last-child</span>,<br><span class="hljs-selector-tag">ol</span><span class="hljs-selector-pseudo">:last-child</span> &#123;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-tag">blockquote</span> &#123;<br>    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">4px</span> solid <span class="hljs-number">#dfe2e5</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#777777</span>;<br>&#125;<br><span class="hljs-selector-tag">blockquote</span> <span class="hljs-selector-tag">blockquote</span> &#123;<br>    <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">word-break</span>: initial;<br>    <span class="hljs-attribute">overflow-x</span>: auto;<br>    <span class="hljs-attribute">max-height</span>: <span class="hljs-number">22em</span>;<br>    <span class="hljs-attribute">overflow-y</span>: auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">tr</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#dfe2e5</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">tr</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>n),<br><span class="hljs-selector-tag">thead</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f8f8f8</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">th</span> &#123;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#dfe2e5</span>;<br>    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">13px</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">td</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#dfe2e5</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">13px</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">th</span><span class="hljs-selector-pseudo">:first</span>-child,<br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:first</span>-child &#123;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">th</span><span class="hljs-selector-pseudo">:last-child</span>,<br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:last-child</span> &#123;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.CodeMirror-lines</span> &#123;<br>    <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">4px</span>;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;font/CONSOLA.TTF&quot;</span>;<br>&#125;<br><br><span class="hljs-selector-class">.code-tooltip</span> &#123;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">28</span>,<span class="hljs-number">36</span>,.<span class="hljs-number">3</span>);<br>    <span class="hljs-comment">/* border-top: 1px solid #eef2f2; */</span><br>&#125;<br><br><span class="hljs-selector-class">.md-fences</span>,<br><span class="hljs-selector-tag">code</span>,<br>tt &#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    border: 1px solid #e7eaed;</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    background-color: #f8f8f8;</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0px</span> <span class="hljs-number">0px</span> <span class="hljs-number">0px</span> <span class="hljs-number">0px</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.9em</span>;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#dddddde6</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0px</span> <span class="hljs-number">0</span> <span class="hljs-number">0px</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#e17523</span>;<br>&#125;<br><br><span class="hljs-selector-class">.md-fences</span> &#123;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">8px</span>;<br>    <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">6px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.md-task-list-item</span> &gt; <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">1.3em</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="2-4-1-Mac风格代码块"><a href="#2-4-1-Mac风格代码块" class="headerlink" title="2.4.1.Mac风格代码块"></a>2.4.1.Mac风格代码块</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">figure</span><span class="hljs-selector-class">.highlight</span> &#123; <span class="hljs-comment">/* 控制代码框顶栏颜色、宽度、圆角等 */</span><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    background: #21252b;</span><br><span class="hljs-comment">    background: rgb(246,248,250);</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">246</span>,<span class="hljs-number">248</span>,<span class="hljs-number">250</span>);<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">2px</span> <span class="hljs-number">22px</span> <span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">3</span>);<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">25px</span>;<br>    <span class="hljs-attribute">z-index</span>:<span class="hljs-number">998</span>;<br>&#125;<br><br><span class="hljs-selector-tag">figure</span><span class="hljs-selector-class">.highlight</span><span class="hljs-selector-pseudo">::before</span> &#123; <span class="hljs-comment">/* 绘制三个小圆点 */</span><br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fc625d</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#fdbc40</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#35cd4b</span>;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27; &#x27;</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">12px</span>;<br>    <span class="hljs-attribute">z-index</span>:<span class="hljs-number">999</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>此段代码修改自 <a href="https://jin-yuhan.github.io/posts/60584518/"><u><em>jin-yuhan同学</em></u></a>。他实际上只制作了代码框的顶栏，没有和原本的框匹配。我对代码进行了一点修改：更改了颜色，缩减了顶栏宽度，为解决图标覆盖问题添加了<code>z-index</code>来使其置于最上层显示。对代码框还有一些修改，我将在后面介绍。</p><h4 id="2-4-2-标题颜色"><a href="#2-4-2-标题颜色" class="headerlink" title="2.4.2.标题颜色"></a>2.4.2.标题颜色</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 此段代码修改了行高和div溢出隐藏。如果不设置溢出隐藏那么标题的div框会覆盖上下的文字</span><br><span class="hljs-comment">   这些文字无法选中，链接无法点开，十分影响使用体验 */</span><br><span class="hljs-selector-tag">h1</span>,<span class="hljs-selector-tag">h2</span>,<span class="hljs-selector-tag">h3</span>,<span class="hljs-selector-tag">h4</span>,<span class="hljs-selector-tag">h5</span>,<span class="hljs-selector-tag">h6</span> &#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">1rem</span>;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.4</span>;<br>    <span class="hljs-attribute">cursor</span>: text;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 此段代码修改了六个等级标题、多行引用、行内代码的样式，在颜色和行高字号上产生区分 */</span><br><span class="hljs-selector-tag">h1</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2.25em</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.2</span>;<br>    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#eee</span>;<br>&#125;<br><span class="hljs-selector-tag">h2</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.75em</span>  ;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.1</span>;<br>    <span class="hljs-comment">/* border-bottom: 0px solid #eee; */</span><br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#7e3131</span>;<br>&#125;<br><span class="hljs-selector-tag">h3</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.5em</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.1</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">RGB</span>(<span class="hljs-number">47</span>,<span class="hljs-number">85</span>,<span class="hljs-number">151</span>);<br>&#125;<br><span class="hljs-selector-tag">h4</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.25em</span>;<br>&#125;<br><span class="hljs-selector-tag">h5</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1em</span>;<br>&#125;<br><span class="hljs-selector-tag">h6</span> &#123;<br>   <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1em</span>;<br>   <span class="hljs-attribute">color</span>: <span class="hljs-number">#777</span>;<br>&#125;<br><span class="hljs-selector-tag">blockquote</span> &#123;<br>    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">4px</span> solid <span class="hljs-number">#dfe2e5</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#777777</span>;<br>&#125;<br><span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#dddddde6</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0px</span> <span class="hljs-number">0</span> <span class="hljs-number">0px</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#e17523</span>;<br>&#125;<br><span class="hljs-selector-tag">strong</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#be0000</span>;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-4-3-首行缩进"><a href="#2-4-3-首行缩进" class="headerlink" title="2.4.3.首行缩进"></a>2.4.3.首行缩进</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">2em</span>; <span class="hljs-comment">/*首行缩进*/</span><br>&#125;<br><span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">text-indent</span>: <span class="hljs-number">0</span>; <span class="hljs-comment">/*防止列表也被缩进*/</span><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>也可以使用<code>&amp;emsp;&amp;emsp;</code>来手动缩进。</p></blockquote><h4 id="2-4-4-代码框表格框折叠"><a href="#2-4-4-代码框表格框折叠" class="headerlink" title="2.4.4.代码框表格框折叠"></a>2.4.4.代码框表格框折叠</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 代码和表格设置最大高度，高度或宽度超出都不会显示在页面中，可以通过滚动条查看 */</span><br><span class="hljs-selector-tag">table</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">word-break</span>: initial;<br>    <span class="hljs-attribute">overflow-x</span>: auto;<br>    <span class="hljs-attribute">max-height</span>: <span class="hljs-number">22em</span>;<br>    <span class="hljs-attribute">overflow-y</span>: auto <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>顺带一提，我本来想实现的效果是这样的：</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:07-14:03:03-image-20220407130641231.png" alt="image-20220407130641231" style="zoom:50%;" /></p><p>但是 <a href="https://blog.jijian.link/2020-02-26/hexo-article-code-add-unfold/"><u><em>这个博客</em></u></a> 对landscape主题的修改不适合于fluid主题。对他的方法记录如下，有兴趣的小伙伴可以自己探索一下。</p><p>添加文件 <code>themes/landscape/source/js/code-unfold.js</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CODE_MAX_HEIGHT</span> = <span class="hljs-number">200</span>;<br><span class="hljs-keyword">const</span> containers = [];<br><br><span class="hljs-comment">// 展开</span><br>$(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-string">&#x27;.js_unfold_code_btn&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">closest</span>(<span class="hljs-string">&#x27;.js_highlight_container&#x27;</span>).<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&#x27;on&#x27;</span>);<br>&#125;);<br><span class="hljs-comment">// 收起</span><br>$(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-string">&#x27;.js_retract_code_btn&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> $container = $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">closest</span>(<span class="hljs-string">&#x27;.js_highlight_container&#x27;</span>).<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&#x27;on&#x27;</span>);<br>  <span class="hljs-keyword">const</span> winTop = $(<span class="hljs-variable language_">window</span>).<span class="hljs-title function_">scrollTop</span>();<br>  <span class="hljs-keyword">const</span> offsetTop = $container.<span class="hljs-title function_">offset</span>().<span class="hljs-property">top</span>;<br>  $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;top&#x27;</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">if</span> (winTop &gt; offsetTop) &#123;<br>    <span class="hljs-comment">// 设置滚动条位置</span><br>    $(<span class="hljs-string">&#x27;body, html&#x27;</span>).<span class="hljs-title function_">animate</span>(&#123;<br>      <span class="hljs-attr">scrollTop</span>: $container.<span class="hljs-title function_">offset</span>().<span class="hljs-property">top</span> - <span class="hljs-variable constant_">CODE_MAX_HEIGHT</span><br>    &#125;, <span class="hljs-number">600</span>);<br>  &#125;<br>&#125;);<br><span class="hljs-comment">// 滚动事件，触发动画效果</span><br>$(<span class="hljs-variable language_">window</span>).<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;scroll&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> scrollTop = $(<span class="hljs-variable language_">window</span>).<span class="hljs-title function_">scrollTop</span>();<br>  <span class="hljs-keyword">const</span> temp = [];<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; containers.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">const</span> item = containers[i];<br>    <span class="hljs-keyword">const</span> &#123; $container, height, $hide, hasHorizontalScrollbar &#125; = item;<br>    <span class="hljs-keyword">if</span> ($container.<span class="hljs-title function_">closest</span>(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-comment">// 如果 $container 元素已经不在页面上, 则删除该元素</span><br>      <span class="hljs-comment">// 防止pjax页面跳转之后，元素未删除</span><br>      <span class="hljs-keyword">continue</span>;<br>    &#125;<br>    temp.<span class="hljs-title function_">push</span>(item);<br>    <span class="hljs-keyword">if</span> (!$container.<span class="hljs-title function_">hasClass</span>(<span class="hljs-string">&#x27;on&#x27;</span>)) &#123;<br>      <span class="hljs-keyword">continue</span>;<br>    &#125;<br>    <span class="hljs-keyword">const</span> offsetTop = $container.<span class="hljs-title function_">offset</span>().<span class="hljs-property">top</span>;<br>    <span class="hljs-keyword">const</span> hideBtnHeight = $hide.<span class="hljs-title function_">outerHeight</span>();<br>    <span class="hljs-comment">// 减去按钮高度，减去底部滚动条高度</span><br>    <span class="hljs-keyword">const</span> maxTop = <span class="hljs-built_in">parseInt</span>(height - (hasHorizontalScrollbar ? <span class="hljs-number">17</span> : <span class="hljs-number">0</span>) - hideBtnHeight);<br>    <span class="hljs-keyword">let</span> top = <span class="hljs-built_in">parseInt</span>(<br>      <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(<br>        <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(scrollTop - offsetTop, <span class="hljs-number">0</span>), <span class="hljs-comment">// 如果小于 0 ，则取 0</span><br>        maxTop,<span class="hljs-comment">// 如果大于 height ，则取 height</span><br>      )<br>    );<br>    <span class="hljs-comment">// 根据 sin 曲线设置&quot;收起代码&quot;位置</span><br>    <span class="hljs-keyword">const</span> halfHeight = <span class="hljs-built_in">parseInt</span>($(<span class="hljs-variable language_">window</span>).<span class="hljs-title function_">height</span>() / <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>((top / maxTop) * <span class="hljs-number">90</span> * (<span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>/<span class="hljs-number">360</span>)));<br>    $hide.<span class="hljs-title function_">css</span>(<span class="hljs-string">&#x27;top&#x27;</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(top + halfHeight, maxTop));<br>  &#125;<br>  containers = temp;<br>&#125;);<br><br><span class="hljs-comment">// 添加隐藏容器</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">addCodeWrap</span> = (<span class="hljs-params">$node</span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> $container = $node.<span class="hljs-title function_">wrap</span>(<span class="hljs-string">&#x27;&lt;div class=&quot;js_highlight_container highlight-container&quot;&gt;&lt;div class=&quot;highlight-wrap&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span>).<span class="hljs-title function_">closest</span>(<span class="hljs-string">&#x27;.js_highlight_container&#x27;</span>);<br><br>  <span class="hljs-comment">// 底部 &quot;展开代码&quot; 与 侧边栏 &quot;收起代码&quot;</span><br>  <span class="hljs-keyword">const</span> $btn = $(<span class="hljs-string">`</span><br><span class="hljs-string">    &lt;div class=&quot;highlight-footer&quot;&gt;</span><br><span class="hljs-string">      &lt;a class=&quot;js_unfold_code_btn show-btn&quot; href=&quot;javascript:;&quot;&gt;展开代码&lt;i class=&quot;fa fa-angle-down&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;</span><br><span class="hljs-string">    &lt;/div&gt;</span><br><span class="hljs-string">    &lt;a class=&quot;js_retract_code_btn hide-btn&quot; href=&quot;javascript:;&quot;&gt;&lt;i class=&quot;fa fa-angle-up&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;收起代码&lt;/a&gt;</span><br><span class="hljs-string">  `</span>);<br><br>  $container.<span class="hljs-title function_">append</span>($btn);<br>  <span class="hljs-keyword">return</span> $container;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">ret</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  $(<span class="hljs-string">&#x27;.highlight&#x27;</span>).<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 防止重复渲染</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">__render__</span> === <span class="hljs-literal">true</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">__render__</span> = <span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">const</span> $this = $(<span class="hljs-variable language_">this</span>);<br>    <span class="hljs-keyword">const</span> height = $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">outerHeight</span>();<br>    <span class="hljs-keyword">if</span> (height &gt; <span class="hljs-variable constant_">CODE_MAX_HEIGHT</span>) &#123;<br>      <span class="hljs-comment">// 添加展开&amp;收起容器</span><br>      <span class="hljs-keyword">const</span> $container = <span class="hljs-title function_">addCodeWrap</span>($this, height);<br>      containers.<span class="hljs-title function_">push</span>(&#123;<br>        $container,<br>        height,<br>        <span class="hljs-attr">$hide</span>: $container.<span class="hljs-title function_">find</span>(<span class="hljs-string">&#x27;.js_retract_code_btn&#x27;</span>),<br>        <span class="hljs-attr">hasHorizontalScrollbar</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">scrollWidth</span> &gt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">offsetWidth</span>,<br>      &#125;);<br>    &#125;<br>  &#125;);<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> ret;<br></code></pre></td></tr></table></figure><p>引入js并执行，修改文件 <code>themes/landscape/source/js/search.js</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">+ <span class="hljs-keyword">import</span> codeUnfold <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./code-unfold&#x27;</span>;<br>+ <span class="hljs-title function_">codeUnfold</span>();<br></code></pre></td></tr></table></figure><p>添加样式，修改文件 <code>themes/landscape/source/css/_partial/highlight.styl</code>。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// 展开收起效果</span><br><span class="hljs-selector-class">.highlight-container</span><br>  <span class="hljs-attribute">position</span>: relative<br>  <span class="hljs-attribute">background-color</span>: highlight-background<br>  &amp;<span class="hljs-selector-class">.on</span><br>    <span class="hljs-selector-class">.highlight-footer</span><br>      <span class="hljs-attribute">display</span>: none<br>    <span class="hljs-selector-class">.hide-btn</span><br>      <span class="hljs-attribute">display</span>: flex<br>    <span class="hljs-selector-class">.highlight-wrap</span><br>      <span class="hljs-attribute">max-height</span>: none<br>  <span class="hljs-selector-class">.highlight-wrap</span><br>    <span class="hljs-attribute">overflow</span>: hidden<br>    <span class="hljs-attribute">max-height</span>: <span class="hljs-number">200px</span><br>  <span class="hljs-selector-class">.highlight-footer</span><br>    <span class="hljs-attribute">position</span> absolute<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span><br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span><br>    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span><br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span><br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-string">&#x27;linear-gradient(-180deg, rgba(255,255,255,0) 0%, %s 65%)&#x27;</span> % highlight-background;<br>    <span class="hljs-attribute">text-align</span>: center<br>  <span class="hljs-selector-class">.show-btn</span><br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span><br>    <span class="hljs-attribute">position</span>: absolute<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span><br>    <span class="hljs-attribute">transform</span>: translateX(-<span class="hljs-number">50%</span>)<br>    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span><br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">2.6em</span><br>    <span class="hljs-attribute">text-decoration</span>: none<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0.8em</span><br>    <span class="hljs-selector-pseudo">&amp;:hover</span><br>      <span class="hljs-attribute">text-decoration</span>: none<br>  <span class="hljs-selector-class">.hide-btn</span><br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span><br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span><br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">22px</span><br>    <span class="hljs-attribute">position</span>: absolute<br>    <span class="hljs-attribute">left</span>: -<span class="hljs-number">21px</span><br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span><br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1em</span><br>    <span class="hljs-attribute">text-decoration</span>: none<br>    <span class="hljs-attribute">text-align</span>: center<br>    <span class="hljs-attribute">display</span>: none<br>    <span class="hljs-attribute">flex-direction</span>: column<br>    <span class="hljs-attribute">background-color</span>: highlight-background<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4px</span><br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.1em</span> <span class="hljs-number">0</span> <span class="hljs-number">0.6em</span><br>    <span class="hljs-attribute">transition</span>: top ease <span class="hljs-number">0.35s</span><br>    <span class="hljs-selector-pseudo">&amp;:hover</span><br>      <span class="hljs-attribute">text-decoration</span>: none<br>  <span class="hljs-selector-class">.fa-angle-up</span>,<br>  <span class="hljs-selector-class">.fa-angle-down</span><br>    <span class="hljs-attribute">font-family</span>: font-icon<br>    <span class="hljs-attribute">font-style</span>: normal<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ca0c16</span><br>  <span class="hljs-selector-class">.fa-angle-up</span><span class="hljs-selector-pseudo">:before</span><br>    <span class="hljs-attribute">content</span>:<span class="hljs-string">&quot;\f106&quot;</span><br>  <span class="hljs-selector-class">.fa-angle-down</span><span class="hljs-selector-pseudo">:before</span><br>    <span class="hljs-attribute">content</span>:<span class="hljs-string">&quot;\f107&quot;</span><br>    <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">0.5em</span><br></code></pre></td></tr></table></figure><p>重启项目，查看效果。</p><h4 id="2-4-5-修改光标样式"><a href="#2-4-5-修改光标样式" class="headerlink" title="2.4.5.修改光标样式"></a>2.4.5.修改光标样式</h4><p>将鼠标样式更改为这个可爱的形状。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:09-01:13:45-image-20220409011325987.png" alt="image-20220409011325987" style="zoom: 50%;" /></p><p>在自定义css中添加如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span>, <span class="hljs-selector-tag">header</span>, <span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.mask</span><span class="hljs-selector-class">.flex-center</span>, <span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.scroll-down-bar</span>, <span class="hljs-selector-id">#banner</span><span class="hljs-selector-class">.banner</span>, <span class="hljs-selector-tag">h1</span>,<span class="hljs-selector-tag">h2</span>,<span class="hljs-selector-tag">h3</span>,<span class="hljs-selector-tag">h4</span>,<span class="hljs-selector-tag">h5</span>,<span class="hljs-selector-tag">h6</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a11.cur</span>), auto;<br>&#125;<br><br><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>, <span class="hljs-selector-tag">button</span><span class="hljs-selector-pseudo">:hover</span>, <span class="hljs-selector-tag">i</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a22.cur</span>), auto;<br>&#125;<br><br><span class="hljs-selector-id">#rightside</span>&gt;<span class="hljs-selector-tag">div</span>&gt;<span class="hljs-selector-tag">button</span>,<br><span class="hljs-selector-id">#rightside</span>&gt;<span class="hljs-selector-tag">div</span>&gt;<span class="hljs-selector-tag">a</span> &#123;<br>    <span class="hljs-attribute">display</span>: block;<br>    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">2px</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--btn-color);<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a22.cur</span>), auto;<br>&#125;<br><br><span class="hljs-comment">/* 文章标签 */</span><br><span class="hljs-selector-class">.layout_post</span> <span class="hljs-selector-class">.tag_share</span> <span class="hljs-selector-class">.post-meta__tags</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a22.cur</span>), auto;<br>&#125;<br><span class="hljs-comment">/* 评论区 */</span><br><span class="hljs-selector-class">.vcol</span> * &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a22.cur</span>), auto;<br>&#125;<br><span class="hljs-selector-class">.v</span><span class="hljs-selector-attr">[data-class=v]</span> <span class="hljs-selector-class">.vicon</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a22.cur</span>), auto;<br>&#125;<br><span class="hljs-selector-class">.v</span><span class="hljs-selector-attr">[data-class=v]</span> <span class="hljs-selector-class">.vbtn</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a22.cur</span>), auto;<br>&#125;<br><span class="hljs-comment">/* 回复 */</span><br><span class="hljs-selector-class">.vat</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a22.cur</span>), auto;<br>&#125;<br><span class="hljs-comment">/*分页器*/</span><br><span class="hljs-selector-id">#pagination</span> <span class="hljs-selector-class">.page-number</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/a22.cur</span>), auto;<br>&#125;<br><span class="hljs-comment">/* 分页器的三个点(...) */</span><br><span class="hljs-selector-class">.space</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#00c4b6</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在有链接的地方光标形状会变为一个小手，其余地方光标会是一个小箭头。实质上是在css中规定了光标在什么位置用什么图片来显示光标。代码的前三行尽可能覆盖了所有位置，确保光标显示不会失效；其余的代码都是在判断各种需要跳转链接的条件。注意进行此项美化会导致<strong>大量的网络请求</strong>（虽然不会有大数据传输，但大量请求仍然很慢），其直观表现就是<strong>网页加载变慢</strong>。</p><h4 id="2-4-6-加宽文章显示框"><a href="#2-4-6-加宽文章显示框" class="headerlink" title="2.4.6.加宽文章显示框"></a>2.4.6.加宽文章显示框</h4><p>fluid主题默认的文本主体框在中间，右边是目录，左边空着。这样既不好看，空间利用也不好。打开浏览器检查页面元素，可以看到文章主体的“盒子”名称为<code>#board.py-5</code>。可以直接在自定义css中修改其属性，向左偏移，宽度增加。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.col-lg-8</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-class">.container</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-id">#board</span><span class="hljs-selector-class">.py-5</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">123%</span>;<br>    <span class="hljs-attribute">left</span>: -<span class="hljs-number">23%</span>; <br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">767px</span>) &#123;<br>    <span class="hljs-selector-class">.col-lg-8</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-class">.container</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-id">#board</span><span class="hljs-selector-class">.py-5</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>; <br>    &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">424px</span>) &#123;<br>    <span class="hljs-selector-class">.col-lg-8</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-class">.container</span><span class="hljs-selector-class">.nopadding-x-md</span> &gt; <span class="hljs-selector-id">#board</span><span class="hljs-selector-class">.py-5</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>; <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>注意此主体所有中间页面都叫这个名称，但是在除了文章页以外的地方没有右侧的目录，所以需要用父类确定是文章页的文章主体盒子。</p><p>在稍窄的屏幕上（对应于平板竖屏）右侧的目录栏不显示，在更窄的屏幕上（对应于手机竖屏）文章主体框塞满屏幕。此时再偏移会导致无法阅读，因此应当对屏幕分辨率不同时做不同设计，没有目录时也不加偏移。</p><h4 id="2-4-7-修改目录样式"><a href="#2-4-7-修改目录样式" class="headerlink" title="2.4.7.修改目录样式"></a>2.4.7.修改目录样式</h4><p>默认的目录样式不会改变字体颜色，只是左边有一个小线提醒。这样不够显眼，用起来不方便。我们可以将其改成字体和底色都带颜色的样式。观察定义文章样式的源码文件<code>Blog/node_modules/hexo-theme-fluid/source/css/_pages/_post/post.styl</code>，可以发现定义目录的css块类名。在自定义css中添加如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.tocbot-active-link</span> &#123;<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>    <span class="hljs-comment">/*color var(--link-hover-color)*/</span><br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#800000</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#FA807233</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>&#125;<br><span class="hljs-selector-class">.toc-list-item</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#800000</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用上述代码可以将背景改为粉色，字体和左侧提示线都是红色，且加上了圆角。</p><h3 id="2-5-自定义js"><a href="#2-5-自定义js" class="headerlink" title="2.5.自定义js"></a>2.5.自定义js</h3><h4 id="2-5-1-光标跟随小星星"><a href="#2-5-1-光标跟随小星星" class="headerlink" title="2.5.1.光标跟随小星星"></a>2.5.1.光标跟随小星星</h4><p>如图所示，移动光标时后面跟随产生小星星。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:09-01:43:44-image-20220409014335320.png" alt="image-20220409014335320" style="zoom:50%;" /></p><p>在<code>[Blog]/sources</code>文件夹下新建js文件夹，新建<code>star.js</code>文件，写入如下代码。修改<code>_config.fluid.yml</code>文件，添加自定义js文件。<code>custom_js: &quot;/js/star.js&quot;</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs js">(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title function_">i</span>(),<br>        <span class="hljs-title function_">a</span>()<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;mousemove&quot;</span>, o),<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;touchmove&quot;</span>, e),<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;touchstart&quot;</span>, e),<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>, n)<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">t</span>) &#123;<br>        d = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>,<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span><br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">t</span>) &#123;<br>        <span class="hljs-keyword">if</span> (t.<span class="hljs-property">touches</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; t.<span class="hljs-property">touches</span>.<span class="hljs-property">length</span>; i++) <span class="hljs-title function_">s</span>(t.<span class="hljs-property">touches</span>[i].<span class="hljs-property">clientX</span>, t.<span class="hljs-property">touches</span>[i].<span class="hljs-property">clientY</span>, r[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * r.<span class="hljs-property">length</span>)])<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">t</span>) &#123;<br>        u.<span class="hljs-property">x</span> = t.<span class="hljs-property">clientX</span>,<br>        u.<span class="hljs-property">y</span> = t.<span class="hljs-property">clientY</span>,<br>        <span class="hljs-title function_">s</span>(u.<span class="hljs-property">x</span>, u.<span class="hljs-property">y</span>, r[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * r.<span class="hljs-property">length</span>)])<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">t, i, n</span>) &#123;<br>        <span class="hljs-keyword">var</span> e = <span class="hljs-keyword">new</span> l;<br>        e.<span class="hljs-title function_">init</span>(t, i, n),<br>        f.<span class="hljs-title function_">push</span>(e)<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">h</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-number">0</span>; t &lt; f.<span class="hljs-property">length</span>; t++) f[t].<span class="hljs-title function_">update</span>();<br>        <span class="hljs-keyword">for</span> (t = f.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; t &gt;= <span class="hljs-number">0</span>; t--) f[t].<span class="hljs-property">lifeSpan</span> &lt; <span class="hljs-number">0</span> &amp;&amp; (f[t].<span class="hljs-title function_">die</span>(), f.<span class="hljs-title function_">splice</span>(t, <span class="hljs-number">1</span>))<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title function_">requestAnimationFrame</span>(a),<br>        <span class="hljs-title function_">h</span>()<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">character</span> = <span class="hljs-string">&quot;*&quot;</span>,<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeSpan</span> = <span class="hljs-number">100</span>, <span class="hljs-comment">// 就靠它调整速度啦</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">initialStyles</span> = &#123;<br>            <span class="hljs-attr">position</span>: <span class="hljs-string">&quot;fixed&quot;</span>,<br>            <span class="hljs-attr">top</span>: <span class="hljs-string">&quot;0&quot;</span>,<br>            <span class="hljs-attr">display</span>: <span class="hljs-string">&quot;block&quot;</span>,<br>            <span class="hljs-attr">pointerEvents</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>            <span class="hljs-string">&quot;z-index&quot;</span>: <span class="hljs-string">&quot;10000000&quot;</span>, <span class="hljs-comment">// 覆盖在最上层显示</span><br>            <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&quot;20px&quot;</span>,<br>            <span class="hljs-string">&quot;will-change&quot;</span>: <span class="hljs-string">&quot;transform&quot;</span><br>        &#125;,<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, i, n</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">velocity</span> = &#123;<br>                <span class="hljs-attr">x</span>: (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() &lt; <span class="hljs-number">.5</span> ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>) * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">1.25</span>), <span class="hljs-comment">// 横向发散的程度</span><br>                <span class="hljs-attr">y</span>: <span class="hljs-number">1</span><br>            &#125;,<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span> = &#123;<br>                <span class="hljs-attr">x</span>: t - <span class="hljs-number">5</span>, <span class="hljs-comment">// 出小星星相对于光标尖尖的位置</span><br>                <span class="hljs-attr">y</span>: i - <span class="hljs-number">15</span><br>            &#125;,<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">initialStyles</span>.<span class="hljs-property">color</span> = n,<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(n),<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;span&quot;</span>),<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>.<span class="hljs-property">innerHTML</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">character</span>,<br>            <span class="hljs-title function_">c</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">initialStyles</span>),<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>(),<br>            <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>)<br>        &#125;,<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">update</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> += <span class="hljs-variable language_">this</span>.<span class="hljs-property">velocity</span>.<span class="hljs-property">x</span>,<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> += <span class="hljs-variable language_">this</span>.<span class="hljs-property">velocity</span>.<span class="hljs-property">y</span>,<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeSpan</span>--,<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>.<span class="hljs-property">style</span>.<span class="hljs-property">transform</span> = <span class="hljs-string">&quot;translate3d(&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> + <span class="hljs-string">&quot;px,&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> + <span class="hljs-string">&quot;px,0) scale(&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeSpan</span> / <span class="hljs-number">120</span> + <span class="hljs-string">&quot;)&quot;</span><br>        &#125;,<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">die</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>)<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params">t, i</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n <span class="hljs-keyword">in</span> i) t.<span class="hljs-property">style</span>[n] = i[n]<br>    &#125;<br>    <span class="hljs-keyword">var</span> r = [<span class="hljs-string">&quot;#D61C59&quot;</span>, <span class="hljs-string">&quot;#E7D84B&quot;</span>, <span class="hljs-string">&quot;#1B8798&quot;</span>],<br>    d = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>,<br>    u = (<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>, &#123;<br>        <span class="hljs-attr">x</span>: d / <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">y</span>: d / <span class="hljs-number">2</span><br>    &#125;),<br>    f = [];<br>    <span class="hljs-title function_">t</span>()<br>&#125;)();<br></code></pre></td></tr></table></figure><p>修改代码中的数字可以自定义显示效果（已经给出注释）。顺带一提，听说<strong>js写成一行运行效率高</strong>。对js序列化时别忘了去掉注释，否则注释后面的代码就全注释掉了。</p><h4 id="2-5-2-看板娘"><a href="#2-5-2-看板娘" class="headerlink" title="2.5.2.看板娘"></a>2.5.2.看板娘</h4><p>在页面右下角添加一个人偶，添加后如图所示。人物的眼神可以跟着鼠标走，点击可以发出声音并显示对话框（我嫌占地方，没配置对话框）。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:09-19:52:05-image-20220409171852339.png" alt="image-20220409171852339" style="zoom: 33%;" /></p><p>制作2D会动的人物一般需要自己制作模型或者购买模型。官方有几个免费的模型，我们直接使用。添加自定义js如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">Live</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;script&#x27;</span>);<br><span class="hljs-title class_">Live</span>.<span class="hljs-property">src</span> = <span class="hljs-string">&quot;https://eqcn.ajz.miesnfu.com/wp-content/plugins/wp-3d-pony/live2dw/lib/L2Dwidget.min.js&quot;</span>;<br><span class="hljs-title class_">Live</span>.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    L2Dwidget.<span class="hljs-title function_">init</span>(&#123;<br>        <span class="hljs-string">&quot;model&quot;</span>: &#123;<br>            <span class="hljs-attr">jsonPath</span>: <span class="hljs-string">&quot;https://unpkg.com/live2d-widget-model-shizuku@1.0.5/assets/shizuku.model.json&quot;</span>,<br>            <span class="hljs-string">&quot;scale&quot;</span>: <span class="hljs-number">1</span><br>        &#125;,<br>        <span class="hljs-string">&quot;display&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;right&quot;</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span> * <span class="hljs-number">0.07</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span> * <span class="hljs-number">0.14</span>,<br>            <span class="hljs-string">&quot;hOffset&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;vOffset&quot;</span>: -<span class="hljs-number">30</span><br>        &#125;,<br>        <span class="hljs-string">&quot;mobile&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;show&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;scale&quot;</span>: <span class="hljs-number">0.5</span><br>        &#125;,<br>        <span class="hljs-string">&quot;react&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;opacityDefault&quot;</span>: <span class="hljs-number">0.7</span>,<br>            <span class="hljs-string">&quot;opacityOnHover&quot;</span>: <span class="hljs-number">0.2</span><br>        &#125;<br>    &#125;);<br>&#125;;<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(<span class="hljs-title class_">Live</span>);<br></code></pre></td></tr></table></figure><p>需要修改模型的话直接更改第六行的模型名称即可。共有如下可选项。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs json">live2d-widget-model-chitose<br>live2d-widget-model-epsilon2_1<br>live2d-widget-model-gf<br>live2d-widget-model-haru/<span class="hljs-number">01</span> (use npm install --save live2d-widget-model-haru)<br>live2d-widget-model-haru/<span class="hljs-number">02</span> (use npm install --save live2d-widget-model-haru)<br>live2d-widget-model-haruto<br>live2d-widget-model-hibiki<br>live2d-widget-model-hijiki<br>live2d-widget-model-izumi<br>live2d-widget-model-koharu<br>live2d-widget-model-miku<br>live2d-widget-model-ni-j<br>live2d-widget-model-nico<br>live2d-widget-model-nietzsche<br>live2d-widget-model-nipsilon<br>live2d-widget-model-nito<br>live2d-widget-model-shizuku<br>live2d-widget-model-tororo<br>live2d-widget-model-tsumiki<br>live2d-widget-model-unitychan<br>live2d-widget-model-wanko<br>live2d-widget-model-z16<br></code></pre></td></tr></table></figure><h3 id="2-6-修改主题源码"><a href="#2-6-修改主题源码" class="headerlink" title="2.6.修改主题源码"></a>2.6.修改主题源码</h3><p><strong>注意</strong>：直接对主题的样式配置文件<code>Blog/node_modules/hexo-theme-fluid/source/css/_pages/_base/rewrite.styl</code>的修改有可能在主题升级的时候被覆盖而丢失。我修改这个文件完全是因为我无法通过css的方式来修改某些属性。</p><blockquote><p><strong>2022.4.9更新</strong> 我学会用css啦，以后不必再修改主题源码，修改自定义css就好，这样更改不会被更新覆盖掉。</p></blockquote><h4 id="2-6-1-图片阴影和圆角"><a href="#2-6-1-图片阴影和圆角" class="headerlink" title="2.6.1.图片阴影和圆角"></a>2.6.1.图片阴影和圆角</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// hexo-theme-fluid/source/css/_pages/_base/rewrite.styl</span><br><span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">img</span>, <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">a</span> &gt; <span class="hljs-selector-tag">img</span><br>    <span class="hljs-attribute">max-width</span> <span class="hljs-number">90%</span><br>    <span class="hljs-attribute">margin</span> <span class="hljs-number">1.3rem</span> auto<br>    <span class="hljs-attribute">display</span> block<br>    <span class="hljs-comment">/* box-shadow $img-shadow */</span><br>    <span class="hljs-attribute">box-shadow</span> <span class="hljs-number">1px</span> <span class="hljs-number">2px</span> <span class="hljs-number">26px</span> <span class="hljs-number">1px</span> rgba(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">3</span>)<br>    <span class="hljs-attribute">border-radius</span> <span class="hljs-number">12px</span><br>    <span class="hljs-attribute">background-color</span> transparent<br></code></pre></td></tr></table></figure><p>将其原本的<code>p &gt; img</code>属性修改成这样，添加了圆角和阴影，使其与代码块风格一致。</p><h4 id="2-6-2-修改代码块样式"><a href="#2-6-2-修改代码块样式" class="headerlink" title="2.6.2.修改代码块样式"></a>2.6.2.修改代码块样式</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// hexo-theme-fluid/source/css/_pages/_base/rewrite.styl</span><br><span class="hljs-selector-tag">figure</span><span class="hljs-selector-class">.highlight</span><br>  <span class="hljs-attribute">position</span> relative<br><br>  <span class="hljs-selector-tag">table</span><br>    <span class="hljs-attribute">border</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">margin</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">0.4em</span><br>    <span class="hljs-attribute">width</span> auto<br>    <span class="hljs-attribute">border-radius</span> <span class="hljs-number">8px</span><br>    <span class="hljs-attribute">background-color</span> rgb(<span class="hljs-number">246</span>,<span class="hljs-number">248</span>,<span class="hljs-number">250</span>)<br></code></pre></td></tr></table></figure><p>修改了代码块的下圆角（上圆角在自定义css中上栏那里控制）以及背景颜色，减小了上间距以便配合上栏。如果想要将其修改为vscode默认深色主题那样，可以在此处和自定义css中一起修改背景色，并在主题配置文件<code>_config.fluid.yml</code>中修改代码高亮方案。</p><blockquote><p>实际上这么做有点问题，代码块由三部分组成，顶栏，左侧的行号，以及代码部分。三个部分的交界处会露出一条底色线：博客亮色显示下，黑代码块露色，灰代码块看不出来；博客暗色显示下，灰代码块露色，黑代码块看不出来。印象中给div块加一个几px的边框可以解决这个问题，但我尝试加边框并没有看到效果。</p></blockquote><p>下面是对代码块更具体的设置：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// hexo-theme-fluid/source/css/_pages/_base/rewrite.styl</span><br><span class="hljs-selector-tag">td</span><span class="hljs-selector-class">.gutter</span><br>    <span class="hljs-attribute">display</span> table-cell<br>    <span class="hljs-attribute">position</span> sticky<br>    <span class="hljs-attribute">left</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">z-index</span> <span class="hljs-number">1</span><br><span class="hljs-comment">// 左侧的行号 底色</span><br>    <span class="hljs-selector-pseudo">&amp;:not</span>(.hljs)<br>      <span class="hljs-attribute">border-top-right-radius</span> <span class="hljs-number">0</span><br>      <span class="hljs-attribute">border-bottom-right-radius</span> <span class="hljs-number">0</span><br>      <span class="hljs-attribute">background-color</span> rgb(<span class="hljs-number">246</span>,<span class="hljs-number">248</span>,<span class="hljs-number">250</span>) // <span class="hljs-number">#f6f8fa00</span><br><span class="hljs-comment">// 左侧的行号 字体</span><br>    pre<br>      <span class="hljs-attribute">text-align</span> right<br>      <span class="hljs-attribute">overflow-x</span> none<br>      <span class="hljs-attribute">overflow-y</span> none<br>      <span class="hljs-attribute">padding</span> <span class="hljs-number">0</span> <span class="hljs-number">0.75rem</span><br>      <span class="hljs-attribute">line-height</span> <span class="hljs-number">1.45</span> // 酌情调整，和代码行高不一样会导致对不齐<br>      <span class="hljs-attribute">background-color</span> inherit<br>      <span class="hljs-attribute">border-radius</span> initial<br>      <span class="hljs-attribute">border-right</span> <span class="hljs-number">1px</span> solid <span class="hljs-number">#999</span> // 行号右侧的分割线，暗色主题下可以改成白色<br>  <span class="hljs-comment">// 右侧代码区域     </span><br><span class="hljs-selector-tag">td</span><span class="hljs-selector-class">.code</span> &gt; pre<br>    <span class="hljs-attribute">border-top-left-radius</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">border-bottom-left-radius</span> <span class="hljs-number">0</span><br>    <span class="hljs-attribute">border-style</span> <span class="hljs-number">3px</span> solid rgb(<span class="hljs-number">246</span>,<span class="hljs-number">248</span>,<span class="hljs-number">250</span>)<br>    <span class="hljs-attribute">background-color</span> rgb(<span class="hljs-number">246</span>,<span class="hljs-number">248</span>,<span class="hljs-number">250</span>)<br></code></pre></td></tr></table></figure><h4 id="2-6-3-加粗样式"><a href="#2-6-3-加粗样式" class="headerlink" title="2.6.3.加粗样式"></a>2.6.3.加粗样式</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// hexo-theme-fluid/source/css/_pages/_base/rewrite.styl</span><br><span class="hljs-comment">// Rewrite github-markdown.css</span><br><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-comment">// 在下面添加以下控制加粗的样式</span><br><span class="hljs-selector-tag">strong</span><br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#be0000</span><br>    <span class="hljs-attribute">font-weight</span>: bold<br></code></pre></td></tr></table></figure><p>只能修改<code>markdown-body</code>类下的<code>strong</code>，不能全局修改<code>strong</code>，不然博客标题也会调用这个样式变成红色。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:07-14:03:03-image-20220407140138411.png" alt="image-20220407140138411"></p><h4 id="2-6-4-减小文字页边距"><a href="#2-6-4-减小文字页边距" class="headerlink" title="2.6.4.减小文字页边距"></a>2.6.4.减小文字页边距</h4><p>fluid主题本来中间文字框已经不大了，再加上边距，实际文字占宽度一半不到。这或许美观，但不实用。可以将页边距从10%改为5%，视觉上内容会充实许多。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">// hexo-theme-fluid/source/css/_pages/_post/post.styl</span><br><span class="hljs-selector-class">.post-content</span>, post-custom<br>  <span class="hljs-attribute">box-sizing</span> border-box<br>  <span class="hljs-attribute">padding-left</span> <span class="hljs-number">5%</span><br>  <span class="hljs-attribute">padding-right</span> <span class="hljs-number">5%</span><br></code></pre></td></tr></table></figure><p>$\ $</p><h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><ol><li><a href="https://hexo.io/zh-cn/docs/"><u><em>hexo官方文档</em></u></a></li><li><a href="https://nodejs.org/en/"><u><em>node.js官方文档</em></u></a></li><li><a href="https://git-scm.com"><u><em>git官网</em></u></a></li><li><a href="https://www.bilibili.com/video/BV1Yb411a7ty"><u><em>程序羊的hexo博客搭建视频</em></u></a></li><li><a href="https://github.com/fluid-dev/hexo-theme-fluid/releases"><u><em>fluid主题官方下载</em></u></a></li><li><a href="https://hexo.fluid-dev.com/docs/"><u><em>fluid官方文档</em></u></a> </li><li><a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html#默认配置文件"><u><em>picgo官方配置文档</em></u></a></li><li><a href="https://jin-yuhan.github.io/posts/60584518/"><u><em>jin-yuhan的博客</em></u></a></li><li><a href="https://blog.jijian.link/2020-02-26/hexo-article-code-add-unfold/"><u><i> linx(544819896@qq.com)的博客</i></u></a></li><li><a href="https://blog.csdn.net/printf_hello/article/details/115453735"><u><em>Live2D看板娘使用&amp;示例</em></u></a></li></ol>]]></content>
    
    
    <categories>
      
      <category>知识积累</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Mac中一些有用的冷门命令</title>
    <link href="/2022/04-06-e7beb15ab2ea/"/>
    <url>/2022/04-06-e7beb15ab2ea/</url>
    
    <content type="html"><![CDATA[<h1 align="center">Mac中一些有用的冷门命令</h1><p>苹果系统自带的设置可以调整许多设置，但不是全部。有些设置隐藏在“百度区”中，只有在受其困扰遂上网搜索时才会发现。本文收集了一些我自己用到过的指令并解释了其用法，希望能对大家有所帮助。打开Terminal，输入本文提到的命令，探索新大陆。</p><p><strong>不要随便在命令行中输入你不了解的指令</strong>，正如不要随便安装你不了解的软件。它们可能会修改系统文件对你的使用体验造成不可逆的影响，也可能在系统中你不知道的位置留下一点足迹（俗称“拉屎”），日积月累磁盘空间就被蚕食掉了。本文提到的指令都配套了与之对应的解除此设置的指令，如果你不喜欢某设置可以改回去，<strong>不会对你的系统造成影响</strong>。</p><p>$\ $</p><h2 id="1-日常"><a href="#1-日常" class="headerlink" title="1.日常"></a>1.日常</h2><h3 id="1-1-解决软件打不开"><a href="#1-1-解决软件打不开" class="headerlink" title="1.1.解决软件打不开"></a>1.1.解决软件打不开</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">sudo xattr -r -d com.apple.quarantine [你软件的.app绝对路径]<br></code></pre></td></tr></table></figure><p>系统会自动为一些文件打上“备份”的属性标签，包括来自网络的文件以及自己写的脚本等。被打上此标签的可执行程序是不允许执行的。例如，如果你写了一个脚本就像在Windows和Linux中常做的那样，无论是执行需要何种权限的命令，也无论脚本类型是<code>.sh</code>,<code>.command</code>,<code>.bash</code>或者是根本没有拓展名，你的脚本是根本不可能双击执行的，一定会显示权限不够。</p><p>这条语句可以去除这个“备份”标签，解除这个障碍（当然你得手动给你的脚本<code>+x</code>的权限，这在任何系统中都一样）。这不会对你正常使用文件产生任何影响。</p><h3 id="1-2-解决conda环境自动激活"><a href="#1-2-解决conda环境自动激活" class="headerlink" title="1.2.解决conda环境自动激活"></a>1.2.解决conda环境自动激活</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">true</span><br>conda config --<span class="hljs-built_in">set</span> auto_activate_base <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>有时我们不希望所有的环境都混在一起，但是自从安装了conda，每次打开命令行都会自动激活base环境。可以通过以上语句控制base环境是否自动开启。</p><h3 id="1-3-控制Dock栏自动隐藏的动画速度"><a href="#1-3-控制Dock栏自动隐藏的动画速度" class="headerlink" title="1.3.控制Dock栏自动隐藏的动画速度"></a>1.3.控制Dock栏自动隐藏的动画速度</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo defaults write com.apple.Dock autohide-delay -<span class="hljs-built_in">float</span> 0 &amp;&amp; killall Dock<br>sudo defaults delete com.apple.Dock autohide-delay &amp;&amp; killall Dock<br></code></pre></td></tr></table></figure><p>苹果默认的动画很丝滑，但不是所有人都愿意看过渡动画。有些人就是喜欢“来也匆匆去也匆匆”的系统，那么可以使用以上指令修改系统关闭或开启此动画。也可以尝试修改其中的值来调整到合适的速度。</p><p>注意<code>&amp;&amp;</code>用来连接先后执行的两条指令，在此设置中<code>killall Dock</code>必不可少，只有Dock自动重启后修改的设置才会生效。</p><h3 id="1-4-修改启动台图标数量"><a href="#1-4-修改启动台图标数量" class="headerlink" title="1.4.修改启动台图标数量"></a>1.4.修改启动台图标数量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo defaults write com.apple.dock springboard-columns -int 10<br>sudo defaults write com.apple.dock springboard-rows -int 8<br>killall Dock<br></code></pre></td></tr></table></figure><p>启动台图标很大，有些人安装了很多软件以至于想要使用时不好找（当然也可以用“聚焦”来快速搜索，但是谁能记住所有软件的名字呢）。使用上述指令可以调整启动台默认展示图标的列数、行数。只有Dock自动重启后修改的设置才会生效。</p><p>注意行列数改多不会让图标间隔变小，只会让图标变小。苹果的图标全部是按照像素点点对点制作，缩放后可能看着有点模糊。默认的数值是5行7列，我实际体验下来还是默认的最好用。</p><h3 id="1-5-在Dock栏上添加空白分隔"><a href="#1-5-在Dock栏上添加空白分隔" class="headerlink" title="1.5.在Dock栏上添加空白分隔"></a>1.5.在Dock栏上添加空白分隔</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">defaults write com.apple.dock persistent-apps -array-add <span class="hljs-string">&#x27;&#123;&quot;tile-type&quot;=&quot;spacer-tile&quot;;&#125;&#x27;</span>; killall Dock<br>defaults write com.apple.dock persistent-others -array-add <span class="hljs-string">&#x27;&#123;tile-data=&#123;&#125;; tile-type=&quot;spacer-tile&quot;;&#125;&#x27;</span>; killall Dock<br></code></pre></td></tr></table></figure><p>Dock栏上有时软件会很多，看起来眼花缭乱不方便找软件，此时可以使用上面的指令为Dock栏添加几个空白，可以随意将它们拖到合适的地方。如果不需要这空白了，只要像移除Dock栏上的其他图标一样拖出去即可删除。本质上此指令是修改Dock栏配置文件，添加一个不指向任何东西的空白图标。</p><p>注意Dock栏中的短竖线左侧为软件区域，右侧为文件及文件夹区域，左右两侧的空白不互通，对应的两条指令也不同。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:03-13:56:18-image-20220403135431099.png" alt="image-20220403135431099" style="zoom:50%;" /></p><h3 id="1-6-查看系统唤醒"><a href="#1-6-查看系统唤醒" class="headerlink" title="1.6.查看系统唤醒"></a>1.6.查看系统唤醒</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pmset -g assertions<br></code></pre></td></tr></table></figure><p>一般来说苹果电脑关盖就会进入睡眠状态，立即将所有内存数据写入磁盘，几个小时后断开除内存外其他所有硬件的电源。这种睡眠方式理论上是非常省电的，但是系统有可能会被一些情况唤醒，甚至是频繁唤醒，导致电量快速消耗。使用此指令可以检查电脑被什么进程唤醒了，如果是系统进程可以考虑是否要关闭，如果是第三方软件可以考虑是否要卸载（本人有强迫症对流氓软件零容忍）。</p><h3 id="1-7-设置电脑名称"><a href="#1-7-设置电脑名称" class="headerlink" title="1.7.设置电脑名称"></a>1.7.设置电脑名称</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo scutil --<span class="hljs-built_in">set</span> HostName Mac<br></code></pre></td></tr></table></figure><p>一般来说命令行会显示你在系统偏好设置“共享”中设置的电脑名，但是也有些特殊情况，比如路由器DHCP服务突然挂了，它会给电脑分配一个169.254网段的地址，电脑此时就会自动改名为“bongu”，网络恢复后不会恢复，更改共享中的电脑名也不会恢复。不影响什么，但是使用命令行时看着心里不舒服。此时可以使用这条指令改名。</p><h3 id="1-8-显示隐藏文件"><a href="#1-8-显示隐藏文件" class="headerlink" title="1.8.显示隐藏文件"></a>1.8.显示隐藏文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo defaults write com.apple.finder AppleShowAllFiles TRUE &amp;&amp; killall Finder<br></code></pre></td></tr></table></figure><p>一般来说苹果电脑会自动隐藏掉<code>隐藏文件</code>，因为那些配置文件和软件运行库文件夹不是普通用户需要操心的，隐藏掉看起来会非常整洁。不过我等程序员显然不喜欢自己电脑用起来像别人的电脑。虽然使用<code>⌘+⇧+.</code>可以临时控制显示或者隐藏文件，但是每次重启电脑都要重新选择显示所有文件，这样不够elegant。使用此命令可以直接设置默认始终显示隐藏文件。参考前面的几条指令，将<code>TRUE</code>替换为<code>FALSE</code>可以设置默认不显示隐藏文件，将<code>write</code>替换为<code>delete</code>可以删除刚刚设置的默认配置。</p><h3 id="1-9-设置环境变量"><a href="#1-9-设置环境变量" class="headerlink" title="1.9.设置环境变量"></a>1.9.设置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/</span><br><span class="hljs-built_in">export</span> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/<br><span class="hljs-built_in">export</span> CLASSPAHT=.:<span class="hljs-variable">$JAVA_HOME</span>/lib/dt.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/tools.jar<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><br><span class="hljs-comment">#/Library/Java/apache-maven-3.8.4</span><br><span class="hljs-built_in">export</span> MAVEN_HOME=/Library/Java/apache-maven-3.8.4/<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$MAVEN_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><br><span class="hljs-comment">#/usr/local/mysql</span><br><span class="hljs-built_in">export</span> PATH=/usr/local/mysql/bin:<span class="hljs-variable">$PATH</span><br><br><span class="hljs-comment">#/usr/local/mongodb</span><br><span class="hljs-built_in">export</span> PATH=/usr/local/mongodb/bin:<span class="hljs-variable">$PATH</span><br><br><span class="hljs-built_in">alias</span> ll=<span class="hljs-string">&#x27;ls -l&#x27;</span><br><span class="hljs-built_in">alias</span> python=<span class="hljs-string">&#x27;python3&#x27;</span><br><span class="hljs-built_in">alias</span> aaasss=<span class="hljs-string">&#x27;cd ~/Desktop/桌面文件/Blog&#x27;</span><br><span class="hljs-built_in">alias</span> aaaddd=<span class="hljs-string">&#x27;open ~/Desktop/桌面文件/Blog/source/_posts&#x27;</span><br><br><span class="hljs-comment"># /usr/local/lib/node_modules/picgo/bin/picgo</span><br><span class="hljs-built_in">export</span> PATH=/usr/local/bin:/usr/local/sbin:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> PATH=/usr/local/lib/node_modules/picgo/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>显示隐藏文件后，在用户家目录下可以看到一个隐藏文件<code>.bash_profile</code>，这就是用户环境变量，你可以仿照我的写法写适合你自己的环境变量。还能看到一个隐藏文件名为<code>.zshrc</code>，这是zsh的默认配置文件，在用户打开Terminal时自动加载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span><br><span class="hljs-comment"># !! Contents within this block are managed by &#x27;conda init&#x27; !!</span><br>__conda_setup=<span class="hljs-string">&quot;<span class="hljs-subst">$(&#x27;/Users/zql/miniforge3/bin/conda&#x27; &#x27;shell.zsh&#x27; &#x27;hook&#x27; 2&gt; /dev/null)</span>&quot;</span><br><span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-variable">$__conda_setup</span>&quot;</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;/Users/zql/miniforge3/etc/profile.d/conda.sh&quot;</span> ]; <span class="hljs-keyword">then</span><br>        . <span class="hljs-string">&quot;/Users/zql/miniforge3/etc/profile.d/conda.sh&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;/Users/zql/miniforge3/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">unset</span> __conda_setup<br><span class="hljs-comment"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span><br><br><span class="hljs-built_in">source</span> ~/.bash_profile<br></code></pre></td></tr></table></figure><p>​    <code>.zshrc</code>中的前14行都由我安装Miniforge时自动生成，这是控制conda环境的语句。第16行由我自己添加，这一句的意思是，每次打开黑窗口时自动刷新一次环境变量。使用这个方法可以在日常使用开发工具时解决复杂的环境问题，也可以使用<code>alias</code>语法自定义常用的指令。</p><p>注意使用此方式配置的环境变量只能在用户自己点击Terminal时使用。软件在调用命令时不会加载环境变量，因此找不到目录时可能要考虑使用完整绝对路径。例如我在使用typora搭配picgo配置图床时typora一直显示找不到指令。</p><h3 id="1-10-切换最高权限"><a href="#1-10-切换最高权限" class="headerlink" title="1.10.切换最高权限"></a>1.10.切换最高权限</h3><p>Mac购买之初会要求创建一个用户，此用户为管理员账户，但在Terminal中一般运行在普通权限下，需要特殊权限比如<code>sudo</code>的时候会要求用户输入密码。在图形界面下不能指定使用管理员用户，也就是不能像linux直接使用root用户操作那样。但是在Terminal中可以切换到管理员权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo su <span class="hljs-comment"># 管理员权限</span><br><span class="hljs-built_in">exit</span> <span class="hljs-comment"># 退出此状态</span><br></code></pre></td></tr></table></figure><p>值得注意的是，此状态权限仍小于“系统权限”，比如<code>/usr/bin</code>这个目录无论如何你是无法编辑的，因为Mac有系统完整性保护(SIP)。而且最新的机器似乎保护更严格，即使关闭了SIP仍然不能编辑系统某些内容（比如删掉系统自带某些软件），因为它们是“只读的镜像”，这可能是通过其特殊的文件系统实现的。</p><p>顺带一提，电脑中<strong>只有一个用户时不要给用户改名</strong>。如果想改名可以通过新建一个用户然后将其加入管理员用户组。直接改名会导致直接失去管理员权限，然后你就没权限新建一个管理员了🤪。当然已经跳坑了也有办法解决，进启动界面用安全模式命令行新建一个管理员账户。这个操作在M1芯片和Intel芯片的Mac上不同，具体请参考官方客服。</p><h2 id="2-defaults命令"><a href="#2-defaults命令" class="headerlink" title="2.defaults命令"></a>2.defaults命令</h2><p>plist文件在macOS中被用来记录系统的各种<strong>偏好设置</strong>，所有与系统有关的设置项文件都在<code>/Library/Preferences</code>中。使用defaults命令可以修改这些设置甚至是写入自己的设置。设置项可能导致软件崩溃，移除设置项可以直接删除配置文件或者使用给出的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 读取所有设置项</span><br>defaults <span class="hljs-built_in">read</span> [DOMAIN]<br><span class="hljs-comment"># 读取某设置项</span><br>defaults <span class="hljs-built_in">read</span> [DOMAIN] [PROPERTY_NAME]<br><span class="hljs-comment"># 设置某设置项</span><br>defaults write [DOMAIN] [PROPERTY_NAME] [VALUE] <br><span class="hljs-comment"># 重制某个设置项</span><br>defaults delete [DOMAIN] [PROPERTY_NAME] <br><span class="hljs-comment"># 重制某个设置</span><br>defaults delete [DOMAIN] <br></code></pre></td></tr></table></figure><h2 id="3-xattr命令"><a href="#3-xattr命令" class="headerlink" title="3.xattr命令"></a>3.xattr命令</h2><p>Mac OS X 10.4及更高版本通过使用HFS+文件系统属性文件B<em>树功能支持<em>*扩展属性</em></em>。每个属性由一个名称和相关数据组成，该名称是一个以<code>\0</code>截止的Unicode字符串。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 显示所有扩展属性名称，效果与&quot;ls -l@&quot;相同</span><br>xattr [-lrsvx] file ...<br><span class="hljs-comment"># 显示与给定属性名称关联的值。通常是字符串，但如果有空值则以16进制显示</span><br>xattr -p [-lrsvx] attr_name file ...<br><span class="hljs-comment"># 给一个属性设置一个值</span><br>xattr -w [-rsx] attr_name attr_value file ...<br><span class="hljs-comment"># 将某属性以及与之对应的值一起删除</span><br>xattr -d [-rsv] attr_name file ...<br><span class="hljs-comment"># 清除所有属性以及与之对应的值</span><br>xattr -c [-rsv] file ...<br><span class="hljs-comment"># 显示一个简短的帮助信息并立即退出</span><br>xattr -h | --<span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><p>可选选项：</p><ul><li><code>-l</code>，将表单和值对应起来进行显示</li><li><code>-r</code>，递归地处理</li><li><code>-s</code>，如果文件参数是符号链接，对符号链接本身采取行动而不是它指向的文件</li><li><code>-v</code>，强制运行结果中显示文件名（默认只有一个文件时不现实文件名）</li><li><code>-x</code>，强制属性值用16进制表示</li></ul><p>这个东西官方还做了C语言的API，但是咱平时也用不着，这里就不写了，官方文档放上：<a href="https://www.unix.com/man-page/mojave/2/listxattr"><u><em>显示xattr</em></u></a>，<a href="https://www.unix.com/man-page/mojave/2/getxattr"><u><em>获取xattr</em></u></a>，<a href="https://www.unix.com/man-page/mojave/2/setxattr"><u><em>设置xattr</em></u></a>，<a href="https://www.unix.com/man-page/mojave/2/removexattr"><u><em>移除xattr</em></u></a>。</p><h2 id="4-pmset命令"><a href="#4-pmset命令" class="headerlink" title="4.pmset命令"></a>4.pmset命令</h2><p>在macOS中系统偏好设置提供的<strong>电源设置</strong>项显然太少了。您能分辨这些情况下电脑中的程序是否还会运行吗？</p><ul><li>不关盖，放至黑屏后</li><li>不关盖，按指纹键锁屏</li><li>插着电源关盖</li><li>插着电源关盖，然后拔出电源</li><li>不插电源关盖，然后插入电源</li></ul><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:05-19:21:19-image-20220405174159263.png" alt="image-20220405174159263" style="zoom: 33%;" /></p><p>实际上，macOS的<code>pmset</code>命令为我们提供了更丰富的设定。以下介绍参考了<a href="https://en.wikipedia.org/wiki/Pmset"><u><em>维基百科</em></u></a>。</p><h3 id="4-1-选择设置对象"><a href="#4-1-选择设置对象" class="headerlink" title="4.1.选择设置对象"></a>4.1.选择设置对象</h3><p>设置的对象默认为全部场景，否则请指定场景。指定场景命令不能单独使用，必须和其他指令组合使用，否则不会生效。</p><ul><li><code>-c</code>（充电器），调整连接到充电器时使用的设置</li><li><code>-b</code>（电池），调整使用本机电池时使用的设置</li><li><code>-u</code>（UPS），调整运行UPS时使用的设置</li><li><code>-a</code>（所有，默认）调整所有场景的设置</li></ul><h3 id="4-2-设置唤醒、睡眠、开机或关机"><a href="#4-2-设置唤醒、睡眠、开机或关机" class="headerlink" title="4.2.设置唤醒、睡眠、开机或关机"></a>4.2.设置唤醒、睡眠、开机或关机</h3><p>可以根据一周中任意的一天和时间组合重复发生，也可以设置在未来的日期和时间。语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pmset [repeat, schedule] [<span class="hljs-built_in">sleep</span>, wake, poweron, shutdown, wakeorpoweron] [&lt;MTWRFSU&gt; &lt;<span class="hljs-built_in">date</span>/time&gt;]<br></code></pre></td></tr></table></figure><p>schedule参数用于设置一次性电源事件，repeat用于设置每日或每周事件。事件的调度只能由特权用户完成。每次设置都会覆盖以前的设置，因此想要设置多个触发事件必须在一个命令字符串中输入它们。schedule参数识别以下附加参数：</p><ul><li>类型。sleep、wake、poweron、shutdown或wakeorpoweron</li><li>日期和时间（仅限schedule）。格式为”MM/dd/yy HH:mm:ss”必须为24小时格式，必须加引号</li><li>时间（仅repeat）。格式为HH:mm:ss；必须为24小时格式，但不必加引号</li><li>工作日。MTWRFSU的子集，如M、MTWRF、weekdays、weekends和everyday都可以</li><li>所有者。描述是谁正在安排电源事件的人或程序（可选）</li></ul><blockquote><p>举例：要将一周中每天的关机事件设置为23:59，并将一周中每天的唤醒或开机事件设置为7:00</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pmset repeat shutdown MTWRFSU 23:59:00 wakeorpoweron MTWRFSU 7:00:00<br></code></pre></td></tr></table></figure></blockquote><p>语法限制很严格，任何错误都将导致命令失败，并将显示一条简短的帮助消息。计划事件设置存储在专用硬件中，因此“黑苹果”上此功能可能不稳定。重复事件存储在<code>/Library/Preferences/SystemConfiguration/com.apple.AutoWake.plist</code>中，此文件可以使用<code>defaults</code>命令手动编辑，但更改有可能被覆盖；更改后不会立即生效。</p><h3 id="4-3-查看所有电源管理配置项"><a href="#4-3-查看所有电源管理配置项" class="headerlink" title="4.3.查看所有电源管理配置项"></a>4.3.查看所有电源管理配置项</h3><p><code>-g</code>显示有关当前电源管理配置的信息，或最近活动的日志。如果没有提供其他参数，仅显示当前设置；如果后面跟了其他参数则显示此参数的详细设置项。如果提供了多个参数，那么只有第一个参数是有用的，多余的参数会被忽略。</p><ul><li><code>-g live</code>，显示当前正在使用的设置</li><li><code>-g custom</code>，显示所有电源的自定义设置</li><li><code>-g cap</code>，显示机器支持哪些电力管理功能</li><li><code>-g sched</code>，显示计划启动、唤醒或关闭、睡眠事件</li><li><code>-g ps / batt</code>，显示电池和 UPS 的状态</li><li><code>-g pslog</code>，显示电源（电池或者 UPS）状态的连续日志</li><li><code>-g rawlog</code>，显示直接读取电池的电池状态的连续日志</li><li><code>-g therm</code>，显示影响 CPU 速度的温度阈值。不适用于全部平台</li><li><code>-g thermlog</code>，显示影响 CPU 速度的温度的通知日志。不适用于全部平台</li><li><code>-g assertions</code>，显示电量提醒的概要。此提醒可以阻止系统睡眠或显示器睡眠。适用于 10.6 及更新版本</li><li><code>-g assertionslog</code>，显示电量提醒的日志。适用于 10.6 及更新版本</li><li><code>-g sysload</code>，显示“系统负载顾问”——。适用于 10.6 及更新版本</li><li><code>-g ac/adapter</code>，显示关于交流电源适配器的详情。只有 MacBoook 和 MacBook Pro 支持。</li><li><code>-g log</code>，显示睡眠，唤醒及其他电源管理时间的历史。这个日志只提供给管理员和调试目的</li><li><code>-g uuid</code>，显示当前活跃的睡眠、唤醒的 UUID。</li><li><code>-g uuidlog</code>，显示当前活跃的睡眠、唤醒的 UUID，并且打印一个新的被系统设置的 UUID</li><li><code>-g history</code>，一个调试工具。当使用启动参数 io=0x3000000 被启用时，打印系统睡眠唤醒的 UUID 的时间线。</li><li><code>-g powerstate</code>，打印当前为 IO Kit 驱动电源状态。调用者应该至少提供一个 IO Kit 类名来作为参数。如果没有类名被听过，它将打印全部驱动的电源状态。</li><li><code>-g stats</code>，打印自系统启动以来睡眠和唤醒系统的计数。</li><li><code>-g systemstate</code>，打印当前系统的电量状态和可用能力。</li><li><code>-g everything</code>，打印每个参数。这是一个有用的快速收集所有 pmset 提供的输出。适用于 10.8。</li></ul><h3 id="4-4-配置休眠和安全睡眠选项"><a href="#4-4-配置休眠和安全睡眠选项" class="headerlink" title="4.4.配置休眠和安全睡眠选项"></a>4.4.配置休眠和安全睡眠选项</h3><p>pmset可以识别以下参数，它们可以按任何顺序给出。任何错误的语法或无法识别的参数都将导致整个命令失败，这会在屏幕上打出一个log和一个简短的帮助文档。电源管理设置只能使用sudo权限修改。</p><p>通过pmset进行的所有更改都将保存在<code>/Library/Preferences/SystemConfiguration/com.apple.PowerManagement.plist</code>的持久首选项文件中。可以使用<code>defaults</code>命令手动修改此文件，但电源管理系统不会立即处理这些更改。对配置文件的手动编辑有可能被覆盖。<code>pmset touch</code>命令将从磁盘上重读现有设置并应用。</p><ul><li><code>displaysleep</code>，控制显示器无操作几分钟后灭屏，0以禁用显示睡眠</li><li><code>disksleep</code>，控制磁盘几分钟无操作后自动断电，0以禁用磁盘睡眠</li><li><code>sleep</code>，无操作几分钟后系统睡眠（所有程序暂停），0以禁用睡眠</li><li><code>womp</code>，允许以太网数据包唤醒，设为1以启用或0以禁用。只有当设备插入电源时才会显示此设置，否则运行“pmset -g”时不会有womp设置项</li><li><code>hibernatemode</code>，更改休眠模式。（<strong>0/3/25以外的选项慎用</strong>）<ul><li>0，休眠时只有内存通电</li><li>1，内存数据写入磁盘，然后电脑完全断电</li><li>3，内存数据写入磁盘，同时保持内存供电</li><li>5，与模式1大致相同，但适合安全地处理虚拟内存的数据</li><li>7，与模式3大致相同，但适合安全地处理虚拟内存的数据</li><li>25，与模式1大致相同，用于Mac OS X 10.7中的休眠</li></ul></li><li><code>hibernatefile</code>，更改休眠时内存映象储存的位置。只能位于根卷上</li><li><code>ring</code>，允许通过调制解调器唤醒，1启用或0禁用</li><li><code>autorestart</code>，电池寿命检测到损耗时自动重启，1启用或0禁用</li><li><code>dps</code>，根据负载动态地调整处理器速度，1启用或0禁用</li><li><code>reduce</code>，保持降低处理器速度，1启用或0禁用</li><li><code>powerbutton</code>，按下电源键时进入睡眠而不是关机，1启用或0禁用</li><li><code>powernap</code>，让机器即使在睡眠时也能保持最新状态（接收更新和时钟同步等），1可以启用，0可以禁用</li><li><code>lidwake</code>，（仅限笔记本）开盖时唤醒机器，1启用或0禁用</li><li><code>acwake</code>，（仅限笔记本）当电源更换（插上或拔下充电线）时唤醒机器，1启用或0禁用</li><li><code>lessbright</code>，（仅限笔记本）切换到指定电源时略微调低显示屏亮度，1启用或0禁用</li><li><code>halfdim</code>，显示器睡眠时将亮度调到一半，1启用或0禁用</li><li><code>sms</code>，（仅支持笔记本）感受到加速度时自动锁定机械硬盘的磁头，1启用或0禁用</li><li><code>haltlevel</code>，（仅限UPS）当UPS仅剩某百分比电量时电脑自动关机</li><li><code>haltafter</code>，（仅限UPS）使用UPS供电指定分钟数后电脑自动关机</li><li><code>haltremain</code>，（仅限UPS）当UPS仅剩指定分钟数时电脑自动关机</li><li><code>ttyskeepawake</code>，当任何tty（例如远程登录会话）处于活动状态时阻止空闲系统睡眠，除非其空闲时间超过系统睡眠计时器，1启用或0禁用时，tty才处于非活动状态</li><li><code>autopoweroff</code>，（交流电源）如果系统支持的话，默认启用欧洲标准的能源节省计划。进入睡眠后超过设置的时间后，内存数据写入磁盘，进入低功率芯片组睡眠。从这种状态唤醒比从正常睡眠中醒来需要更长的时间。如果连接任何外设、或系统处于电池供电状态、或系统联网并启用了唤醒网络访问，系统将不会自动关机。1启用或0禁用</li><li><code>autopoweroffdelay</code>，（交流电源）设置进入自动关机模式前的时间，整数，以秒为单位</li><li><code>standbydelaylow</code>，将休眠映像写入磁盘并内存断电的等待时长。低电量时启用，整数，以秒为单位</li><li><code>standbydelayhigh</code>，将休眠映像写入磁盘并内存断电的等待时长。高电量时启用，整数，以秒为单位</li><li><code>networkoversleep</code>，此设置会影响macOS是否在睡眠期间显示共享网络服务。并非所有平台都使用此设置；不支持更改其值</li><li><code>destroyfvkeyonstandby</code>，进入睡眠模式时销毁文件保险库密钥。默认情况下，即使系统处于待机状态，文件保险库键也会保留。如果密钥被销毁，将提示用户在退出待机模式时输入密码。1 - 销毁，0 - 保留。由于系统必须完全关机，您还需要将“hibernatemode”设置为25。</li></ul><blockquote><p>举例：设置仅由电池供电时，10 分钟后进入睡眠状态，并在 5 分钟后将显示屏设置为睡眠状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pmset -b <span class="hljs-built_in">sleep</span> 10 displaysleep 5<br></code></pre></td></tr></table></figure><p>举例：当连着充电器时，设置30分钟后入睡，显示器设置为永不入睡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pmset -c <span class="hljs-built_in">sleep</span> 30 displaysleep 0<br></code></pre></td></tr></table></figure></blockquote><p>$\ $</p><h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><ol><li><a href="https://www.unix.com/man-page/mojave/2/listxattr"><u><em>unix官方文档：显示xattr</em></u></a></li><li><a href="https://www.unix.com/man-page/mojave/2/getxattr"><u><em>unix官方文档：获取xattr</em></u></a></li><li><a href="https://www.unix.com/man-page/mojave/2/setxattr"><u><em>unix官方文档：设置xattr</em></u></a></li><li><a href="https://www.unix.com/man-page/mojave/2/removexattr"><u><em>unix官方文档：移除xattr</em></u></a></li><li><a href="https://en.wikipedia.org/wiki/Pmset"><u><em>维基百科：pmset</em></u></a></li></ol>]]></content>
    
    
    <categories>
      
      <category>知识积累</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>制作视频外挂字幕</title>
    <link href="/2022/04-04-9dd8d2cc97df/"/>
    <url>/2022/04-04-9dd8d2cc97df/</url>
    
    <content type="html"><![CDATA[<h1 align="center">制作视频外挂字幕</h1><p>不知道有多少小伙伴有和我一样看网上视频课程喜欢下载下来（爬下来）看？这样视频倍速播放较为自由，还可以做音频处理、自己加字幕等等操作，让学习过程更为愉快。本文主要探讨加字幕过程。</p><p>$\ $</p><h2 id="1-方案调研"><a href="#1-方案调研" class="headerlink" title="1.方案调研"></a>1.方案调研</h2><p>视频加上了外挂字幕后，字幕形式可以随意调整成自己喜欢的样式，英文课程也可以使用机翻。对于课程加速后不容易听清的问题，加字幕也是一个很有效的辅助。但是如何制作字幕却是一个问题。我探索了一下github，看起来没什么很成熟可以拿来直接用的神经网络，网上也搜不到成熟的商业软件可以一站式解决这个需求。目前据我所知所有可行的方案有：</p><ul><li>Windows系统中使用华为电脑管家的智能字幕功能。不能自定义格式，可以中英翻译，略有滞后，准确性一般。</li><li>使用云服务商的实时语音转文本接口。大部分云服务商都提供完全免费的或数千小时免费的实时语音转文本服务。需要自己写程序和接口交互，需要自己处理分词间隔等问题，较麻烦，准确率一般，略有滞后，不支持翻译。</li><li>苹果App Store中由<code>Hangzhou Duoziwei Technology Co.Ltd</code>开发的软件<code>YPlayer</code>和<code>BeMyEars</code>软件。两个软件使用同一套引擎，前者是一个能实时显示多语言AI字幕的简陋播放器，支持文本导出（不是字幕导出。导出的文本没有时间戳），性能很差导出长视频字幕时会内存溢出卡死；后者是一个将麦克风音频实时识别字幕显示在屏幕上的纯实时字幕软件，性能同样很差，不支持导出，支持多语言识别。想要使用<code>BeMyEars</code>识别正在播放视频的字幕必须使用第三方Mac音频流控制软件如<a href="https://github.com/ExistentialAudio/BlackHole"><u>BlackHole</u></a>等将电脑扬声器重定向到电脑麦克风。</li><li><a href="https://jianwai.youdao.com"><strong><u>网易见外平台</u></strong></a>。一个免费的字幕制作平台，支持上传视频或者音频自动生成中英文srt字幕，但每天总时长不能超过两个小时。支持字幕中英机翻，不限量。</li><li><strong>剪映</strong>。字节跳动旗下的一款视频制作软件，有AI生成字幕功能，不限量，但字幕不能导出。</li></ul><p>截至本文上传日期，剪映仍然通过将音频分离出来上传到服务器再由服务器发回字幕的方式生成字幕，同时字幕在本地是实时缓存在文件中的，也就是说可以通过抓包或者读取本地项目缓存文件的方式获得字幕，然后解析其格式化文本生成srt字幕即可。获得srt字幕后可以在网易见外平台上翻译也可以在播放器中自定义喜欢的格式（比如我个人比较喜欢老莱视频中那样白字蓝边灰底的样式）。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:04-02:00:25-image-20220404011306278.png" alt="image-20220404011306278" style="zoom:50%;" /></p><h2 id="2-解析字幕"><a href="#2-解析字幕" class="headerlink" title="2.解析字幕"></a>2.解析字幕</h2><p>抓包比较麻烦，但得到的单个<code>json</code>文件字幕内容和时间戳在一起，比较容易处理；分析本地文件则比较复杂，因为剪映将字幕的内容和时间戳分开保存，需要一一配对生成字幕。下面演示分析本地文件生成字幕的方法。</p><p>使用剪映生成字幕很简单，这里略过。字幕生成成功后，通过这个我制作的<a href="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:03-21:44:39-%E5%89%AA%E6%98%A0%E5%AD%97%E5%B9%95%E5%AF%BC%E5%87%BA.html"><u><em>转换网页</em></u></a>，本地打开下载下来的<code>html文件</code>即可，按照网页中指示找到你使用的剪映版本项目缓存文件所在目录。里面众多<code>json</code>文件中会有一个<strong>体积明显比较大</strong>，就是它。</p><p>打开网页，调整设置。网页完全根据我自己的电脑分辨率适配，如果你的电脑上输入框溢出看不到右边的按钮，可以修改网页源代码40行和111行，修改其中的行列数值。</p><p>如果想要生成适合Linux中使用的字幕文件，换行符选择<code>\n</code>,其他系统中选择<code>\r\n</code>。这一设置影响不大，一般的播放器都能识别。按照你使用的剪映版本<strong>调整时间单位</strong>，电脑版选微秒，安卓版选毫秒。错误的设置生成的字幕会无法使用。网页提供了一个示例来测试你的设备是否能使用它。点击“生成srt”按钮，下方会生成字幕，有一个下载字幕的按钮可以调用浏览器下载功能将文件保存到本地。测试完成后点击“清空”按钮<strong>清空输入框内容</strong>。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:04-02:00:25-image-20220404014103436.png" alt="image-20220404014103436"></p><p>使用文本编辑器打开那个剪映项目缓存文件，将其中全部内容复制出来（<code>ctrl+A</code>,<code>ctrl+C</code>），粘贴到网页输入框中。由于文件通常很大，这个过程可能很卡，要卡半天。冷静、理智、稳重，<strong>慢慢等</strong>。复制完成后点击“生成srt”按钮，很快就会生成字幕。在下方生成的字幕旁边有下载字幕的按钮，点击下载即可。</p><p>接下来，enjoy your watching！</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>让你的PDF更容易阅读</title>
    <link href="/2022/04-03-a65539427ee0/"/>
    <url>/2022/04-03-a65539427ee0/</url>
    
    <content type="html"><![CDATA[<h1 align="center">让你的PDF更容易阅读</h1><p>许多人有“无纸化学习”的习惯，PDF版本的教材是其中十分重要的一环。然而，通过各种渠道找到的PDF版教材通常不怎么清晰，属于“能看，只能看一点点”的程度，一些背景不干净的PDF在电子墨水屏上看更是惨不忍睹。本文致力于对电子书做一些简单的图像处理以提高阅读体验。</p><p>$\ $</p><h2 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理"></a>1.原理</h2><p>本文中要处理的电子书特指扫描版PDF，一方面是因为这种类型的教材数量最多，而且文字版教材阅读方面可能存在的的主要问题是排版而不是文字。PDF文档格式简单来说是一种类似json的资源描述格式，它以每页为单位链接了若干对象，然后将对象的字节码或者二进制码直接插入其中（两种都支持，因此有的PDF用文本编辑器打开能看懂，有的就是乱码）。对于扫描PDF来说，它只是一堆图像的集合，不会有复杂的后处理和计算，因此可以通过直接处理其中的图像来达到目的。具体来说，处理过程分为拆分图片、处理图片、合并图片三部分。</p><p>对数字图像的任何处理都会造成其中包含总信息的损失，但是其中大部分是我们不需要的低频信息，使人能够认出来文字的信息多属于高频信息。可以通过一些图像变换牺牲掉一些无关紧要的低频信息来换取高频信息的加强。这也就是为什么有时候更清晰的图像可以反而体积更小</p><h2 id="2-第一步：拆分"><a href="#2-第一步：拆分" class="headerlink" title="2.第一步：拆分"></a>2.第一步：拆分</h2><p>科普几个图像格式，<code>jpeg</code>是有损压缩，目前在所有平台支持最好；<code>png</code>比<code>jpg</code>多一个透明图层，一般电脑截图是这种格式，但我们的PDF显然不含有透明图层，因此这种格式我们不采用；<code>tiff</code>是一个打包，它可以存储多种数据和标签，包括24位无压缩数据，因此我们将PDF拆分为图像时采用此格式，以便造保存所有信息方便后续处理得到质量更高的图像。格式灵活和丰富的缺点就是不实在所有设备上都支持得很好，因此各大PDF合并软件都默认对<code>tiff</code>格式图像合并时做一次格式转换，这一点后面会提到。</p><p>以Adobe Acrobat为例，如图所示导出图像。注意可以先在设置中<strong>设置导出质量为最高</strong>。另外，导出会有几百张图片，所以选择目录时请<strong>不要直接选择桌面</strong>，资源管理器会卡死。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:03-23:11:31-image-20220403213413071.png" alt="image-20220403213413071" style="zoom:50%;" /></p><h2 id="3-第二步：处理"><a href="#3-第二步：处理" class="headerlink" title="3.第二步：处理"></a>3.第二步：处理</h2><p>以Affinity Photo为例，其他P图软件也可以，步骤不会差太多。</p><h3 id="处理为白纸黑字"><a href="#处理为白纸黑字" class="headerlink" title="处理为白纸黑字"></a>处理为白纸黑字</h3><p>我随便找了张图片，色彩不是很均衡，按照箭头解锁图像然后将其处理为黑白。模式选择“正常”，这样将有底色的图像处理为纯黑白。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:03-23:11:31-image-20220403220451287.png" alt="image-20220403220451287" style="zoom:25%;" /></p><h3 id="调整曲线"><a href="#调整曲线" class="headerlink" title="调整曲线"></a>调整曲线</h3><p>还是点击这个黑白半圆选择处理类型，选择曲线。这个曲线是反映像素灰度数值(0-255)在全部像素中占比的二维曲线，图中红色的一条斜线代表不做变换，如图将左边向下拽、右边向上拽，代表将亮度小于一定数值的全部调整为纯黑，高于一定数值的全部调整为纯白。此操作可以提高图像对比度，并且让底色更白（对于比较干净的底色一般可以轻松调整至纯白）。注意曲线不要拉太多，拉太多会导致字边缘变成锯齿，字也会很细，读起来很费劲。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:03-23:11:31-image-20220403222448662.png" alt="image-20220403222448662" style="zoom: 50%;" /></p><h3 id="线性加深"><a href="#线性加深" class="headerlink" title="线性加深"></a>线性加深</h3><p>和上上步相同的步骤，选择黑白调整，此时在弹出来的面板中选择“线性加深”。此操作同样是灰度映射，它将灰度做一次线性映射，原本很黑的地方会变深很多，原本很白的地方变化很小。这非常适合处理扫描书籍。</p><p>可以看到现在已经获得了很清晰的字，如果有需要的话可以多次调整曲线和线性加深，直到文字清晰背景干净且保证书中插图不会黑成一团。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:03-23:11:31-image-20220403222420457.png" alt="image-20220403222420457" style="zoom: 33%;" /></p><p>接下来导出图片，有多种格式可以选择。此处不建议选择<code>tiff</code>，如前文所述这种格式虽然可以保证绝对清晰却不能保证可以显示。事实上如果非要使用<code>tiff</code>格式也是可以的，在Acrobat中手动一张一张插入图片不会做格式转换而是直接复制对象。但这种处理方式得到的PDF在除了Acrobat之外的其他任何阅读器中打开都只会显示空白页面。因此导出时最好选择最高清晰度<code>jpeg</code>格式。这样得到的图片体积大概会缩小$\frac{2}{3}$，清晰度下降不大。</p><h3 id="批量操作"><a href="#批量操作" class="headerlink" title="批量操作"></a>批量操作</h3><p>以上每一步操作可以录制为一个宏（操作脚本），应用于你一个批处理中所有的文件。按1箭头所指的按钮可以开始录制，你的操作结束后按2所指的按钮，然后按3所指的按钮将其保存为一个宏。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:03-23:11:31-image-20220403225516241.png" alt="image-20220403225516241" style="zoom: 50%;" /></p><p>如图新建一个批处理，选中你刚刚导出的所有图片，应用宏即可。很快就会完成任务。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:03-23:11:31-image-20220403225922251.png" alt="image-20220403225922251" style="zoom: 50%;" /></p><h2 id="4-第三步：合并"><a href="#4-第三步：合并" class="headerlink" title="4.第三步：合并"></a>4.第三步：合并</h2><p>Adobe Acrobat就有合并图片功能，直接合并即可。实测Mac上的Acrobat有BUG，在较大的文件合并时会直接卡死，大工程请用Windows或者换用其他软件。</p><p>这里提一个很好的命令行合并软件<a href="https://pypi.org/project/img2pdf/"><u>img2pdf</u></a>，使用python环境下的pip可以直接安装，安装好后直接命令行运行。此软件可以以高质量快速合并图片为PDF。此软件不支持我的ARM架构Mac。</p><p>经过一系列操作，你的PDF已经变得通透清晰了。Enjoy your reading.</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>图数据库调研报告</title>
    <link href="/2022/04-02-4211e3e3fc58/"/>
    <url>/2022/04-02-4211e3e3fc58/</url>
    
    <content type="html"><![CDATA[<h1 align='center'>图数据库调研报告</h1><h5 align='center'>2021-11-28</h5><p>我主要参考了<strong><em>《Demystifying Graph Databases: Analysis and Taxonomy of Data Organization, System Designs, and Graph Queries》</em></strong>这篇文章。它是2019年10月的一篇针对图数据库的综述，这篇综述本身引用了202篇参考文献，被引29次。文章中也提到，在这篇文章之前几乎没有专门针对图形数据库的系统方面的调查，只有几篇涵盖该领域小部分的简短论文(对几个系统、概念或技术的简要描述，对图处理质量的调查，以及几个系统的性能评估)。因此我主要解读这篇综述中对图数据库的介绍和总结，对其中的一些表述进行理解后的复述以及解释，并为了更好地说明图数据库基本特点对文章内容进行重新组合。</p><p>我选择的调研题目是图数据库的储存索引和查询优化。重点是各种图数据库类型分类以及它们的储存方式。储存方式的不同自然带来了不同的索引方式。索引方式各有千秋引出了查询的优化方案。</p><h1 align='center'><font size="6">目录</font></h1><p>点击相应标签可以直接跳转查看。</p><p>[TOC]</p><h1 id="1-储存"><a href="#1-储存" class="headerlink" title="1.储存"></a>1.储存</h1><p>论文中在对比了51个数据库后得到如下结论。</p><h2 id="1-1实现难点"><a href="#1-1实现难点" class="headerlink" title="1.1实现难点"></a>1.1实现难点</h2><ul><li>图的结构不规则，尺寸可能很大</li><li>处理过的图失去了局部性或者一些联系</li><li>图自身结构动态地变化且连接过于复杂</li><li>图的搜索遍历较为复杂，难以应对低延迟高吞吐量的需求</li><li>事务支持</li><li>与传统图数据结构算法不同，图数据结构算法通常是静态的和简单的数据，但是图数据库可能有丰富的附加数据如标签或键值对</li></ul><h2 id="1-2实现方法"><a href="#1-2实现方法" class="headerlink" title="1.2实现方法"></a>1.2实现方法</h2><ul><li>不使用表而使用边和顶点。尽管可以使用顶点和边组成的表，但是遍历查询等操作都依赖临界列表数组的存储方式。每个顶点的邻居可以通过连接到每个顶点的指针通过简单的内存查找来访问</li><li>数据结构分两种，原生图数据库或者使用其他数据库实现图的存储(宽列存储、文档存储和通用键值存储)</li><li>实现方式分两种，顶点和边可能属于不同的类型，并且可能与任意属性相关联；或者边或顶点可能具有权重或者有诸如时间戳之类的附加属性</li></ul><h2 id="1-3多种类别的图模型"><a href="#1-3多种类别的图模型" class="headerlink" title="1.3多种类别的图模型"></a>1.3多种类别的图模型</h2><p>图模型没有一个标准的概念，目前最流行的两个模型是RDF和LPG。RDF是一个定义明确的标准，但是它只支持简单的三元组(主体、谓词、客体)来表示从主语标识符通过谓词到客体的边。LPG允许顶点和边具有标签和属性，从而支持更自然的数据建模。尽管如此，它仍然不是标准化的，并且有许多变体。一些系统将标签的数量限制为只有一个。例如MarkLogicAllow允许顶点的属性，但不允许边的属性，因此可以将其视为LPG(顶点)和RDF(边)的组合。LPG模型中存储的数据可以转换为RDF。为了综合不同的LPG特性同时保持RDF的简单性等优点，一些研究人员提出并实现了对RDF的修改。例如三元组属性或将三元组附加到其他三元组。</p><p>在原生图形数据库中，虽然没有关注LPG的系统同时支持RDF，但一些RDF系统(例如Amazon Eptune)也支持LPG。许多其他类(KV值、文档储存、RDBMS、宽列储存、OODBMS)仅提供LPG(除了一些例外，例如oracle spatial and graph。后者建议使用相应的非图形数据模型(如文档集合)来表达LPG模型(比RDF模型)更容易。很少有系统既不使用RDF也不使用LPG。HyperGraphDB使用超图模型，而Gbase使用没有任何标签或属性的简单有向图模型。</p><p>在表示图结构时，许多图形数据库使用AL的变体，因为它使遍历邻域变得高效和简单。这包括基于LPG的原生图形数据库、KV存储、文档存储、宽列存储、元组存储和OODBMS类中的几个(但不是所有)系统。但是所考虑的RDF、RDBMS和数据中心系统都没有显式使用AL。这是因为底层数据模型的默认设计，例如RDBMS中的表或文档存储中的文档，并不经常使用AL。此外，绝大多数系统都没有使用未压缩的AM，因为它在$O(𝑛^2)$空间中的效率很低，特别是对于稀疏图。使用AM的系统侧重于压缩邻接矩阵来减少存储和查询开销(例如，GBASE)。在AL中效率低下的一个潜在原因是扫描所有的边来寻找给定顶点的邻居，为了缓解这一问题，可以采用索引结构。对于具有𝑛个顶点的图，这样的索引是指向各个邻域的指针数组，仅占用𝑂(𝑛)空间。</p><p>下面来详细介绍一下不同类型的图模型以及它们的特点。</p><h3 id="1-3-1简单图模型"><a href="#1-3-1简单图模型" class="headerlink" title="1.3.1简单图模型"></a>1.3.1简单图模型</h3><p>最简单的表示图的数据结构有邻接矩阵(AM)、邻接列表(AL)、边列表(EL)三种，它们都可以表示有向图或无向图。AM使用$O(n^2)$空间，可以在O(1)时间内检查两个顶点的连通性；AL占用O(𝑛+𝑚)空间，可以在$O(|𝐴𝑢|)⊆O(Degree_{max})$时间内检查连通性。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_4_Figure_3.png" alt="img" style="zoom:33%;" /></p><h3 id="1-3-2超图模型"><a href="#1-3-2超图模型" class="headerlink" title="1.3.2超图模型"></a>1.3.2超图模型</h3><p>任意边可以连接任意个点。超图的每一个定点至少属于一条边，也可以属于一条封闭的曲线。形式上，超图表示为元组(𝑉，𝐸)，𝑉是这个超图模型中所有顶点，𝐸是超边的集合，每个超边使用一组点表示，它是V的一个非空子集。例如：$V=\{a,b,c,d,e,f,g\}，E=\{abc,cde,def,efg\}$。</p><p>超图在图形数据库和图处理系统中很少使用。HyperGraphDB的基本构建块是点和超边的每个值，都有自己唯一的ID以及区分顶点和边的标签。顶点和超边也有类型ID(即标签ID)，还有一个递归结构，这个递归结构可以可以是另一个递归结构或二进制数据的值ID。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_19_Figure_11.png" alt="img" style="zoom:60%;" /></p><h3 id="1-3-3标记属性图-LPG"><a href="#1-3-3标记属性图-LPG" class="headerlink" title="1.3.3标记属性图(LPG)"></a>1.3.3标记属性图(LPG)</h3><p>经典的图模型tuple 𝐺=(𝑉，𝐸)对各种现实世界的问题进行建模还不够丰富，因此图形数据库经常使用标记属性图LPG(Label Property Graph Model，LPG)。每个顶点和边可以具有任意数量的属性。属性是一对(𝑘𝑒𝑦，𝑣𝑎𝑙𝑢𝑒)，其中Key标识属性，Value是该属性的相应值。</p><p>形式上，LPG被定义为元组$(𝑉ertex，𝐸dge，𝐿abel，𝑙_V，𝑙_E，𝐾ey，𝑊_{value}，𝑝_V，𝑝_E)$，其中𝐿是标签集，$L_V$和$L_E$分别代表V和E到L所有子集中某一个的一个映射因此，每个顶点和边都被映射到一个标号子集。顶点和边可以与任意数量的属性相关联，将属性建模为键-值对(𝑝=(𝑘𝑒𝑦，𝑣𝑎𝑙𝑢𝑒)，其中𝑘𝑒𝑦∈𝐾，𝑣𝑎𝑙𝑢𝑒∈𝑊。𝐾和𝑊是所有可能键和值的集合。$p_V$和$p_E$分别为获取某点和某边的属性键值对的集合的映射函数。</p><p>除了下文中要说的RDF系统或明确指出是其他系统外，下文要说到的所有系统实际上都使用LPG的某些变体。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_6_Figure_4.png" alt="img" style="zoom:60%;" /></p><p>上图为一个社交网络的子图，其中一个人可以认识其他人、发布消息和评论其他人的消息。</p><h3 id="1-3-4-LPG变体"><a href="#1-3-4-LPG变体" class="headerlink" title="1.3.4 LPG变体"></a>1.3.4 LPG变体</h3><p>Neo4j支持任意数量的顶点标签，但是它只允许每条边有一个标签(称为边缘类型)；ArangoDB只允许每个顶点一个标签和每个边一个标签，这便于将顶点和边分离到不同的文档集合中。</p><p>形式上，它使用𝐺=(𝑉，𝐸，𝐿)表示，其中𝑉是顶点集，𝐸是边集。此定义下允许两个点通过具有不同标签的多条边连接。</p><h3 id="1-3-5资源描述框架RDF"><a href="#1-3-5资源描述框架RDF" class="headerlink" title="1.3.5资源描述框架RDF"></a>1.3.5资源描述框架RDF</h3><p>资源描述框架(RDF)是用于表示信息的规范集合。它是由万维网联盟(W3C)于1999年推出的，RDF规范的最新版本(1.1)于2014年发布。它的目标是实现一种简单的格式，允许在不同格式的数据之间轻松交换数据。它在描述不规则连接的数据时特别有用。</p><p>RDF模型的核心部分是一个三元组的集合。每个三元组由主体、谓词、客体组成，因此RDF数据库通常也称为三重存储。主语可以是标识符(称为统一资源标识符(URI))，也可以是空白节点(即虚拟标识符)。客体可以是URI、空白节点或值较为简单的文字。使用三元组可以将标识符与标识符连接或将标识符与文字连接。谓词使用另一个URI命名。</p><h4 id="Cray图引擎"><a href="#Cray图引擎" class="headerlink" title="Cray图引擎"></a>Cray图引擎</h4><p>Cray Graph Engine(CGE)是一个三元组存储，可以扩展到无数个RDF三元组。CGE不存储三元组而是存储四元组(4元组)，其中第四个元素是ID。因此，可以在一个CGE数据库中存储多个图。CGE中的四元组按照它们的谓词和它们所属的图的标识符进行分组。因此，对于一组这样的四元组，只需要存储具有子对象和对象的对。这些主体-客体对存储在哈希表中(每组一个哈希表)。由于每个主体和客体被表示为唯一的48位整数标识符(HURI)，因此可以将主体-客体对打包成12个字节并存储在32位无符号整数数组中，从而最终减少了所需的存储量。</p><h4 id="AllegroGraph和BlazeGraph"><a href="#AllegroGraph和BlazeGraph" class="headerlink" title="AllegroGraph和BlazeGraph"></a>AllegroGraph和BlazeGraph</h4><p>一些RDF存储允许显式地将属性附加到三元组。AllegroGraph允许在创建三元组时定义每个三元组的任意属性集，但是这些属性不可变。BlazeGraph是RDF的一种扩展，允许将三元组附加到三元组谓词。和普通的RDF类似，顶点可以使用三元组来存储标签和属性。但是与普通的RDF相比，使用RDF可以更自然地表示LPG边缘：边可以存储为三元组，边属性可以通过其他三元组链接到边三元组。</p><h3 id="1-3-6-LPG与RDF之间的转换"><a href="#1-3-6-LPG与RDF之间的转换" class="headerlink" title="1.3.6 LPG与RDF之间的转换"></a>1.3.6 LPG与RDF之间的转换</h3><p>要想在RDF模型中表示带标签的属性图需要把LPG顶点映射到URI，然后使用RDF三元组通过分别用RDF谓词和RDF对象表示属性键和属性值来将这些点与它们的LPG属性链接起来。</p><p>例如，对于具有ID vertex-id的顶点以及具有key property-key和value property-value的对应属性，可以创建一个RDF三元组(vertex-id、property-key、property-value)。类似地，可以通过为每个边赋予URI状态来表示RDF模型中的LPG图模型中的边并将边属性与类似于顶点的特定边链接起来：(边-id，属性-键，属性-值)。然后，必须使用两个三元组将每条边连接到其任意相邻顶点。最后，通过为顶点和边创建RDF三元组，LPG标签也可以以类似于属性的方式转换为RDF三元组使得谓词变成有标签的URI并包含该标签的字符串名。下图展示了将LPG图转换为RDF三元组的过程示例。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_6_Figure_5.png" alt="img" style="zoom:50%;" /></p><p>如果所有顶点和边只有一个标签，则可以省略标签的三元组，并将标签与顶点或边名称一起存储在标识符中。如下图例子：</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_7_Figure_6.png" alt="img" style="zoom:50%;" /></p><p>将RDF数据转换为LPG模型更为复杂，因为RDF谓词(通常会转换为边)是URI。因此，从RDF图转换为LPG图时必须将边映射到顶点并链接这些顶点，否则得到的LPG图可能会断开。有几种方案用于这样的RDF到LPG转换，例如以增加图大小为代价导出二部LPG图。</p><h2 id="1-4非图底层的系统存储方案"><a href="#1-4非图底层的系统存储方案" class="headerlink" title="1.4非图底层的系统存储方案"></a>1.4非图底层的系统存储方案</h2><p>很多不是专门为图数据设计的数据库也可以储存图数据模型，包括使用键值对、文档和元组、关系和表以及对象的数据库。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_10_Figure_7.png" alt="img" style="zoom:50%;" /></p><h3 id="1-4-1键-值对-key-value"><a href="#1-4-1键-值对-key-value" class="headerlink" title="1.4.1键-值对(key-value)"></a>1.4.1键-值对(key-value)</h3><p>键值存储是最简单的NoSQL存储方式。将数据存储为键-值对的集合，重点放在基于键的高性能和高度可伸缩的查找上。键和值的确切形式取决于特定的系统或应用程序。键可以是简单的(例如，URI或散列)，也可以是结构化的。值通常编码为字节数组，也就是说值的结构通常是无模式的。但是，键值存储还可以强加一些额外的数据布局从而构建无模式的值。根据键值存储的一般性质，可以有许多方式将图表示为KV值的集合。例如可以使用顶点标签作为键，将顶点的邻域编码为值。</p><h4 id="微软图引擎-Trinity"><a href="#微软图引擎-Trinity" class="headerlink" title="微软图引擎(Trinity)"></a>微软图引擎(Trinity)</h4><p>微软的图引擎是基于名为Trinity的分布式键值对。Trinity实现了全局可寻址的分布式RAM存储。在Trinity中，键称为cell ID，值称为cell(单元格)。一个cell可以保存不同数据类型的数据项，包括其他cell的ID。MS Graph Engine在Trinity KV存储层之上引入了一个图存储层，点存储在专用字段包含cell ID或ID的哈希值的cell中。与给定点𝑣相邻的边直接在v的cell中存储为𝑣邻域的ID列表。但是，如果边包含丰富的数据，则这样的边也可以和关联数据一起存储在单独的专用cell中。</p><h3 id="1-4-2文档-document"><a href="#1-4-2文档-document" class="headerlink" title="1.4.2文档(document)"></a>1.4.2文档(document)</h3><p>文档是一类文档存储的NoSQL数据库中的基本存储单元。这些文档存储在集合中多个文档集合构成一个数据库，使用所选的标准半结构化格式(例如JSON或XML)对文档进行编码。文档存储扩展了键值存储，因为文档可以被视为具有某种灵活模式的值。该模式由属性组成，其中每个属性都有一个名称以及一个或多个值。这样一个基于具有属性的文档允许各种值类型、键-值对存储和递归数据存储(属性值可以是列表或键值字典)</p><p>文档存储每个顶点都存储在一个顶点文档中。文档存储键值对的能力用于在相应的顶点文档中存储顶点标签和属性。然而，边存储的细节取决于系统：边可以存储在与每个边的源顶点对应的文档中，也可以存储在目的顶点的文档中。文档不会限制可以存储的键值，因此点和边可能具有不同的属性集。</p><h4 id="OrientDB"><a href="#OrientDB" class="headerlink" title="OrientDB"></a>OrientDB</h4><p>在OrientDB中，每个文档𝑑都有一个记录ID(RID)，由存储𝑑的文档集合的ID和偏移量(其在该集合中的位置)组成。文档之间的指针使用这些唯一的RID表示。orientDB引入了规则边和轻量级边。规则边存储在边的文档中，可以具有它们自己的相关键/值对(例如，对边缘属性或标签进行编码)。轻量级边则直接存储在相邻(源或目标)顶点的文档中。这样的边没有任何关联的键/值对。它们构造指向其他顶点的简单指针，并且它们被实现为文档RID。因此，顶点文档不仅存储顶点的标签和属性，还存储轻量级边的列表(作为与相邻顶点相关联的文档的RID的列表)，以及指向相邻规则边的指针列表(作为与这些规则边相关联的文档的RID的列表)。每条规则边都有指向存储源和目标顶点的文档的指针(RID)。每个点存储指向其传入和传出边的链接(RID)列表。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_20_Figure_12.png" alt="img" style="zoom:33%;" /></p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_20_Figure_13.png" alt="img" style="zoom:50%;" /></p><h4 id="ArangoDB"><a href="#ArangoDB" class="headerlink" title="ArangoDB"></a>ArangoDB</h4><p>ArangoDB将其文档保存为称为VelcyPack的二进制格式，这是JSON文档的压缩实现。文档可以存储在不同的集合中，并且具有key属性，该属性是给定集合中的唯一ID。与OrientDB不同，这些ID不是直接内存指针。为了保持图的特性，ArangoDB使用了点集合和边集合。前者是带有顶点文档的规则文档集合，顶点文档不存储关于相邻边的信息，这具有在添加或移除边时不必修改顶点文档的优点。边缘集合存储边缘文档。边缘文档有两个特定的属性：源和目的地，它们是与给定边连接的两个顶点相关联的文档的ID。ArangoDB的设计中有一个优化，可以防止读取顶点文档，并允许基于另一个边文档中的顶点ID直接访问一个边文档。这可以提高高速缓存效率，从而减少查询执行时间。</p><p>可以使用不同的文档集合来存储不同的边缘类型(例如，“Friend_of”或“Like”)。当检索以某种边类型为条件的边(例如，“Friend_of”)时，不必遍历整个邻接列表(所有“Friend_of”和“Like”边)，而是可以使用特定边缘类型(“Friend_Of”)的边缘来确定集合的目标。</p><h3 id="1-4-3元组-tuple"><a href="#1-4-3元组-tuple" class="headerlink" title="1.4.3元组(tuple)"></a>1.4.3元组(tuple)</h3><p>元组是元组存储的NoSQL存储方式的基础。元组存储是RDF存储的一种扩展：RDF存储被限制为三元组，而元组存储可以包含任意大小的元组。元组中的元素数量不是固定的，甚至在单个数据库中也是可以变化的。每个元组都有一个ID，该ID可以是直接指向内存的指针。元组的集合可以以不同的方式对图形建模。例如，一个大小为𝑛的元组可以存储指向包含顶点邻域的其他元组的指针。这种元组和图形数据之间的具体映射方式取决于不同的数据库。</p><h4 id="WhiteDB"><a href="#WhiteDB" class="headerlink" title="WhiteDB"></a>WhiteDB</h4><p>WhiteDB是一个元组存储，它允许分配任意元组长度以外的新记录(元组)。一些小的值和指向其他元组的指针直接存储在固定位置中，大型字符串保存在单独的存储区中。每个大值只存储一次，引用计数器随时跟踪引用它的元组的数量。WhiteDB只允许访问单个元组记录，例如，没有更高级的查询引擎或图形API允许执行获取另一个顶点的所有邻居的查询。但是可以使用元组作为顶点和边存储，通过内存指针将它们彼此链接起来。这有助于快速解析关于WhiteDB中任意不规则图形结构的各种查询。例如，可以将具有其属性的顶点𝑣存储为与𝑣相关联的元组中的连续字段，并在𝑣的元组中维护指向𝑣的选定邻域的指针。</p><h3 id="1-4-4表-table"><a href="#1-4-4表-table" class="headerlink" title="1.4.4表(table)"></a>1.4.4表(table)</h3><p>表是关系数据库管理系统(RDBMS)的基础。表由行和列组成，每行表示单个数据元素，单个列通常定义特定的数据属性。某些列可以定义数据元素的唯一ID，称为主键，可用于实现数据元素之间的关系。一对一或一对多关系可以用包含相关数据元素的主键副本(外键)的单个附加列来实现。可以使用包含相关数据元素的外键的专用表来实现多对多关系。</p><p>要将图建模为表的集合，可以将顶点和边实现为两个独立表中的行。每个顶点都有一个构成其ID的唯一主键。边可以通过以其外键形式引用它们的主键从而与它们的源顶点或目标顶点相关。LPG标签和属性以及RDF谓词可以用附加的列建模。</p><p>DBMS有两种类型：列RDBMS(不要与宽列存储混淆)和行RDBMS(也称为面向列或列和行)。它们在物理数据持久性方面有所不同。行RDBMS将表行存储在连续的内存块中。ColumnRDBMS连续存储表列。行RDBMS在只需要检索几行但需要检索它的所有列时效率更高，而列RDBMS在需要检索许多行但只需要几列时效率更高。使用RDBMS作为后端的图形数据库解决方案同时使用行RDBMS(例如，Oracle Spatialand Graph，基于MariaDB构建的OQGRAPH)和列RDBMS(例如，SAP HANA)。</p><h4 id="Oracle-Spatial-and-Graph"><a href="#Oracle-Spatial-and-Graph" class="headerlink" title="Oracle Spatial and Graph"></a>Oracle Spatial and Graph</h4><p>Oracle Spatial and Graph建立在Oracle数据库之上，它为图数据的管理和分析提供了一套丰富的工具。Oracle Spatial and Graph附带了一系列内置的并行图算法(例如，用于寻径、遍历、链接预测、PageRank等)。LPG和RDF模型均受支持。行的RDBMS表构成顶点，这些行之间的关系形成边。关联的属性和属性以键-值对的形式存储在单独的结构中。</p><h3 id="1-4-5对象-object"><a href="#1-4-5对象-object" class="headerlink" title="1.4.5对象(object)"></a>1.4.5对象(object)</h3><p>还可以使用面向对象的数据库管理系统(OODBMS)中的对象集合来建模图形。数据元素及其关系通过某种形式的指针链接的对象来实现。将图建模为对象的细节在很大程度上取决于特定的设计。</p><h4 id="VelocityGraph"><a href="#VelocityGraph" class="headerlink" title="VelocityGraph"></a>VelocityGraph</h4><p>VelocityGraph是依赖于VelocityDB分布式对象数据库的图形数据库。它的边、顶点以及边或顶点属性存储在包含对其他对象的引用的C#对象中。为了处理这种结构，VelocityGraphy引入了VertexType、EdgeType和PropertyType等抽象概念。每个对象都有一个指向它物理存储位置的唯一id。每个顶点和边都有一个类型(标签)，属性存储在字典中，点将相邻边储存在集合中。</p><h3 id="1-4-6宽列储存"><a href="#1-4-6宽列储存" class="headerlink" title="1.4.6宽列储存"></a>1.4.6宽列储存</h3><p>宽列存储结合了键值存储和关系表的不同功能。宽列存储将键映射到行(将键映射到值的KV存储)。每行可以有任意数量的cell，并且每个cell构成一个键-值对。因此，一行包含cell键到cell值的映射，有效地使宽列存储成为二维KV值(行键和cell键都标识特定值)。此外，宽列存储是一个表，其中cell键构成列名。但是与关系型数据库不同，同一表中的行之间的列名称和格式可能不同。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_21_Figure_14.png" alt="img" style="zoom:60%;" /></p><h4 id="Titan-and-JanusGrap"><a href="#Titan-and-JanusGrap" class="headerlink" title="Titan and JanusGrap"></a>Titan and JanusGrap</h4><p>Titan及其后续的JanusGraph建立在宽列储存之上。它们可以使用不同的宽列存储作为底层，例如Apache Cassandra。在这两个系统中，当存储图时，每行代表一个顶点。每个顶点属性和相邻边都存储在单独的单元中，因此一个边和该边的所有属性被编码在单个单元中。由于每行中的cell是按cell键排序的，因此此排序顺序可用于高效地查找cell。对于图，属性和边的cell键的选择是这样的：在对cell进行排序后，存储属性的cell首先出现，然后是包含边的cell。由于行是按键排序的，因此两个系统都会直接将表划分为所谓的平面，这些平面可以分布在多个数据服务器上。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_21_Figure_14.png" alt="img" style="zoom:60%;" /></p><h2 id="1-5原生图数据库系统"><a href="#1-5原生图数据库系统" class="headerlink" title="1.5原生图数据库系统"></a>1.5原生图数据库系统</h2><h3 id="1-5-1-直接指针"><a href="#1-5-1-直接指针" class="headerlink" title="1.5.1 直接指针"></a>1.5.1 直接指针</h3><h4 id="Neo4j"><a href="#Neo4j" class="headerlink" title="Neo4j"></a>Neo4j</h4><p>Neo4j是最流行的图数据库系统。Neo4j使用基于固定大小记录的存储设计实现LPG模型。顶点𝑣由顶点记录表示，该记录存储：(1)𝑣的标签、(2)指向𝑣属性的链表的指针、(3)指向与𝑣相邻的第一边的指针、(4)一些标志。边𝑒由边记录来表示，该边记录存储：(1)𝑒的sedge类型(标签)、(2)指向𝑒属性的链表的指针、(3)指向表示与𝑒相邻的顶点的两个顶点记录的指针、(4)指向两个相邻顶点的AL的指针、(5)一些标志。每个属性记录最多可以存储四个属性，具体取决于属性值的大小：大的值(例如，长字符串)存储在单独的动态存储中，在顶点和边记录之外允许记录一些较小的属性。此外，如果查询中没有访问任何属性，则根本不会加载它们。</p><p>顶点的AL的实现为双向链表。一条边只存储一次，但它是两个这样的链表的一部分(每个相邻顶点一个列表)。因此，一条边有两个指向前一条边的指针和两个指向下一条边的指针。两个顶点由一条“知道”边链接。两个顶点都维护属性的链接列表。边是两个双向链表的一部分，每个相邻顶点一个链表。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_22_Figure_16-16380682153473.png" alt="img" style="zoom:40%;" />   <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_23_Figure_17-16380682153474.png" alt="img" style="zoom:45%;" /></p><p>Neo4j中的一个核心概念是使用直接指针：顶点存储指向其邻居的物理分配的指针。因此，对于邻域查询或遍历，不需要索引，而是可以跟随直接指针(遍历中的根顶点除外)，因此查询复杂度不依赖于图的大小。相反，它只取决于被访问的子图有多大（也就是说，如果内存放不下整个图，那么执行速度基本取决于缓存和预取，运行时间可能显著增加）。</p><h3 id="1-5-2-B-树和位图"><a href="#1-5-2-B-树和位图" class="headerlink" title="1.5.2 B+树和位图"></a>1.5.2 B+树和位图</h3><h4 id="Sparksee-DEX"><a href="#Sparksee-DEX" class="headerlink" title="Sparksee/DEX"></a>Sparksee/DEX</h4><p>Sparksee是一个图数据库系统，以前称为DEX。Sparksee的顶点和边(都称为对象)都有唯一的ID。对于每个属性名称，都有一个关联的B+树，它将顶点和边ID映射到各自的属性值。从属性值到顶点和边ID的反向映射由位图维护，其中位设置为1表示对应的ID具有某个属性值。此外，每个顶点存储了表示输入边和输出边的两个位图，两个B+树维护有关边连接到哪些顶点的信息(每个边方向一个树)。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_23_Figure_18.png" alt="img" style="zoom:60%;" /></p><p>Sparksee是少数几个不基于记录的系统之一，它使用简化为B+树和位图。位图的使用允许以比特为单位执行某些操作。例如，如果要查找具有特定属性值的所有顶点，如“age”和“First Name”，只需找到与“age”和“First Name”属性相关联的两个位图，然后得到第三个位图，该位图是对这两个输入位图应用按位“与”运算的结果。</p><p>未压缩的位图可能会大的离谱。由于大多数图都是稀疏的，按顶点或边索引的位图大多包含零。可以把它们切割成32位簇来缩小这种稀疏位图的尺寸。如果簇包含非零位，则显式存储该位。这个位图然后由(簇-ID，位-数据)对的集合表示。这些对存储在排序树结构中，以实现高效的查找、插入和删除。</p><h3 id="1-5-3稀疏邻接矩阵"><a href="#1-5-3稀疏邻接矩阵" class="headerlink" title="1.5.3稀疏邻接矩阵"></a>1.5.3稀疏邻接矩阵</h3><h4 id="GBASE"><a href="#GBASE" class="headerlink" title="GBASE"></a>GBASE</h4><p>GBASE是一个只能表示有向图结构的系统，它既不存储属性，也不存储标签。GBASE的目标是保持图的邻接矩阵的压缩，这样就可以有效地检索选定顶点的所有输入和输出边，而不会产生令人望而却步的$𝑂(𝑛^2)$矩阵存储开销。同时，利用邻接矩阵可以在𝑂(1)时间内验证任意两个顶点是否连通。为了压缩邻接矩阵，GBASE将其切割成$𝐾^2$个块(每行和每列都有𝐾块)。因此，获取每个顶点的传入和传出邻居的查询只需要查询𝐾个块。可以针对特定数据库优化参数𝐾。当𝐾变小时，就必须检索更多的小文件。如果𝐾变大，文件会变少，但它们会变得更大，从而产生开销。当块只包含0或只包含1时，可以进行进一步的优化，这样可以实现更高的压缩率。</p><h1 id="2-索引"><a href="#2-索引" class="headerlink" title="2.索引"></a>2.索引</h1><p>大多数图形数据库系统都建立在现有的存储设计之上，包括键值存储、宽列存储、关系型数据库管理系统等，使用现有存储设计的优点是这些系统通常是成熟的和经过良好测试的。缺点是它们可能没有针对图形数据和图形查询进行完美优化。这就是原生图数据库试图解决的问题。</p><p>大多数图数据库系统都使用索引。然而，它们的确切目的在不同的系统之间差别很大。一般来说索引可以分为四类：存储顶点邻域的位置(称为“邻域索引”)，存储丰富图数据的位置(称为“数据索引”)，存储实际的图数据，以及维护与图形无关的数据(称为“结构索引”)。</p><h2 id="2-1索引的数据结构"><a href="#2-1索引的数据结构" class="headerlink" title="2.1索引的数据结构"></a>2.1索引的数据结构</h2><p>与键值存储的情况一样，所研究的图形数据库使用的记录可以是非结构化的(即，不具有诸如JSON的预先指定的格式)。它们也可以是结构化的：文档数据库通常使用JSON格式，宽列存储在每行中有一个键-值映射，面向行的RDBMS将每行分成列，OODBMS强加一些类定义，元组存储以及一些RDF存储使用元组。数据布局的细节(即顶点和边是如何在记录中精确表示和编码的)在不同的系统类中可能会有所不同。一些结构化系统仍然能够在其记录中实现高度灵活的结构。例如，使用JSON或宽列存储(如Titanand JanusGraph)的文档数据库允许为每个顶点和边提供不同的键值映射。其他基于记录的系统在其结构上更加固定。例如，在OODBMS中，必须为顶点和边属性的每个配置定义一个类。在RDBMS中，必须为每个顶点或边类型定义表。总体而言，这些系统中的大多数使用记录来存储顶点，最常见的情况是每条记录对应一个顶点。一些系统将边存储在单独的记录中，另一些系统将它们与相邻的顶点一起存储。如果要查找特定顶点的属性，则必须找到包含该顶点的记录，搜索属性或者直接存储在记录中，或者可以通过指针访问其位置。</p><p>一些系统(例如，Sparksee、一些三元组存储或面向列的RDBMS)不在专用记录中连续存储有关顶点和边的信息。相反，它们为每个属性或标签维护单独的数据结构。因此，关于给定顶点的信息分布在不同的结构上。如果想要找到某个特定顶点的属性，就必须在相关的数据结构(索引)中查询该属性，并找到给定顶点的值。这种使用的索引结构的示例是B+树(在Sparksee中)或哈希表(在某些RDF系统中)。</p><p>图数据结构的另一个方面是设计记录之间的邻接关系。可以为每条记录分配一个ID，然后通过ID将记录相互链接，或者可以使用直接内存指针。使用ID需要索引结构来查找物理存储与特定ID关联的记录的地址。直接内存指针不需要索引即可从一条记录遍历到其相邻记录。但是此时仍可使用索引，例如检索具有特定属性值的点，此情况下直接指针仅有助于解决折点之间的邻接查询。</p><p>有时，图形数据直接存储在索引中。三元组存储将索引用于主体、谓词和客体的各种排列，以高效地回答查询。Jena TBD将大量数据存储在这些索引中，但本身没有三元表，因为索引已经存储了所有必要的数据。HyperGraphDB使用键值索引(即Berkeley DB)来访问其物理存储。此外，该方法允许与引用计数共享基元数据值，从而使得多个相同的值仅存储一次。</p><p>也有一些其他数据布局优化。例如，CGE优化了存储来自其三元组/四元组的字符串的方式。考虑到许多三元组/四元组可能共享字符串，每个三元组/四元组存储多个长字符串的效率很低。因此，类似于许多其他RDF系统，CGE维护一个将字符串映射到唯一的48位整数标识符(HURI)的字典。为此，使用了两个分布式哈希表(一个用于将字符串映射到HURI，另一个用于将HURI映射到字符串)。加载时，对字符串进行排序，然后将其分配给HURI。这允许整数比较(等于、大于、小于等)以代替更昂贵的字符串比较。该方法被例如诸如WhiteDB的元组存储使用。</p><h2 id="2-2邻域索引类型"><a href="#2-2邻域索引类型" class="headerlink" title="2.2邻域索引类型"></a>2.2邻域索引类型</h2><p>主要用于加速邻接表的访问，以加速遍历查询。这种索引称为为以顶点为中心的索引。虽然允许每个顶点有多个以顶点为中心的索引，每个索引都针对不同的条件进行了优化，然后由查询优化器选择不同的条件，但也存在更简单的解决方案。LiveGraphs使用两级层次结构，在指向实际物理存储之前，第一级通过它们的标签来区分边。Graphflow将顶点的邻居索引到前向和后向邻接列表中，其中每个列表首先按边标签划分，然后按邻居顶点的标签划分。另一个例子是Sparksee，它使用各种不同的索引结构来查找相邻顶点和顶点的属性。</p><h2 id="2-3数据索引类型"><a href="#2-3数据索引类型" class="headerlink" title="2.3数据索引类型"></a>2.3数据索引类型</h2><p>这种索引主要是为了处理邻域信息以外的数据。例如，可以索引具有特定属性(值)的所有顶点。它们通常用于加速业务智能工作负载。许多三元组存储，例如AllegroGraph，都提供主体(S)、谓词(P)和客体(O)的全部六种排列，以及附加的聚合索引。然而，为了降低相关成本，也存在其他方法：TripleBit仅使用具有两个聚合索引(SP，SO)和两个辅助索引结构的两个排列(PSO，POS)。GStore在两种索引结构的帮助下实现了模式匹配查询：VS*树，这是一种专门的B+树，以及基于TRIE的T索引。一些数据库系统，如AmazonNeptun或AnzoGraph只提供隐式索引，但仍然可以高效地应对所有类型的查询。大多数图数据库系统都允许用户显式定义索引。其中一些系统，如Azure Cosmos DB，对于更具体的用例支持复合索引(不同标签/属性的组合)，除了内部索引之外，一些系统还使用外部索引工具。例如，Titan和JanusGraph使用内部索引进行基于标签和值的查找，但依赖外部索引后端进行涉及多个属性、范围或全文搜索的重要查找。</p><p>根据数据索引的实现方式进一步对其进行分类。用于实现这些索引的三种基本数据结构：树、跳跃表和哈希表。根据表中的标准对系统进行分类。可以发现索引类型和图形数据库的后端之间没有明确的联系，但是大多数系统使用基于树的索引。</p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img1/2022:04:02-19:08:26-64f1dd9348ca3abff26e19083013d9e0_29_Table_5.png" alt="img" style="zoom:60%;" /></p><p>数据通常存储在数据结构中。当这些数据结构变得更加复杂时，一些图形数据库选择使用结构化索引来增强其设计。其他系统中的LiveGraph使用顶点索引将其顶点ID映射到物理存储位置。同样，ArangoDB多次使用混合索引、哈希表来查找顶点的关联边和相邻顶点的文档。</p><h1 id="3-优化"><a href="#3-优化" class="headerlink" title="3.优化"></a>3.优化</h1><p>基于记录的系统通常为需要检索关于顶点或边的全部或大部分信息的查询提供更高的性能，因为所需的数据存储在连续的内存块中，所以效率更高。在将数据存储在索引中的系统中，查询每个属性的数据结构会导致更多的随机访问模式。如果只想检索有关顶点或边的单个属性，这样的系统可能只需要检索单个值。而许多基于记录的系统不能仅检索部分记录，会获取更多不必要的数据。</p><p>此外，决定是否使用ID或直接内存指针来链接记录取决于给定系统的工作负载的读/写比率。在前一种情况下，必须使用索引结构来查找记录的地址。与紧随其后的直接指针相比，这会降低读取查询的速度。但是，使用ID而不是指针可以提高写查询的效率。例如，当必须将记录移动到新地址时，所有指向这条记录的指针都需要更新来映射到新地址，ID可以保持不变，只有索引结构需要修改给定记录的地址。</p><p>对于更新图的事务性工作负载，基于非图数据模型(例如文档存储或宽列存储)的系统通常获得更高的性能。相反，只读工作负载(包括简单分析和全局分析)通常在原生图数据库上实现更高的性能。全局分析尤其受益于确保单个查询并行化的原生图数据库。</p><h2 id="3-1将数据划分为记录"><a href="#3-1将数据划分为记录" class="headerlink" title="3.1将数据划分为记录"></a>3.1将数据划分为记录</h2><p>图形数据库通常将数据组织成称为记录的小单元，一条记录包含关于特定单个实体(例如：一个人)的信息，该信息被组织成指定的逻辑字段(例如：名字、姓氏等)。一定数量的记录通常一起保存在内存或磁盘中的一个连续盘块中，以增强数据访问局部性。基于记录的数据组织的细节在很大程度上取决于特定的系统。例如，关系型数据库可以将表行视为记录，键值存储通常在单个记录中维护单个值，而在文档存储中，单个文档可以是记录。一些系统允许可变大小的记录(例如：ArangoDB)，而其他系统仅允许固定大小的记录(例如：Neo4j)。可以观察到，虽然一些系统(例如：一些三元组存储如CrayGraph engine)没有显式提到记录，但是数据仍然可以隐式地以基于记录的方式组织起来。</p><p>图形数据库通常每个顶点使用一条或多条记录(这些记录有时被称为顶点记录)。Neo4j对顶点使用多个固定大小的记录，而文档数据库对每个顶点使用一个文档(例如：ArangoDB)。边有时与相关联的(源或目标)顶点(例如：Titan或JanusGraph)一起存储在同一记录中。否则，边存储在单独的边记录中(例如：ArangoDB)。</p><h2 id="3-2在索引结构中存储数据"><a href="#3-2在索引结构中存储数据" class="headerlink" title="3.2在索引结构中存储数据"></a>3.2在索引结构中存储数据</h2><p>图数据库通常使用索引来加快查询速度。基于非图形后端的系统(例如RDBMS或文档存储)通常依赖于此类系统中原本的索引方法。原生图形数据库对每个顶点的邻域采用索引结构，通常采用直接指针的形式。</p><p>除了使用索引结构来维护数据的位置之外，一些数据库还将图形数据存储在索引本身中。在这种情况下，索引不指向特定的数据记录，但索引本身包含所需的数据。具有此类功能的示例系统有Sparksee/DEX和Cray Graph Engine。为了维护索引，前者使用位图和B+树，而后者使用哈希表。</p><h2 id="3-3使用轻量级边的数据结构"><a href="#3-3使用轻量级边的数据结构" class="headerlink" title="3.3使用轻量级边的数据结构"></a>3.3使用轻量级边的数据结构</h2><p>某些系统(例如：OrientDB)允许将没有标签或属性的边存储为轻量级边。这样的边存储在对应的源顶点和(或)目的顶点的记录中。这些轻量级边由其目标顶点的ID或指向此顶点的指针表示。这可以节省存储空间并加速解决不同的图查询，例如验证两个顶点的连通性。</p><h2 id="3-4将记录与直接指针链接"><a href="#3-4将记录与直接指针链接" class="headerlink" title="3.4将记录与直接指针链接"></a>3.4将记录与直接指针链接</h2><p>在基于记录的系统中，顶点和边存储在记录中。为了能够有效地解决连通性查询(即，验证两个顶点是否连接)，这些记录必须指向其他记录。可以存储指向相应连接记录的直接指针(即存储器地址)。例如，边记录可以存储指向具有相邻顶点的顶点记录的直接指针。还可以为每个记录分配一个唯一的ID，并使用这些ID而不是直接指针来引用其他记录。这虽然需要额外的索引结构来根据记录ID查找记录的物理位置，但是如果物理位置改变，更新索引结构通常比更改所有关联的直接指针更容易。</p><p>可以给一个系统使用直接指针来避免维护额外的专用索引结构来遍历图形。注意索引仍可用于查找顶点；使用直接指针意味着只有邻接数据的结构没有附加索引。使用直接指针避免了额外的索引遍历从而可以加速图的遍历。但是当需要更新邻接数据时，通常也需要更新大量指针，从而产生额外的开销。</p><h2 id="3-5支持并发性和并行性"><a href="#3-5支持并发性和并行性" class="headerlink" title="3.5支持并发性和并行性"></a>3.5支持并发性和并行性</h2><p>几乎所有的图数据库系统都支持并发查询，但在几乎所有的系统类中，支持并行查询执行的系统却较少(除了基于OODBMS的图形数据库)。这表明更多的数据库将更多的压力放在单位时间内执行的查询的高吞吐量上，而不是降低单个查询的延迟上。一个值得注意的例外是Cray图引擎，它不支持并发查询，但它确实提供了单个查询的并行化。</p><p>查询并发的方法之一是不同类型的锁。例如，WhiteDB使用读写锁提供数据库范围的锁定，从而支持并发读取器，但一次只能有一个写入操作。还可以自动更新元组字段(设置、比较和设置、添加)作为锁定整个数据库的替代方法。WhiteDB本身不强制一致性，它取决于用户正确使用锁和原子性。另一种方法是基于事务的，例如由OrientDB使用，它为分布式事务提供ACID。</p><p>一些支持并行查询执行的系统在执行这种并行化查询时明确地优化了通信的数据量。例如，CGE中的计算分布在参与的进程中。为了最大限度地减少所有对所有的通信量，查询结果在本地聚合，并且只要有可能，每个进程只与少数几个对等点通信以避免网络拥塞。微软图引擎和Trinity数据库的底层实现使用的另一种简化通信的方法是减小进程交换的数据块的大小。为此，Trinity维护特殊的访问器，允许访问单元格中的单个属性而无需加载整个单元格，这降低了许多不需要整个单元的操作的I/O成本。几个系统共享的单边通信，使得进程能够直接访问彼此的数据。例如，Trinity可以部署在InfiniBand上利用远程直接内存访问。类似地，Cray的底层实现使多个计算节点的内存资源可以作为单个全局地址空间使用，也支持CGE中的单边通信。这便于在分布式环境中进行并行编程。</p>]]></content>
    
    
    <categories>
      
      <category>课程作业</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>张宇线代概率论-基础</title>
    <link href="/2022/04-02-5792eab0516f/"/>
    <url>/2022/04-02-5792eab0516f/</url>
    
    <content type="html"><![CDATA[<h1 align="center">张宇线代概率论-基础</h1><p>[TOC]</p><h1 id="线代"><a href="#线代" class="headerlink" title="线代"></a>线代</h1><h2 id="一、行列式"><a href="#一、行列式" class="headerlink" title="一、行列式"></a>一、行列式</h2><ul><li><p>余子式：$M_{ij}$，不带正负号；代数余子式：$A_{ij}$，带正负号</p><ul><li>某行余子式计算，直接按系数换掉那一行</li></ul></li><li><p>范德蒙行列式：$\left|\begin{array}{cccc}1 &amp;1&amp;\cdots&amp;1 \\x_1&amp;x_2&amp;\cdots &amp;x_n\\x_1^2&amp;x_2^2&amp;\cdots &amp;x_n^2\\\vdots&amp;\vdots&amp;&amp;\vdots\\x_1^{n-1}&amp;x_2^{n-1}&amp;\cdots &amp;x_n^{n-1}\\ \end{array}\right|=\underset{1\le i&lt;j\le n}{\Pi}(x_j-x_i)$ </p></li><li>计算<ul><li>爪形：==斜爪消横爪== <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153683.png" alt="image-20220311095320748" style="zoom:20%;" /></li><li>异爪形 ：==递推n阶(从指甲尖开始)== <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153685.png" alt="image-20220311095302450" style="zoom:20%;" />    <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153686.png" alt="image-20220311095412950" style="zoom:25%;" /></li><li>行(列)和相等（每行元素换个位置）：==所有列加到第一列，所有行减去第一行== <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153687.png" alt="image-20220311100334670" style="zoom:25%;" /></li><li>拉普拉斯展开：==行列变换化为分块矩阵== <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153688.png" alt="image-20220311101656567" style="zoom:25%;" /></li><li>范德蒙行列式</li></ul></li></ul><h2 id="二、矩阵"><a href="#二、矩阵" class="headerlink" title="二、矩阵"></a>二、矩阵</h2><h3 id="1-性质"><a href="#1-性质" class="headerlink" title="1.性质"></a>1.性质</h3><ul><li>$\begin{cases}(\boldsymbol{A}+\boldsymbol{B})^T&amp;=&amp;\boldsymbol{A}^T+\boldsymbol{B}^T\(\boldsymbol{AB})^T&amp;=&amp;\boldsymbol{B}^T\boldsymbol{A}^T\|\boldsymbol{A_{n\times n}}^T|&amp;=&amp;|\boldsymbol{A_{n\times n}}|\end{cases}$ </li><li>施密特正交化 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153689.png" alt="image-20220311231044096" style="zoom: 40%;" /> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153690.png" alt="image-20220311231115416" style="zoom: 40%;" /> </li><li>$\boldsymbol{A}^T\boldsymbol{A}=E$，则正交。其向量组是标准正交向量组。<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153691.png" alt="image-20220312064436764" style="zoom: 33%;" /></li><li>分块矩阵 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153692.png" alt="image-20220312064925270" style="zoom:40%;" /></li></ul><h3 id="2-矩阵的逆"><a href="#2-矩阵的逆" class="headerlink" title="2.矩阵的逆"></a>2.矩阵的逆</h3><ul><li>$\boldsymbol{A}^{-1}=\frac{1}{|\boldsymbol{A}|}\boldsymbol{A}^*$  <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153694.png" alt="image-20220312074751928" style="zoom:33%;" /><ul><li>二阶求逆口诀：主对调，副变号，<strong>除以行列式</strong></li></ul></li><li>分块矩阵的逆 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153695.png" alt="image-20220312075135249" style="zoom:40%;" /></li><li>伴随矩阵：代数余子式<strong>转置</strong>排成矩阵 $\boldsymbol{A}\boldsymbol{A}^<em>=\boldsymbol{A}^</em>\boldsymbol{A}=|\boldsymbol{A}|\boldsymbol{E}$ <ul><li>$|\boldsymbol{A}^<em>|=|\boldsymbol{A}|^{n-1}$ ，$(\boldsymbol{A}^</em>)^<em>=|\boldsymbol{A}^{n-2}|A$ ，$(k\boldsymbol{A})^</em>=k^{n-1}\boldsymbol{A}^*$ </li></ul></li></ul><h3 id="3-初等变换"><a href="#3-初等变换" class="headerlink" title="3.初等变换"></a>3.初等变换</h3><ul><li><p>行变换相当于左乘，列变换相当于右乘</p></li><li><p>初等变换性质 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153696.png" alt="image-20220312221903615" style="zoom:33%;" /></p><ul><li><p>例：求一个矩阵由哪些初等阵构成</p><blockquote><p>一步一步化为E，写出每一步的初等阵，求其逆</p></blockquote></li></ul></li><li><p>分块矩阵的逆 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153697.png" alt="image-20220312230346064" style="zoom: 25%;" /> <strong>左乘同行，右乘同列，添负号</strong> ==主对角线不换位置，副对角线换位置==</p></li></ul><h2 id="三、向量组"><a href="#三、向量组" class="headerlink" title="三、向量组"></a>三、向量组</h2><h3 id="1-线性相关"><a href="#1-线性相关" class="headerlink" title="1.线性相关"></a>1.线性相关</h3><ul><li><p>证明线性相关：按定义设出式子，左右同乘 或者 代入重组</p></li><li><p>性质</p><ul><li>若$\alpha_1…\alpha_n$线性无关，加上$\beta$就线性相关，那么$\beta$可以用那些个$\alpha$<strong>唯一</strong>线性表示</li><li>有一个能表示就算相关了</li><li>以少表示多，多的那组相关</li><li>原来无关，添维数必然无关；原来相关，减维数必然相关</li></ul></li></ul><h3 id="2-秩"><a href="#2-秩" class="headerlink" title="2.秩"></a>2.秩</h3><ul><li><p>向量排成矩阵，行变换求$r(A)$</p><ul><li>按列找出一个秩为$r(A)$的子矩阵，挑出来的那几列对应的原向量就是极大无关组</li></ul></li><li><p>向量组等价$\iff r(I)=r(II)=r(I|II)$ </p></li><li>两个向量组，被表出的秩不大</li><li>秩<strong>越乘越小</strong> </li><li>$\begin{cases}r(AB)\le min\{r(A),r(B)\}\\r(A+B)\le r(A)+r(B)\\r(A^*)=\begin{cases}n&amp;r(A)=n\\1&amp;r(A)=n-1\\0&amp;r(A)&lt;n-1\end{cases}\\AB=0\Longrightarrow r(A)+r(B)\le A的列数\end{cases}$ </li></ul><h3 id="3-向量空间"><a href="#3-向量空间" class="headerlink" title="3.向量空间"></a>3.向量空间</h3><ul><li>$\xi到\eta$的过渡矩阵定义：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153698.png" alt="image-20220315155609939" style="zoom:33%;" /></li><li>坐标变换公式：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153699.png" alt="image-20220315155816149" style="zoom:43%;" /></li></ul><h2 id="四、线性方程组"><a href="#四、线性方程组" class="headerlink" title="四、线性方程组"></a>四、线性方程组</h2><h3 id="1-具体"><a href="#1-具体" class="headerlink" title="1.具体"></a>1.具体</h3><ul><li><p>齐次</p><ul><li>必有零解，列满秩时有唯一零解，列不满秩有n-r个线性无关解</li><li>解法：<strong>设出来通解</strong>后求出其他值 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153700.png" alt="image-20220315195449733" style="zoom:33%;" /></li></ul></li><li><p>非齐次</p><ul><li>系数矩阵和增广矩阵<strong>秩不等</strong>，无解<ul><li>秩相等且满秩，唯一解</li><li>秩相等且不满秩，无穷多解</li></ul></li></ul></li></ul><h3 id="2-抽象"><a href="#2-抽象" class="headerlink" title="2.抽象"></a>2.抽象</h3><p>有解条件 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153701.png" alt="22-0315_22" style="zoom:33%;" /></p><h3 id="3-公共解、同解方程组"><a href="#3-公共解、同解方程组" class="headerlink" title="3.公共解、同解方程组"></a>3.公共解、同解方程组</h3><ul><li><p>求公共解</p><ul><li><p>联立方程组求解</p></li><li><p>把一个的通解带到另外一个里面去</p></li><li><p>求出两个通解，令其相等，求出任意系数之间的关系（k和l），关系带入通解得到公共解</p><blockquote><p>联立 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153702.png" alt="image-20220315225601200" style="zoom: 25%;" /></p></blockquote></li></ul></li><li><p>同解</p><ul><li><p>$r(A)=r(B)=r[\frac{A}{B}]$ 三秩相同（<strong>竖着拼</strong>）</p></li><li><p>==设$A_{m\times n}$，则$r(A)=r(A^T)=r(AA^T)=r(A^TA)$== </p><blockquote><p>构造$Ax=0,A^TAx=0$，显然1的解是2的解</p><p>若$\eta$是2的任一解$\Longrightarrow A^TA\eta=0\Longrightarrow \eta^T A^TA\eta=0\Longrightarrow(A\eta)^TA\eta=0\Longrightarrow||A\eta||^2=0\Longrightarrow A\eta=0$ </p><p>结论：1与2同解，基础解系等价，秩相同</p></blockquote></li></ul></li></ul><h2 id="五、特征值-A为方阵"><a href="#五、特征值-A为方阵" class="headerlink" title="五、特征值(A为方阵)"></a>五、特征值<strong>(A为方阵)</strong></h2><h3 id="1-特征值与特征向量"><a href="#1-特征值与特征向量" class="headerlink" title="1.特征值与特征向量"></a>1.特征值与特征向量</h3><ul><li><p>性质</p><ul><li><p><strong>特征值的和</strong>等于主对角线元素的和，<strong>特征值的积</strong>等于行列式</p></li><li><p>k重特征值至多只有k个线性无关的特征向量</p></li><li><p>==$tr(A^<em>)=A_{11}+A_{22}+A_{33}=\lambda_1^</em>+\lambda_2^<em>+\lambda_3^</em>=\lambda_2\lambda_3+\lambda_1\lambda_3+\lambda_1\lambda_2$== </p></li><li><p>矩阵秩为1，特征值必为$(n-1)$个0和一个“迹”</p></li><li><p>例题</p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153703.png" alt="image-20220316104012183" style="zoom:33%;" /></p></blockquote></li></ul></li><li><p>求法</p><ul><li><p>具体：$|\lambda E-A|=0$ 特征方程。求出$\lambda$带回方程求出所有解即为特征向量</p><ul><li><p>$f(\lambda)=a_k\lambda^k+…+a_1\lambda^1+a_0=0$ 试根方法</p><ul><li>若$a_0=0$，$\lambda=0$是根</li><li>若$a_k+…+a_1+a_0=0$，$\lambda=1$是根</li><li>若偶次项之和=奇次项之和，$\lambda=-1$是根</li><li>若最高次项是1，且所有系数都是整数，那么所有有理根都是$a_0$的因数</li></ul><blockquote><p>注意$k\neq0!!!$ <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153704.png" alt="image-20220316075710694" style="zoom: 30%;" /></p></blockquote></li></ul></li><li><p>抽象</p><blockquote><p>各种变化 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153705.png" alt="image-20220316090927438" style="zoom:33%;" /></p></blockquote></li></ul></li></ul><h3 id="2-相似"><a href="#2-相似" class="headerlink" title="2.相似"></a>2.相似</h3><ul><li>矩阵相似<ul><li><strong>秩、行列式、迹、特征值</strong>相同 (反之不成立，反例：二阶1010和1101)</li><li><strong>求逆、转置、伴随、多项式</strong>处理后，仍然相似</li></ul></li><li>相似对角化<ul><li>可对角化条件<ul><li>两个充分：有n个不同的特征值、是实对称阵</li><li>两个充要：<u>有n个线性无关特征向量</u>、每个$k_i$重特征值都有$k_i$重特征向量</li></ul></li><li>步骤：求特征值、特征向量，拼起来</li></ul></li><li>应用<ul><li>实对称阵<ul><li>不同特征值的特征向量<strong>正交</strong>。它必有n个线性无关的特征向量，因此必可相似对角化</li><li>特征向量间的关系 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153706.png" alt="image-20220316162627233" style="zoom: 25%;" /></li><li>计算：求$Q^{-1}AQ=Q^TAQ=\Lambda$，多一步正交化(如果需要的话)和单位化</li></ul></li><li>反问题<ul><li>反求参数：相似矩阵迹相同，行列式相同</li><li>反求A：$A=P\Lambda P^{-1}$ </li></ul></li><li>求$A^n$与$f(A)$ </li></ul></li></ul><h2 id="六、二次型"><a href="#六、二次型" class="headerlink" title="六、二次型"></a>六、二次型</h2><h3 id="1-化为标准型与规范型"><a href="#1-化为标准型与规范型" class="headerlink" title="1.化为标准型与规范型"></a>1.化为标准型与规范型</h3><ul><li><p>标准型：只有平方项没有交叉项</p><ul><li>规范型：系数只有1，0，-1</li></ul></li><li><p>配方法：将平方项和与其有关的混合项一次配完，如法炮制直至全部配完</p><ul><li><strong>n元要n换</strong>！缺项要补项</li><li><p>没有平方项用平方差公式创造平方</p><blockquote><p>例题：$f=x_1^2+2x_1x_2+2x_1x_3-x_2^2-2x_2x_3-x_3^2$ 化为标准型，写出<strong>可逆</strong>线性变换</p><p>$f=(x_1+x_2+x_3)^2-2x_2^2-4x_2x_3-2x_3^2$ </p><p>$\ \ =(x_1+x_2+x_3)^2-2(x_2+x_3)^2$ </p><p>令$\begin{cases}y_1=x_1+x_2+x_3\\y_2=x_2+x_3\\y_3=x_3\end{cases}$ ，最终结果记得求逆</p></blockquote></li></ul></li><li><p>合同：$A,B$为N阶实对称阵，$C^TAC=B$，C可逆，$f(x)$与$g(y)$为合同二次型</p><ul><li>相当于旋转了坐标轴</li></ul></li></ul><h3 id="2-正定二次型"><a href="#2-正定二次型" class="headerlink" title="2.正定二次型"></a>2.正定二次型</h3><ul><li><p>惯性定理：标准型的正负项个数是恒定的</p></li><li><p>合同充要条件：有相同正负惯性指数 （<strong>前提都是对称阵</strong>）</p></li><li><p>判定：</p><ul><li><p>必要条件：主对角元素全正、行列式&gt;0 </p><blockquote><p>前提A一定是对称阵 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153707.png" alt="image-20220316231249574" style="zoom: 40%;" /></p></blockquote></li></ul></li><li><p>三大变换：A正定$\begin{cases}\iff A^T正定\\\iff A^{-1}正定\\\Longrightarrow A^*正定\end{cases}$ </p></li></ul><h1 id=""><a href="#" class="headerlink" title="$\ $"></a>$\ $</h1><h1 id="概率论"><a href="#概率论" class="headerlink" title="概率论"></a>概率论</h1><h2 id="一、随机事件与概率"><a href="#一、随机事件与概率" class="headerlink" title="一、随机事件与概率"></a>一、随机事件与概率</h2><ul><li><p>古典概型</p><ul><li><p>有限个样本点、等可能</p></li><li><p>大学期间<strong>排列符号用$P_n^m$</strong>，因为A另有用途</p></li><li><p>用对立事件取巧计算</p></li></ul></li><li><p>概率公式</p><ul><li><p>条件概率 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153708.png" alt="image-20220318124856730" style="zoom:33%;" /></p></li><li><p>乘法公式 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153709.png" alt="image-20220318140934424" style="zoom: 33%;" /></p></li><li><p>例题：</p><blockquote><p> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153710.png" alt="image-20220318143307507" style="zoom:33%;" /></p><p>定义上来说AB不对</p></blockquote></li></ul></li><li><p><strong>全概率公式</strong>例题：</p><blockquote><p> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153711.png" alt="image-20220318145527373" style="zoom:33%;" /></p><p>$P(A)=P(H_1)P(A|H_1)+P(H_2)P(A|H_2)=\frac{7}{8}$ </p><p>$P(C_1)=P(H_1|A)=\frac{P(H_1A)}{P(A)}=\frac{4}{7},P(C_2)=P(H_2|A)=\frac{P(H_2A)}{P(A)}=\frac{3}{7}$</p><p>$P(\bar A)=P(C_1)P(\bar A|C_1)+P(C_2)P(\bar A|C_2)=\frac{4}{7}\cdot0+\frac{3}{7}\cdot\frac{1}{4}=\frac{3}{28}$ </p></blockquote></li><li><p>事件独立性</p><ul><li>三个事件相互独立/两两独立 含义不一样</li></ul></li></ul><h2 id="二、一维随机变量"><a href="#二、一维随机变量" class="headerlink" title="二、一维随机变量"></a>二、一维随机变量</h2><h3 id="1-随机变量"><a href="#1-随机变量" class="headerlink" title="1.随机变量"></a>1.随机变量</h3><ul><li>分布函数 $F(x)=P\{X\le x\}$，<strong>x取遍实数轴！</strong><ul><li>性质<ul><li>单调不减</li><li>右连续：左空心，右实心</li><li>左极限0，右极限1</li></ul></li><li>应用：求概率 $\begin{cases}P\{X\le a\}=F(a)\\P\{X&lt; a\}=F(a-0)\\P\{X+ a\}=F(a)-F(a-0)\end{cases}$</li></ul></li></ul><h3 id="2-连续型分布"><a href="#2-连续型分布" class="headerlink" title="2.连续型分布"></a>2.连续型分布</h3><ul><li><p>无论边界是否取等，都是一样的，因为一个点概率测不到</p></li><li><p>例题：</p><blockquote><p>概念题 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153712.png" alt="image-20220319123623045" style="zoom:33%;" /></p></blockquote></li><li><p>均匀分布 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153713.png" alt="image-20220319155655080" style="zoom:40%;" /></p></li><li><p>指数分布 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153714.png" alt="image-20220319161745927" style="zoom:40%;" /> </p><ul><li>$\lambda$表示失效率，越高表示越快</li><li>$p(x\ge s+t|x\ge s)=p(x\ge t)$ </li></ul></li><li><p>正态分布 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153715.png" alt="image-20220319164105042" style="zoom:40%;" /> $\phi(x)$ </p><ul><li>$\Phi(0)=0,\Phi(-x)=1-\Phi(x)$ </li><li>上$\alpha$分位数：某点右侧面积是$\alpha$ </li><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153716.png" alt="image-20220319171921146" style="zoom:40%;" /> 见到正态分布必写标准化</li></ul></li></ul><h3 id="3-离散型分布"><a href="#3-离散型分布" class="headerlink" title="3.离散型分布"></a>3.离散型分布</h3><ul><li>二项分布B(n,p)：伯努利实验 $p\{X=k\}=C_n^kp^k(1-p)^{n-k}$ </li><li>几何分布 G(p)：首次发生 $p\{X=k\}=p\cdot(1-p)^{k-1}$ </li><li>泊松分布 $P(\lambda)$ ：稀有事件发生概率 $p\{X=k\}=\frac{\lambda^k}{k!}e^{-\lambda}(k=0,1,…;\lambda&gt;0)$ <ul><li>某场合某单位时间内源源不断的质点来流的个数，$\lambda$表示强度</li></ul></li><li>超几何分布 H(n,N,M)：$p\{X=k\}=\frac{C_m^kC_{N-M}^{n-k}}{C_N^n},max\{0,n-N+M\le k\le min\{M,n\}$</li></ul><h3 id="4-随机变量分布函数"><a href="#4-随机变量分布函数" class="headerlink" title="4.随机变量分布函数"></a>4.随机变量分布函数</h3><ul><li><p>例题</p><blockquote><p> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153717.jpg" alt="90C3A0B8D9E27A9F74A0A24737072DDD" style="zoom:17%;" /></p></blockquote></li></ul><h2 id="三、多维随机变量"><a href="#三、多维随机变量" class="headerlink" title="三、多维随机变量"></a>三、多维随机变量</h2><h3 id="1-多维随机变量"><a href="#1-多维随机变量" class="headerlink" title="1.多维随机变量"></a>1.多维随机变量</h3><ul><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153718.png" alt="image-20220319191723654" style="zoom:40%;" /></li><li>二维分布函数中，其中一个取到无穷，得到的就是另一个的分布函数</li></ul><h3 id="2-二维离散"><a href="#2-二维离散" class="headerlink" title="2.二维离散"></a>2.二维离散</h3><ul><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153719.png" alt="image-20220319194447122" style="zoom: 33%;" /></li></ul><h3 id="3-二维连续"><a href="#3-二维连续" class="headerlink" title="3.二维连续"></a>3.二维连续</h3><ul><li>联合概率密度</li><li>边缘概率密度：==求谁不积谁，不积先定限== <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153720.png" alt="image-20220319200659586" style="zoom:40%;" /></li><li>条件概率密度：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153722.png" alt="image-20220319200849965" style="zoom:13%;" /> $条件=\frac{联合}{边缘}$ </li><li>独立性：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153723.png" alt="image-20220319201059600" style="zoom: 22%;" /></li></ul><h3 id="4-函数的分布-⭐️"><a href="#4-函数的分布-⭐️" class="headerlink" title="4.函数的分布(⭐️)"></a>4.函数的分布<strong>(⭐️)</strong></h3><ul><li><p>(离散，离散)-&gt;离散</p></li><li><p>(连续，连续)-&gt;连续</p><ul><li><p>分布函数法：通过画图的方式确定 z取不同值时候的 积分区间，然后再求导</p></li><li><p>卷积公式 </p><blockquote><p>$Z=X+Y$时，把一个变量直接替换，对另一个变量积分，得到Z的概率密度函数</p><p>其实积分内部还要乘一个偏导z</p><p> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153724.png" alt="image-20220320082850030" style="zoom:30%;" /> </p></blockquote></li></ul></li><li><p>(离散，连续)-&gt;连续</p><ul><li>离散的那个用全概率公式展开<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153725.png" alt="image-20220320095058019" style="zoom:30%;" /></li></ul></li></ul><h2 id="四、随机变量数字特征"><a href="#四、随机变量数字特征" class="headerlink" title="四、随机变量数字特征"></a>四、随机变量数字特征</h2><h3 id="1-一维"><a href="#1-一维" class="headerlink" title="1.一维"></a>1.一维</h3><ul><li>期望 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153726.png" alt="image-20220320101157215" style="zoom:25%;" /></li><li>方差：<ul><li>平方的期望减期望的平方 $DX=EX^2-(EX)^2$ </li><li>$D(X\pm Y)=D(X)+D(Y)\pm 2Cov(X,Y)$ </li><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153727.png" alt="image-20220320104520366" style="zoom:40%;" /></li></ul></li><li>切比雪夫不等式 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153728.png" alt="image-20220320105428675" style="zoom:40%;" /></li></ul><h3 id="2-二维"><a href="#2-二维" class="headerlink" title="2.二维"></a>2.二维</h3><ul><li>期望：只有独立才可打开直接乘</li><li>协方差：$Cov(X,Y)=E(XY)-EXEY$ </li><li>相关系数 $\rho_{xy}=\frac{E(XY)-EXEY}{\sqrt{DX}\sqrt{DY}}$ 为0时<strong>线性不相关</strong> </li></ul><h3 id="3-独立性判定"><a href="#3-独立性判定" class="headerlink" title="3.独立性判定"></a>3.独立性判定</h3><ul><li>用分布判定独立性</li><li>用数字特征判定相关性</li></ul><h2 id="五、大数定律"><a href="#五、大数定律" class="headerlink" title="五、大数定律"></a>五、大数定律</h2><h3 id="1-依概率收敛"><a href="#1-依概率收敛" class="headerlink" title="1.依概率收敛"></a>1.依概率收敛</h3><h3 id="2-大数定律"><a href="#2-大数定律" class="headerlink" title="2.大数定律"></a>2.大数定律</h3><p>在满足一定条件下，均值依概率收敛到均值的期望</p><ul><li>切比雪夫大数定律：相互独立随机序列，方差一致有上界</li><li>伯努利大数定律</li><li>辛钦大数定律：独立同分布随机序列，期望存在</li></ul><h3 id="3-中心极限定理"><a href="#3-中心极限定理" class="headerlink" title="3.中心极限定理"></a>3.中心极限定理</h3><ul><li><p>列维-林德伯格定理</p></li><li><p>利莫夫-拉普拉斯定理：样本足够大时，$\sum\limits_{i=1}^{n}X_i,E=nE\bar X,D=nD\bar X$ </p><blockquote><p>例题 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153729.png" alt="image-20220320152012514" style="zoom:37%;" /></p></blockquote></li></ul><h2 id="六、数理统计"><a href="#六、数理统计" class="headerlink" title="六、数理统计"></a>六、数理统计</h2><h3 id="1-统计量及其分布"><a href="#1-统计量及其分布" class="headerlink" title="1.统计量及其分布"></a>1.统计量及其分布</h3><ul><li><p>样本数字特征</p><ul><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153730.png" alt="image-20220320154623427" style="zoom:40%;" /> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153731.png" alt="image-20220320182505524" style="zoom:35%;" /></li><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153732.png" alt="image-20220320154657909" style="zoom:40%;" /></li><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153733.jpg" alt="D8648F59053E38F9362FCA75029B3C6F" style="zoom:20%;" /></li></ul></li><li><p>顺序统计量</p><ul><li>Max $\begin{cases}F_{(n)}(x)=[F(x)]^n\\f_{(n)}(x)=n[F(x)]^{n-1}f(x)\end{cases}$</li><li>Min $\begin{cases}F_{(l)}(x)=1-[1-F(x)]^n\\f_{(l)}(x)=n[1-F(x)]^{n-1}f(x)\end{cases}$ </li></ul></li><li><p>三大分布</p><ul><li>$\chi^2$分布：标准正态分布的平方和，有几个自由度就是几<ul><li>EX=n，DX=2n</li></ul></li><li>t分布：把$\chi^2$分布变换成一对一：除以n再开方<ul><li>自由度是<strong>样本个数-1</strong> </li><li><strong>$t_{1-\alpha}(n)=-t_\alpha(n)$</strong> </li></ul></li><li>F分布：两个$\chi^2$分布分别除以自己的自由度再比较</li><li><strong>$F_\alpha(n_1,n_2)=\frac{1}{F_{1-\alpha}(n_2,n_1)}$</strong> </li></ul></li><li><p>==正态总体下常用结论==</p><blockquote><p> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153734.png" alt="image-20220320195027681" style="zoom:40%;" /></p></blockquote></li></ul><h3 id="2-参数的点估计"><a href="#2-参数的点估计" class="headerlink" title="2.参数的点估计"></a>2.参数的点估计</h3><ul><li>方法<ul><li>矩估计法：算出来$EX$，令$\bar x=EX$，反解出来$\hat \theta$ </li><li>极大似然估计<ul><li>写概率函数，取对数，求导，令为0，解出$\hat \theta$，根据范围选择合理的值</li><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153735.png" alt="image-20220321093858663" style="zoom:30%;" /></li><li>问“估计值”，用小写$x_i$；问“估计量”用大写$X_i$ </li></ul></li></ul></li><li>评价标准<ul><li>无偏：$E\hat\theta=\theta$，$\hat\theta$是无偏估计</li><li>有效：$\hat\theta_1,\hat\theta_2$都是无偏估计，谁方差小谁更有效</li><li>一致（相合性）：$\hat\theta\stackrel{P}{\longrightarrow}\theta$ </li></ul></li></ul><h3 id="3-参数的区间估计"><a href="#3-参数的区间估计" class="headerlink" title="3.参数的区间估计"></a>3.参数的区间估计</h3><ul><li><p>区间估计</p><ul><li><p>正态总体均值的置信区间</p><blockquote><p>推导：</p><p>$p(|\bar x-\mu|&lt;\Delta)=1-\alpha\iff p(|\frac{\bar x-\mu}{\sigma/\sqrt{n}}|&lt;\frac{\Delta}{\sigma/\sqrt{n}})=1-\alpha$ </p><p>$\Delta=Z_{\frac{\alpha}{2}}\frac{\sigma}{\sqrt{n}}$ 或者 $\Delta=T_{\frac{\alpha}{2}}(n-1)\cdot\frac{S}{\sqrt{n}}$ </p><p>$\Delta$表示想要置信度为$1-\alpha$情况下$|\bar x-\mu|$的上限 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020153736.png" alt="image-20220321082805252" style="zoom:25%;" /></p><p>即$p(\bar x-\Delta&lt;\mu&lt;\bar x+\Delta)=1-\alpha=0.99$ “有99%的把握落在这个区间”</p></blockquote></li></ul></li><li><p>假设检验</p><ul><li>用估计的$\mu$算出来一个拒绝域，看抽样的均值是否在这里面</li></ul></li><li><p>两类错误</p><ul><li>弃真$\alpha$，取伪$\beta$。二者<strong>不是和为1</strong></li><li>控制$\alpha$情况下使得$\beta$尽可能小</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>考研</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>张宇高数-基础</title>
    <link href="/2022/04-02-0a372bcfc16c/"/>
    <url>/2022/04-02-0a372bcfc16c/</url>
    
    <content type="html"><![CDATA[<h1 align="center">张宇高数-基础</h1><p>[TOC]</p><h1 id="高数"><a href="#高数" class="headerlink" title="高数"></a>高数</h1><h2 id="一、第一讲-函数"><a href="#一、第一讲-函数" class="headerlink" title="一、第一讲-函数"></a>一、第一讲-函数</h2><h3 id="1-函数性质：单调、有界、奇偶、周期"><a href="#1-函数性质：单调、有界、奇偶、周期" class="headerlink" title="1.函数性质：单调、有界、奇偶、周期"></a>1.函数性质：单调、有界、奇偶、周期</h3><h3 id="2-指数对数运算法则，因式分解公式、常用不等式"><a href="#2-指数对数运算法则，因式分解公式、常用不等式" class="headerlink" title="2.指数对数运算法则，因式分解公式、常用不等式"></a>2.指数对数运算法则，因式分解公式、常用不等式</h3><ul><li>看见对数和分数，想着<strong>把幂次提出来！</strong>尤其是分数。</li><li>$ln(1+\frac{1}{x})=ln(x+1)-ln(x)$，想中值定理。</li></ul><h3 id="3-特殊画图-用直角坐标观点画极坐标系的图形"><a href="#3-特殊画图-用直角坐标观点画极坐标系的图形" class="headerlink" title="3.特殊画图:用直角坐标观点画极坐标系的图形"></a>3.特殊画图:用直角坐标观点画极坐标系的图形</h3><ul><li><p>极坐标—-<strong>心形线</strong>（外摆线）  $r=a(1-cos\theta),(a&gt;0)$，<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146269.png" alt="image-20220203090719195" style="zoom:25%;" /></p><ul><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146271.png" alt="image-20220203091010726" style="zoom:30%;" /></li><li>玫瑰线  $r=asin(3\theta),(a&gt;0)$  ，<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146272.png" alt="image-20220203091922376" style="zoom:25%;" /></li><li>阿基米德螺线  $r=a\theta,(\theta &gt;0,a\ge 0)$  ，<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146273.png" alt="image-20220203092411064" style="zoom:25%;" /></li><li>伯努利双纽线。定义：$MA\times MB=a^2$，$r^2=a^2cos(2\theta)$，换成sin旋转45度<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146274.png" alt="image-20220203092802113" style="zoom:25%;" /></li></ul></li><li><p>参数方程—-<strong>摆线</strong>  <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146275.png" alt="image-20220203094106668" style="zoom:25%;" /></p></li><li><strong>星形线</strong>（内摆线）  <script type="math/tex">\left\{\begin{array}{lr}x=rcos^3t  \\ y=rsin^3t \end{array}\right.</script>， $x^{\frac{2}{3}}+y^{\frac{2}{3}}=r^{\frac{2}{3}}$。<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146276.png" alt="image-20220203100121753" style="zoom:20%;" /></li></ul><h3 id="4-反函数："><a href="#4-反函数：" class="headerlink" title="4.反函数："></a>4.反函数：</h3><ul><li>严格单调函数必有反函数（反过来不行，举例：分段）。</li><li>$y=ln(x+\sqrt{x^2+1})$它是个奇函数，导数是$\frac{1}{\sqrt{x^2+1}}$ (包括反向积回去)。  反双曲正弦。<ul><li>1是$a^2$，可以带入公式</li></ul></li><li>$\sqrt{a}-\sqrt{b}=\frac{a-b}{\sqrt{a}+\sqrt{b}}$   下面是加，上面是平方项   <strong>看见这样的就想反解！</strong></li><li>求反函数：$e^y=\sqrt{x^2+1}+x$，     $e^{-y}=\sqrt{x^2+1}-x$，    $x=\frac{e^y-e^{-y}}{2}$（经典奇函数，双曲正弦）。<ul><li><strong>它的泰勒展开式特别有意思！</strong><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146277.png" alt="image-20220202212621259" style="zoom:25%;" /></li></ul></li><li>$y=\frac{e^x+e^{-x}}{2}$ 悬链线，偶函数，双曲余弦<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146278.png" alt="image-20220202212644422" style="zoom:25%;" /></li></ul><h3 id="5-函数四种基本特性"><a href="#5-函数四种基本特性" class="headerlink" title="5.函数四种基本特性"></a>5.函数四种基本特性</h3><ul><li>单调<ul><li>谈有界性必须指明区间</li><li>见到<strong>根号求最值，用平方</strong>， <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146279.png" alt="image-20220202220515682" style="zoom:25%;" /></li><li>函数单调的定义法<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146280.png" alt="image-20220202214052029" style="zoom:40%;" /></li></ul></li><li>奇偶<ul><li>例：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146281.png" alt="image-20220202214541000" style="zoom:25%;" /></li><li>基本性质：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146282.png" alt="image-20220202215011033" style="zoom: 33%;" /></li><li>重要结论：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146283.png" alt="image-20220202215445923" style="zoom:33%;" /></li></ul></li></ul><h3 id="6-基本函数"><a href="#6-基本函数" class="headerlink" title="6.基本函数"></a>6.基本函数</h3><ul><li>看见 $u^v$ 换成 $e^{vln(u)}$ 来运算。</li><li>arcsin是$-\frac{\pi}{2}\sim\frac{\pi}{2}$变换而来的，arccos是$0\sim\pi$变换而来的。</li><li>$arcsin(x)+arccos(x)=\frac{\pi}{2},(-1\le x\le 1)$，求导为0，值是常数。$f’(x)=\frac{1}{\sqrt{1-x^2}}-\frac{1}{\sqrt{1-x^2}}=0$。$f(b)-f(a)=f’(\xi)(b-a)$，说明值为常数。<strong>图是对称往上翘的</strong></li><li>$arctan(x)+arccot(x)=\frac{\pi}{2},(-\infty\le x\le \infty)$。$f’(x)=\frac{1}{1+x^2}-\frac{1}{1+x^2}=0$。<strong>图是对称往下栽歪的</strong>。</li><li>[x]，不超过x的最大整数。$x-1&lt;[x]\le x$。<strong>严格大于它减一</strong>      $\lim_{x \to 0^+}[x]=0，\lim_{x \to 0^-}[x]=-1$。</li></ul><h3 id="7-中学基础知识"><a href="#7-中学基础知识" class="headerlink" title="7.中学基础知识"></a>7.中学基础知识</h3><ul><li>等比数列：<script type="math/tex">S_n=\left\{\begin{array}{lr}na_1,& r=1  \\ \frac{a_1(1-r^n)}{1-r},& r\neq1 \end{array}\right.</script>    <strong>特殊：当$|r|&lt;1,\lim_{n\to\infty}\frac{1-r^n}{1-r}=\frac{1}{1-r}$</strong>    <ul><li>常用求和公式<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146284.png" alt="image-20220203101730707" style="zoom:33%;" /></li></ul></li><li>三角函数基本公式 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146285.png" alt="image-20220203155557788" style="zoom:33%;" /><ul><li>​    诱导公式 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146286.png" alt="image-20220203155838338" style="zoom:20%;" /></li><li>倍角公式  <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146287.png" alt="image-20220203160456018" style="zoom: 33%;" /></li><li>和差化积 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146288.png" alt="image-20220203160724168" style="zoom:33%;" /></li><li>万能公式  <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146289.png" alt="image-20220203160900794" style="zoom:33%;" /></li></ul></li><li>基本不等式  <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146290.png" alt="image-20220203165716994" style="zoom:33%;" /></li></ul><h2 id="二、第二讲-数列极限"><a href="#二、第二讲-数列极限" class="headerlink" title="二、第二讲-数列极限"></a>二、第二讲-数列极限</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><ul><li>极限定义步骤：先用通项和极限值写出距离表达式，通过$\varepsilon$ 反解出n，取N=取整加一。</li><li><strong>例题</strong>：当$\lim\limits_{n\to\infty}A_n\to A，则\lim\limits_{n\to\infty}|A_n|\to |A|$。反之不成立。当A=0，反之成立。</li><li>数列收敛，其任何一个子数列收敛（它的逆否命题经常用）。两个子数列<strong>不收敛到同一个数</strong>。</li></ul><h3 id="2-性质"><a href="#2-性质" class="headerlink" title="2.性质"></a>2.性质</h3><ul><li>唯一性、有界性</li><li>保号性。<strong>推论</strong>：数列$\{a_n\}$从某项起$a_n&gt;0$且$a_n$极限为A，则$A\ge 0$。<strong>“即使通项大于0，极限也有可能是0”</strong><ul><li>$a_n\ge 0$也行。$\le 0$同理。</li></ul></li><li>加减乘除的极限是极限的加减乘除。<strong>但不能直接拆！极限不一定存在！</strong></li><li>夹逼准则不验证等号。<ul><li>看见一串长得差不多的，想夹逼</li><li>只动分母，不动分子</li></ul></li><li>单调有界准则：单调有界数列必有极限（魏尔斯特拉斯定理）</li></ul><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146291.jpg" alt="IMG_20220204_095950_edit_259757588862445" style="zoom:15%;" /></p><h2 id="三、函数极限"><a href="#三、函数极限" class="headerlink" title="三、函数极限"></a>三、函数极限</h2><h3 id="1-定义和性质"><a href="#1-定义和性质" class="headerlink" title="1.定义和性质"></a>1.定义和性质</h3><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146292.png" alt="image-20220204123043703" style="zoom:40%;" /></p><ul><li>极限存在充要条件：左右极限都存在且相等</li><li>减去极限值得到的函数，其极限为无穷小量（接近0）</li><li>性质<ul><li>唯一性。不唯一的不叫极限，是极限不存在</li><li>局部有界性。<strong>局部！</strong>范围之外的地方不一定</li><li>局部保号性。邻域里才保号</li><li>推论：戴帽法，<strong>即使函数大于0，极限也有可能得0</strong></li></ul></li><li>概念：$+\infty$ 在==考研数学里规定为不存在==，但它不叫“不存在”<ul><li><strong>极限存在必有界，充分不必要</strong>。</li><li>有界函数和有界函数的和差积还是有界的。<strong>（有限个）</strong></li><li>$f’(x)在(a,b)$内有界，则$f(x)$在此区间内有界（用拉格朗日证）<strong>（有限区间，不是无穷区间）</strong></li><li>区间内函数有界的证法：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146293.png" alt="image-20220204134103953" style="zoom:25%;" /></li><li>$e^u,|u|,arctan(u),[u]$ 这四种看见就想<strong>分类讨论</strong><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146294.jpg" alt="IMG_20220204_162809_edit_265698421962060" style="zoom:15%;" /></p></blockquote></li></ul></li></ul><h3 id="2-七种未定式计算："><a href="#2-七种未定式计算：" class="headerlink" title="2.七种未定式计算："></a>2.七种未定式计算：</h3><ul><li><p>夹逼准则</p><ul><li>两边<strong>作差极限为0不代表中间极限存在</strong>，因为不能保证两边各自都有极限</li></ul></li><li><p>洛必达法则</p><ul><li><p>$\frac{0}{0}或\frac{\infty}{\infty}$，上下都可导，上下求导极限为A或$\infty$。<strong>（第三条不满足不能用）</strong>，比如导完极限不存在</p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146295.png" alt="image-20220204164103266" style="zoom:25%;" /></p></blockquote></li><li><p><em>分子简单分母复杂、次数底下高—-洛必达越用越复杂！</em></p></li><li><em>等价无穷小替换时候，长得更基本的那个才能换</em></li></ul></li><li><p>泰勒公式</p><ul><li><p>公式</p><ul><li><p>$x \to 0$时，</p><ol><li><script type="math/tex">\sin{x} = x - \frac{1}{6}x^3 + o(x^3)</script>   <strong>奇函数展开没有偶次项</strong></li><li><script type="math/tex">\cos{x} = 1 - \frac{x^2}{2!} + \frac{x^4}{4!} + o(x^4)</script>    <strong>偶函数展开没有奇次项</strong></li><li><script type="math/tex; mode=display">\tan{x} = x + \frac{x^3}{3} + o(x^3)</script></li><li><script type="math/tex; mode=display">\arcsin{x} = x + \frac{1}{6}x^3 + o(x^3)</script></li><li><script type="math/tex; mode=display">\arctan{x} = x - \frac{x^3}{3} + o(x^3)</script></li><li><script type="math/tex; mode=display">\ln(1+x) = x - \frac{x^2}{2} + \frac{x^3}{3} - \frac{x^4}{4} +o(x^4)</script></li><li><script type="math/tex; mode=display">e^x = 1 + x + \frac{x^2}{2!} + \frac{x^3}{3!} + ... +\frac{x^n}{n!}</script></li><li><script type="math/tex; mode=display">\frac{1}{1-x} = 1 +x +x^2 + ... + x^n ,\,(|x| \lt 1)</script></li><li><script type="math/tex; mode=display">(1+x)^{\alpha} = 1 + \alpha x + \frac{\alpha(\alpha-1)}{2!}x^2 +o(x^2)</script><script type="math/tex; mode=display">\sqrt{1+x} = 1+ \frac{x}{2} - \frac{x^2}{8} + o(x^2)</script><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146296.png" alt="image-20220204165947859" style="zoom:25%;" /></p></li></ol></li></ul></li><li><p>展开原则</p><ul><li>若函数$f(x)$在包含$x_0$的某个开区间$(a,b)$上具有(n+1)阶的导数，那么对于任一$x\epsilon(a,b)$，有<blockquote><p><strong>$f(x)=\frac{f(x_0)}{0!}+\frac{f’(x_0)}{1!}(x-x_0)+\frac{f’’(x_0)}{2!}(x-x_0)^2+…+\frac{f^n(x_0)}{n!}(x-x_0)^n+R_n(x)$</strong>   </p></blockquote></li></ul></li><li><p>例题：求$\lim\limits_{x\to 0}e^{tanx}-e^x$的阶数</p><blockquote><p>原式=$\lim_{x\to 0}e^x(e^{tanx-x}-1)\sim 1\times(tanx-x)\sim \frac{x^3}{3}$ </p></blockquote></li></ul></li><li><p>归结原则（海涅定理）</p><ul><li><p>反着考证明<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146298.png" alt="image-20220204181026278" style="zoom: 25%;" /></p><ul><li><p>例题：求证$\lim\limits_{x\to\infty}\frac{1}{x}sin(\frac{1}{x})$不存在。</p><blockquote><p>取$x_n=\frac{1}{n\pi},n\to\infty,\lim\limits_{x\to\infty}f(x_n)=0$，</p><p>取$x_n=\frac{1}{(2n+\frac{1}{2})\pi},n\to\infty,\lim\limits_{x\to\infty}f(x_n)=\infty$。</p></blockquote></li></ul></li><li><p>正着考计算</p><ul><li><p><strong>看见$u^v$的极限都改成$e^{vln(u)}$来计算，也就是$e^{v(u-1)}$</strong> </p></li><li><p><strong>趋于$\infty$的看看是不是要变换成趋于0来计算</strong></p><ul><li><p>例题：求$\lim\limits_{n\to\infty}(ntan\frac{1}{n})^{n^2},n\epsilon N^+$ </p><blockquote><p>取$x_n=\frac{1}{n}$，由归结原则，原式为  $\lim\limits_{x\to 0}(\frac{tanx}{x})^{\frac{1}{n^2}}=e^{\lim\limits_{x\to 0}\frac{1}{n^2}\frac{tanx-x}{x}}=e^{\frac{1}{3}}$ </p></blockquote></li></ul></li></ul></li></ul></li><li><p>无穷小比阶</p><ul><li><p>低阶吸收高阶</p><blockquote><p>例题：$\lim\limits_{x\to 0}\frac{sin^2x-x^2}{e^{x^4}-1}=\lim\limits_{x\to 0}\frac{(sinx+x)(six-x)}{x^4}=-\frac{1}{3}$  </p></blockquote></li></ul></li></ul><script type="math/tex; mode=display">\lim\limits_{x \to 0} \frac{A}{B} = 1 \iff A \sim B</script><div class="table-container"><table><thead><tr><th>$e^x-1 \sim x$</th><th>$\ln(1+x) \sim x$</th></tr></thead><tbody><tr><td>$\sin{x} \sim x$</td><td>$x - \sin{x} \sim \frac{1}{6}x^3$</td></tr><tr><td>$\arcsin{x} \sim x$</td><td>$x - \arcsin{x} \sim -\frac{1}{6}x^3 $</td></tr><tr><td>$\tan{x} \sim x$</td><td>$x - \tan{x} \sim -\frac{1}{3}x^3$</td></tr><tr><td>$\arctan{x} \sim x$</td><td>$x - \arctan{x} \sim \frac{1}{3}x^3$</td></tr><tr><td>$1-\cos{x} \sim \frac{1}{2}x^2$</td><td>$x^2-sin^2{x} \sim \frac{1}{3}x^4$</td></tr><tr><td>$(1+x)^{\alpha}-1 \sim \alpha x$</td><td>$x+\sin{x} \sim 2x$</td></tr></tbody></table></div><p>两个无穷小相除求极限，为非1常数—-同阶无穷小；为1—-等价无穷小。</p><h3 id="3-连续与间断"><a href="#3-连续与间断" class="headerlink" title="3.连续与间断"></a>3.连续与间断</h3><ul><li>第一类<ul><li>可去：<em>极限和函数值都有，但不相等，或者点没定义</em> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146299.png" alt="image-20220205090315908" style="zoom:20%;" /></li><li>跳跃：<em>左右极限存在但不相等</em> </li></ul></li><li>第二类<ul><li>无穷：<em>两遍极限都是无穷大</em></li><li>振荡：<em>极限值振荡不存在，例如  $\lim\limits_{x\to 0}sin(\frac{1}{x})$</em> </li></ul></li><li>有双侧定义才讨论间断点</li></ul><h2 id="四、导数"><a href="#四、导数" class="headerlink" title="四、导数"></a>四、导数</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><ul><li><p>导数：导数存在$\iff$左右导都存在且相等</p><ul><li><p>证明：偶函数的导数是奇函数</p><blockquote><p>$f’(-x)=\lim\limits_{\Delta x\to 0}\frac{f(-x+\Delta x)-f(-x)}{\Delta x}=-\lim\limits_{\Delta x\to 0}\frac{f(x+(-\Delta x))-f(x)}{-\Delta x}=-f’(x)$</p></blockquote><ul><li><strong>没有形式的时候自己凑形式，尤其是凑定义，或者已知条件</strong></li></ul></li><li><p>例题：</p><blockquote><p>$\lim\limits_{x\to 1}{\frac{f(x)}{x-1}}=2\Longrightarrow f(1)=0,f’(1)=2$</p></blockquote><ul><li><strong>看见这种形式直接这么想</strong></li></ul></li></ul></li><li><p>微分：线性主部(微分)+误差</p><blockquote><p>如果x在$x_0$可微，那么可以用这一点切线近似代替曲线<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146300.png" alt="image-20220208223156167" style="zoom:25%;" /></p></blockquote></li></ul><h3 id="2-计算"><a href="#2-计算" class="headerlink" title="2.计算"></a>2.计算</h3><ul><li><p>分段：分段点用<strong>定义</strong>正负来求，非分段点用<strong>求导公式</strong></p></li><li><p>复合</p><ul><li>$df(💩)=f’(💩)d(💩)$ 一阶微分形式不变性</li><li>分段的复合函数求导不一定要写出来解析式，可以<strong>使用链式求导规则，直接代值进去</strong></li></ul></li><li><p>反函数</p><ul><li><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146301.png" alt="image-20220217082952182" style="zoom:30%;" /></p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146302.png" alt="image-20220217083749882" style="zoom:20%;" />。。  <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146303.png" alt="image-20220217090440542" style="zoom:20%;" /></p></blockquote></li></ul></li><li><p>参数方程  ：用定义推导，<strong>不是</strong>简单的一阶导再求导</p></li><li><p>隐函数</p><ul><li><p>公式推导<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146304.png" alt="image-20220217092114687" style="zoom:20%;" /></p></li><li><p>例：求$sin(xy)=ln(\frac{x+e}{y})+1$ 在$x=0$时的导数</p><blockquote><p>y要当作x的函数来对待，需要复合求导<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146305.png" alt="image-20220217092903197" style="zoom:20%;" /></p></blockquote></li></ul></li><li><p>对数：幂次特别复杂的用对数拆开</p></li><li><p>高阶导数</p><ul><li>泰勒公式展开对比次数对应的系数<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146306.png" alt="image-20220217145214543" style="zoom:20%;" /></li></ul></li><li><p>变限积分</p><ul><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146307.png" alt="image-20220217084526613" style="zoom:30%;" /></li></ul></li></ul><h2 id="五、导数几何应用"><a href="#五、导数几何应用" class="headerlink" title="五、导数几何应用"></a>五、导数几何应用</h2><h3 id="1-极值与最值"><a href="#1-极值与最值" class="headerlink" title="1.极值与最值"></a>1.极值与最值</h3><ul><li>考研中无特殊说明，极值为<strong>广义极值</strong></li><li><strong>极值定义</strong>中需要<strong>邻域</strong>，因此单侧点不考虑</li></ul><h3 id="2-单调性、极值判别"><a href="#2-单调性、极值判别" class="headerlink" title="2.单调性、极值判别"></a>2.单调性、极值判别</h3><ul><li>单调性判别</li><li><p>极值必要条件</p><ul><li>（费马定理）：$x=x_0$处可导，且在$x_0$处取得极值，则必有$f’(x_0)=0$。</li></ul></li><li><p>==联系$f$与$f’$，立即想到拉格朗日！！==</p></li><li>三个充分条件<ul><li>在某点连续（不需要可导），去心邻域内可导，左右导数正负决定是什么极值点</li><li>二阶可导，$f’(x)=0,f’’(x)\neq 0$，必为极值点</li><li>n阶可导，最高阶不得0的导数是<strong>偶数阶导数</strong>，必为极值点</li></ul></li></ul><h3 id="3-凹凸性与拐点"><a href="#3-凹凸性与拐点" class="headerlink" title="3.凹凸性与拐点"></a>3.凹凸性与拐点</h3><ul><li>凹凸性判别</li><li><p>判拐点必要条件</p><ul><li>==注：==拐点是凹凸分界点，无需可导，只要连续。<strong>拐点是曲线上一点</strong>，而极值点在定义域上，写作$x_0$</li><li>二阶导存在，且这点是拐点，那么二阶导为0</li></ul></li><li><p>三个充分条件</p><ul><li>某点处连续，邻域内二阶导存在，二阶导变号，拐点存在</li><li>邻域内三阶可导，二阶导为0，三阶导不为0，拐点存在</li><li>n阶可导，<strong>从二阶开始</strong>都是0，但n阶不是0，<strong>n是奇数</strong>，拐点存在</li></ul></li></ul><h3 id="4-渐近线"><a href="#4-渐近线" class="headerlink" title="4.渐近线"></a>4.渐近线</h3><ul><li><p>铅锤：</p><ul><li>一般是无定义点</li><li><strong>不要求端点！而间断点要求区间！</strong></li></ul></li><li><p>水平：和斜渐近线不会在同一方向上共同存在</p></li><li>斜渐近线：$\lim\limits_{x\to \infty}\frac{f(x)}{x}=k$，$\lim\limits_{x\to \infty}f(x)-kx=b$ 。太快太慢的函数都不会有斜渐近线</li></ul><h3 id="5-最值或取值范围"><a href="#5-最值或取值范围" class="headerlink" title="5.最值或取值范围"></a>5.最值或取值范围</h3><ul><li><p>闭区间</p><ul><li>闭区间连续函数必有最值</li></ul></li><li><p>开区间</p><ul><li>求出可疑点函数值和两端单侧极限，比较</li></ul></li></ul><h2 id="六、中值定理"><a href="#六、中值定理" class="headerlink" title="六、中值定理"></a>六、中值定理</h2><ul><li><p>介值定理</p><ul><li>闭区间是重要信号，因为不能排除 $\xi$ 取在边界上</li></ul></li><li><p>平均值定理</p><ul><li>见到函数值加加加，想到用平均值除下去</li></ul></li><li><p>费马定理</p><ul><li>一阶可导，取极值，则一阶导为0</li><li>证明：连续可导函数，导数不得0，则导数保号。（用导数零点定理反证）（达布定理）</li></ul></li><li><p>罗尔定理</p><ul><li>闭区间连续开区间可导，端点值相等，开区间内存在一点使导数为0</li><li>常用乘积导数公式的逆用来构造辅助函数$\begin{cases}[f\times f]’&amp;=2f\times f’\\ [f\times f’]’&amp;=(f’)^2+f\times f’’\\ [f\times e^g]’&amp;=e^g\times[f’+f\times g’] \end{cases}$ </li><li>构造辅助函数 $F(x)$<ul><li>求导公式 $(u \cdot v)’ = u’v+uv’$ 逆用<ul><li>见 $F’(\xi)=f’(\xi)\cdot \xi+f(\xi)=0$，构造 $F(x)=f(x)x$</li><li>见 $F’(\xi)=[f’(\xi)+f(\xi)]e^{\xi}=0$，构造 $F(x)=f(x) e^x$</li><li>见 $F’(\xi)=[f’(\xi)+f(\xi) \varphi’(\xi)] e^{\varphi(\xi)}=0$，构造 $F(x)=f(x) e^{\varphi(x)}$</li><li>见  $F’(\xi)=f’’(x)+g(x)f’(x)=0$,构造 $F(x)=f’(x) e^{\int g(x)\text{d}x}$</li><li>见 $F’(\xi)=f(x)+g(x) \int_0^x f(t)\text{d}t =0$，构造 $F(x)=\int_0^x f(t)\text{d}t \cdot e^{\int g(x) \text{d}x}$</li><li>见 $F’(\xi)=f’(x)+g(x)[f(x)-1]=0$，构造 $F(x)=[f(x)-1] \cdot e^{\int g(x)\text{d}x}$</li></ul></li><li>积分还原法<ol><li>将欲证结论中的 $\xi$ 改为 $x$</li><li>积分之（为了简单，令 $c=0$）</li><li>移项使等式一端为0，另一端记为 $F(x)$</li></ol></li></ul></li></ul></li><li><p>拉格朗日中值定理</p><ul><li>常见形式 $\begin{cases}f-f\\ f \text{与} f’ \end{cases}$ ，0和1可以用来构造</li><li><strong>证闭区间用积分中值定理，证开区间用拉格朗日</strong></li></ul></li><li><p>柯西中值定理 $\frac{f(b)-f(a)}{g(b)-g(a)}=\frac{f’(\xi)}{g’(\xi)},g’\neq0$ </p><ul><li>取$g(x)=x$，退化为拉格朗日</li></ul></li><li><p>泰勒公式</p><ul><li>证明极大值时候也可以用泰勒公式拆开，看最高阶的正负号来比大小。余项不影响大局</li><li>中值是端点的函数，不是常数，$f’(\xi)$不能往外提</li><li>串联关系<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146308.png" alt="image-20220218153554454" style="zoom:20%;" /></li></ul></li><li><p>积分中值定理</p><ul><li>$\int_{a}^{b}f(x)dx=f(\xi)(b-a)$，把积分转换为函数，$\xi$在ab之间</li></ul></li></ul><h2 id="七、零点问题与微分不等式"><a href="#七、零点问题与微分不等式" class="headerlink" title="七、零点问题与微分不等式"></a>七、零点问题与微分不等式</h2><h3 id="1-零点问题"><a href="#1-零点问题" class="headerlink" title="1.零点问题"></a>1.零点问题</h3><ul><li>罗尔原话：<strong>n阶导数至多k个根，则函数至多k+n个根</strong></li><li>实系数奇次方程至少有一个实根<ul><li>判断<strong>函数根的个数</strong>可以从<strong>导数根的个数</strong>入手</li></ul></li></ul><h3 id="2-微分不等式"><a href="#2-微分不等式" class="headerlink" title="2.微分不等式"></a>2.微分不等式</h3><ul><li><p>用函数性态证明不等式：函数画图讨论</p></li><li><p>用常数变量化证明不等式：把一个常量设为变量或换元</p></li><li><p>用中值定理证明不等式：拉格朗日</p></li></ul><h2 id="八、积分"><a href="#八、积分" class="headerlink" title="八、积分"></a>八、积分</h2><h3 id="1-概念-1"><a href="#1-概念-1" class="headerlink" title="1.概念"></a>1.概念</h3><ul><li>不定积分<ul><li>不定积分奇偶性 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146309.png" alt="image-20220218203234848" style="zoom:20%;" /></li><li>原函数存在定理<ul><li>连续函数必有原函数。</li><li>含跳跃、可去、无穷间断点的函数无原函数</li></ul></li></ul></li><li>定积分<ul><li>概念：取区间为 $(0,1),\lim\limits_{n\to\infty}\sum\limits_{i=1}^n f(\frac{i}{n})\frac{1}{n}=\int_0^1f(x)dx$ <ul><li>碰见<strong>夹逼做不出来</strong>的极限可以考虑<strong>定积分定义</strong>。看n和i是不是齐次的</li></ul></li><li>存在定理<ul><li>闭区间连续</li><li>闭区间单调</li><li>闭区间有界，有有限个间断点</li></ul></li><li>性质<ul><li>积分中值定理，设出原函数用拉格朗日证</li></ul></li></ul></li><li>反常积分<ul><li>概念理解</li><li>无穷区间反常积分概念与敛散性</li><li>无界函数反常积分概念与敛散性</li><li>判敛</li></ul></li></ul><h3 id="2-计算-1"><a href="#2-计算-1" class="headerlink" title="2.计算"></a>2.计算</h3><h4 id="1）基本积分公式"><a href="#1）基本积分公式" class="headerlink" title="1）基本积分公式"></a>1）基本积分公式</h4><ol><li><p>$\int x^k\text{d}x = \frac{1}{k+1} x^{k+1} +C \, (k \ne -1)$； $\begin{cases}\int \frac{1}{x^2}\text{d}x&amp;=-\frac{1}{x}+C\\ \int \frac{1}{\sqrt{x}} \text{d}x &amp;= 2\sqrt{x} +C\end{cases}$ </p></li><li><p>$\int \frac{1}{x} \text{d}x = \ln{|x|} + C$</p><ul><li>$[\ln|u(x)|]_x’ = \frac{u_x’}{u(x)}$</li></ul></li><li><p>$\int a^x \text{d}x = \frac{1}{\ln{a}} a^x+ C$</p><ul><li>$\int e^x \text{d}x = e^x + C$</li></ul></li><li>$\int \sin{x} \text{d}x = -\cos{x} + C$<ul><li>$\int \cos{x} \text{d}x = \sin{x} + C$</li><li>$\int \tan{x} \text{d}x = -\ln{|\cos{x}|} + C$</li><li>$\int \cot{x} \text{d}x = \ln{|\sin{x}|} + C$</li><li>$\int \sec{x} \text{d}x = \ln{|\sec{x}+\tan{x}|} + C$</li><li>$\int \csc{x} \text{d}x = \ln{|\csc{x}-\cot{x}|} + C$</li><li>$\int \sec^2{x} \text{d}x = \tan{x} + C$</li><li>$\int \csc^2{x} \text{d}x = -\cot{x} + C$</li><li>$\int \sec{x}\tan{x} \text{d}x = \sec{x} + C$</li><li>$\int \csc{x}\cot{x} \text{d}x = -\csc{x} + C$</li></ul></li><li>$\int \frac{1}{\sqrt{1-x^2}} \text{d}x = \arcsin{x} + C$<ul><li>$\int \frac{1}{\sqrt{a^2-x^2}} \text{d}x = \arcsin{\frac{x}{a}} + C$</li></ul></li><li>$\int \frac{1}{\sqrt{x^2+a^2}} \text{d}x = \ln{(x+\sqrt{x^2+a^2})} + C$<ul><li>$\int \frac{1}{\sqrt{x^2-a^2}} \text{d}x = \ln{|x+\sqrt{x^2-a^2}|} + C$</li></ul></li><li>$\int \frac{1}{1+x^2} \text{d}x = \arctan{x} + C$<ul><li>$\int \frac{1}{a^2+x^2} \text{d}x = \frac{1}{a} \arctan{\frac{x}{a}} + C$</li></ul></li><li>$\int \frac{1}{a^2-x^2} \text{d}x = \frac{1}{2a} \ln{|\frac{a+x}{a-x}|} + C$<ul><li>$\int \frac{1}{x^2-a^2} \text{d}x = \frac{1}{2a} \ln{|\frac{x-a}{x+a}|} + C$</li></ul></li><li>$\int \sqrt{a^2-x^2} \text{d}x = \frac{a^2}{2} \arcsin{\frac{x}{a}} + \frac{x}{2} \sqrt{a^2-x^2} + C$</li><li>$\int sin^2xdx=\frac{x}{2}-\frac{sin2x}{4}+C$；$sin^2=\frac{1-cos2x}{2}$<ul><li>$\int cos^2xdx=\frac{x}{2}+\frac{sin2x}{4}+C$；$cos^2=\frac{1+cos2x}{2}$</li><li>$\int tan^2xdx=tanx-x+C$；$tan^2=sec^2x-1$</li><li>$\int cot^2xdx=-cotx-x+C$；$cot^2=csc^2x-1$ </li></ul></li></ol><h4 id="2）换元法"><a href="#2）换元法" class="headerlink" title="2）换元法"></a>2）换元法</h4><ul><li>三角代换<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146310.png" alt="image-20220219101101502" style="zoom:45%;" /> （可能需要先恒等变形）</li><li>根号里面没有平方换不了元的，整个令成t</li><li>分母次数很高，倒代换</li><li>复杂函数直接代换，比如arcsin</li></ul><h4 id="3）分部积分"><a href="#3）分部积分" class="headerlink" title="3）分部积分"></a>3）分部积分</h4><ul><li><p>反对幂指三，越往左越当u，易求导</p></li><li><p>错位相乘，正负相间 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146311.png" alt="image-20220219104811361" style="zoom:25%;" /></p></li></ul><h4 id="4）有理函数"><a href="#4）有理函数" class="headerlink" title="4）有理函数"></a>4）有理函数</h4><ul><li>分数形式，没有根号，有理函数形式，上面次数比下面小</li><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146312.png" alt="image-20220220102748983" style="zoom:40%;" /></li><li>解待定系数时候不需要硬解，可以设出来一些x值巧妙消掉几个字母</li></ul><h4 id="5）定积分"><a href="#5）定积分" class="headerlink" title="5）定积分"></a>5）定积分</h4><ul><li><strong>区间再现</strong>公式：$\int_a^bf(x)dx=\int_a^bf(a+b-x)dx$ 。<ul><li>要求函数连续</li><li>一般是两个加起来好做</li></ul></li><li><strong>点火公式</strong>: $I = \int_0^{\frac{\pi}{2}} \sin^n{x} \mathrm{d}x=\begin{cases}\frac{n-1}{n} \frac{n-3}{n-2} … \frac{1}{2} \cdot \frac{\pi}{2}&amp;,n为偶数(\ge2)\\\frac{n-1}{n} \frac{n-3}{n-2} … \frac{2}{3} \cdot 1&amp;,n为奇数(\ge3)\end{cases}$ 。</li><li>点火公式有x挡着：$\int_0^{nT}xf(x)dx=\frac{n^2T}{2}\int_0^Tf(x)dx$ </li><li><strong>扩大范围</strong>点火公式：$\begin{cases}\int_0^\pi sin^nxdx=2\int_0^{\frac{\pi}{2}} \sin^n{x}dx\\ \int_0^\pi cos^nxdx=\begin{cases}0&amp;,n为正奇数 \\2\int_0^{\frac{\pi}{2}} \cos^n{x}dx&amp;,n为正偶数\end{cases}\\ \int_0^{2\pi}sin^nxdx=\int_0^{2\pi}cos^nxdx=\begin{cases}0&amp;,n为正奇数 \\4\int_0^{\frac{\pi}{2}} \sin^n{x}dx&amp;,n为正偶数 \end{cases}\end{cases}$ </li></ul><h2 id="九、积分几何应用"><a href="#九、积分几何应用" class="headerlink" title="九、积分几何应用"></a>九、积分几何应用</h2><h3 id="1-平面面积"><a href="#1-平面面积" class="headerlink" title="1.平面面积"></a>1.平面面积</h3><ul><li>射线旋转出来的面积：$S=\int_\alpha^\beta \frac{1}{2}|r_2^2-r_1^2|d\theta$ <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146313.png" alt="image-20220220154049347" style="zoom:25%;" /></li><li>参数方程算面积，都转换到t，y直接带y(t)，dx化为X’(t)dt。（范围也化成t的范围）</li></ul><h3 id="2-旋转体体积"><a href="#2-旋转体体积" class="headerlink" title="2.旋转体体积"></a>2.旋转体体积</h3><ul><li>绕y旋转用一堆空心圆柱来算 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146314.png" alt="image-20220220164134432" style="zoom:20%;" /> </li></ul><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><h2 id="十、积分等式与不等式"><a href="#十、积分等式与不等式" class="headerlink" title="十、积分等式与不等式"></a>十、积分等式与不等式</h2><ul><li>等式<ul><li>中值定理：<ul><li>f,g在$[a,b]$上<strong>连续且g不变号</strong>，至少存在一点$\xi\in[a,b]$，使得$\int_a^bf(x)g(x)dx=f(\xi)\int_a^bg(x)dx$ </li><li>用柯西中值定理证，设出来变上限积分往里带</li></ul></li><li>夹逼准则：见到<strong>带极限的积分</strong>考虑夹逼。极限和积分号不能轻易换！！！</li></ul></li><li>不等式<ul><li>函数单调性：上下限都是常数，上限换为x，变上限积分求单调性</li><li>拉格朗日</li><li>泰勒公式</li><li>积分法</li></ul></li></ul><h2 id="十一、多元函数微分"><a href="#十一、多元函数微分" class="headerlink" title="十一、多元函数微分"></a>十一、多元函数微分</h2><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><ul><li>平面点集<ul><li>内点，聚点（边界点）</li></ul></li><li>可微：$\lim\limits_{\Delta x\to 0,\Delta y\to0}\frac{f(x+\Delta x,y+\Delta y)-f(x,y)}{\sqrt{\Delta x^2+\Delta y^2}}=0$ </li><li>偏导数连续性：$\lim\limits_{x\to0}f_x’(x,y)=f’_x(0,y)$，y同理</li></ul><h3 id="2-多元函数微分法则"><a href="#2-多元函数微分法则" class="headerlink" title="2.多元函数微分法则"></a>2.多元函数微分法则</h3><ul><li><p>链式求导规则 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146315.png" alt="image-20220222222551924" style="zoom:25%;" /></p></li><li><p>隐函数存在定理（公式法）：$\frac{dy}{dx}=-\frac{F_x’}{F_y’}$ </p><ul><li><p>例：已知两个偏导数，求原函数</p><ul><li>积回去一个，设出来另一个</li><li><p>用设出来的函数再往回积</p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146316.png" alt="image-20220222232612930" style="zoom:25%;" /></p></blockquote></li></ul></li></ul></li></ul><h3 id="3-多元函数极值与最值"><a href="#3-多元函数极值与最值" class="headerlink" title="3.多元函数极值与最值"></a>3.多元函数极值与最值</h3><ul><li>概念</li><li>无条件极值：先求出<strong>可疑点</strong>，再求偏导<strong>验证</strong><ul><li>必要条件：一阶偏导数存在且为0</li><li>充分条件：$\Delta=AC-B^2=\begin{cases}&gt;0&amp;极值\begin{cases}A<0&极大值\\A>0&amp;极小值\end{cases}\\&lt;0&amp;非极值\\=0&amp;方法失效，另谋他法\end{cases}$  </li></ul></li><li>条件极值与拉格朗日乘数法<ul><li>闭区域边界上的最值</li><li>闭区域上的最值</li></ul></li></ul><h2 id="十二、二重积分"><a href="#十二、二重积分" class="headerlink" title="十二、二重积分"></a>十二、二重积分</h2><h3 id="1-概念-2"><a href="#1-概念-2" class="headerlink" title="1.概念"></a>1.概念</h3><ul><li>轮换对称性</li></ul><h3 id="2-计算-2"><a href="#2-计算-2" class="headerlink" title="2.计算"></a>2.计算</h3><ul><li>直角坐标系</li><li>极坐标系：$d\sigma=d\theta \cdot rdr$，<strong>别忘了r！！！</strong> <ul><li>看有没有$x^2+y^2或者\frac{x}{y}或者\frac{y}{x}$的形式</li><li>看积分区域是否圆</li></ul></li><li>积分次序<ul><li>常见积不出来的函数。调整积分次序<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146317.png" alt="image-20220223191644151" style="zoom:25%;" /> </li></ul></li><li>二重积分处理一元积分问题</li></ul><h2 id="十三、微分方程"><a href="#十三、微分方程" class="headerlink" title="十三、微分方程"></a>十三、微分方程</h2><h3 id="1-概念-3"><a href="#1-概念-3" class="headerlink" title="1.概念"></a>1.概念</h3><ul><li><p>通解：解中独立常数的个数等于阶数</p></li><li><p>特解：通过初始条件确定通解中常数的值</p></li></ul><h3 id="2-一阶求解"><a href="#2-一阶求解" class="headerlink" title="2.一阶求解"></a>2.一阶求解</h3><ul><li><p>变量可分离</p><ul><li>x和y可以完全拆开，则物以类聚，然后两边积分</li><li>解题过程中可能人为限制了条件，所以通解不一定覆盖全部解，还有奇解</li></ul></li><li><p>可化为变量可分离</p><ul><li>$\frac{dy}{dx}=f(ax+by+c)$，令$u=ax+by+c$，则有$\frac{du}{dx}=a+bf(u)$ </li><li>齐次型：可以整体换元的</li></ul></li><li><p>一阶线性微分方程</p><ul><li><p>对于$y’+py=q$，$y=e^{-\int pdx}[\int e^{\int pdx}\cdot qdx+C]$ </p></li><li><p><strong>lnu注意绝对值！</strong>一阶这里不加绝对值，其他时候加绝对值</p></li><li><p>例：求$y’+1=e^{-y}sinx$的通解</p><blockquote><p>$e^y\cdot y’+e^y=sinx$，即$(e^y)’+e^y=sinx$ </p></blockquote></li></ul></li><li><p>伯努利方程</p><ul><li>$y’+py=q\cdot y^n$ <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146318.png" alt="image-20220223222751901" style="zoom:33%;" /> </li></ul></li></ul><h3 id="3-二阶可降阶求解"><a href="#3-二阶可降阶求解" class="headerlink" title="3.二阶可降阶求解"></a>3.二阶可降阶求解</h3><ul><li>缺y型：$y’’=f(x,y’)$，没有y，正常算y’，再求y</li><li>缺x型：$y’’=f(y,y’)$，没有x，<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146319.png" alt="image-20220223225437032" style="zoom:25%;" /> </li><li>两种题型只是<strong>p代的形式不同</strong> </li></ul><h3 id="4-高阶"><a href="#4-高阶" class="headerlink" title="4.高阶"></a>4.高阶</h3><ul><li><p>概念</p><ul><li>y’\y前面都是数字，是常系数</li><li>后面分离出y’’\y’\y，自由项恒为0则为齐次，否则非齐次</li></ul></li><li><p>解的结构</p><ul><li><p>两个线性无关的解，线性组合是通解</p></li><li><p>齐次通解 + 特解 = 非齐次特解。自由项可拆，特解相加</p></li><li><p>特解形式： $y’’+py’+qy=0$ 求$\Delta$，$y_{齐通}=\begin{cases}C_1e^{\lambda_1x}+C_2e^{\lambda_2x}&amp;\Delta&gt;0\(C_1+C_2x)e^{\lambda x}&amp;\Delta=0\\e^{\alpha x}(C_1cos\beta x+C_2sin\beta x)&amp;\Delta&lt;0\end{cases}$ </p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146320.png" alt="image-20220302204304394" style="zoom:30%;" /></p><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146321.png" alt="image-20220303095129056" style="zoom:30%;" /></p></blockquote></li></ul></li><li><p>二阶常系数齐次线性-通解</p></li><li><p>二阶常系数非齐次线性-特解</p></li><li><p>n阶常系数齐次线性-解</p></li></ul><h2 id="十四、级数"><a href="#十四、级数" class="headerlink" title="十四、级数"></a>十四、级数</h2><h3 id="1-常数项级数敛散性"><a href="#1-常数项级数敛散性" class="headerlink" title="1.常数项级数敛散性"></a>1.常数项级数敛散性</h3><ul><li><p>正项级数：所有项非负</p><ul><li><p>收敛原则：收敛$\iff$有上界</p></li><li><p>比较判别法</p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146322.png" alt="image-20220303161148444" style="zoom:25%;" /></p><p>广义p-级数：$\sum\limits_2^\infty\frac{1}{n(ln\ n)^p}\;\;\;\begin{cases}p&gt;1&amp;收敛\\p\le1&amp;发散\end{cases}$ </p></blockquote></li><li><p>比较判别法的极限形式</p><ul><li>比值极限为A，A为常数二者同敛散</li></ul></li><li><p>比值判别法（达朗贝尔）</p><ul><li>通项后一项比它 求极限，极限<1收敛，>1发散，=1无法判别</li><li><strong>通项里带n+1次方或者比值的时候好用</strong> </li></ul></li><li><p>根植判别法（柯西）</p><ul><li>开n次跟号，小于1收敛，大于1发散，等于1无法判别</li><li><strong>次数越高越方便</strong> </li></ul></li></ul></li><li><p>交错级数</p><ul><li>莱布尼茨判别法：通项绝对值单调不增，趋于0</li><li><strong>造正负号，讨论单调性</strong> </li></ul></li><li><p>任意项级数</p><ul><li>绝对收敛：加绝对值后收敛</li><li>条件收敛：本身收敛，加绝对值后发散</li><li><strong>看见平方项想到基本不等式！</strong> </li></ul></li></ul><h3 id="2-幂级数"><a href="#2-幂级数" class="headerlink" title="2.幂级数"></a>2.幂级数</h3><ul><li><p>收敛域</p><ul><li><p>阿贝尔定理：<strong>两个点单独讨论！</strong> </p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146323.png" alt="image-20220304085403041" style="zoom:35%;" /></p></blockquote></li><li><p>收敛域求法：$\lim\limits_{n\to\infty}|\frac{a_{n+1}}{a_n}|=\rho$，$R=\frac{1}{\rho}$ </p><ul><li>$\lim\limits_{n\to\infty}\frac{|u_{n+1}(x)|}{|u_n(x)|}=\rho，或者开n次跟号$，令其&lt;1，得到的开区间就是收敛域。再判断端点</li><li>条件收敛的半径就是收敛半径<ol><li>乘除因式$(x-x_0)^k$ 或者平移，半径不变</li><li>逐项求导，半径不变，收敛域可能缩小</li><li>逐项积分，半径不变，收敛域可能扩大</li></ol></li></ul></li></ul></li><li><p>求和函数</p><ul><li><p>运算法则</p><ul><li>通项和下标都相同才能加减</li><li>通项下标一起变 $\sum\limits_{n=k}^\infty a_nx^n=\sum\limits_{n=k+l}^\infty a_{n-l}x^{n-l}$ </li><li>只变下标：拆出来前n项</li><li>只变通项：提出来n次幂</li></ul></li><li><p>重要展开式</p><ul><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146324.png" alt="image-20220304101331110" style="zoom:40%;" /></li><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146325.png" alt="image-20220304101234921" style="zoom:40%;" /></li></ul></li><li><p>做法：</p><ul><li><p>先导后积（用变限积分避免+C）（<strong>n在分母上</strong>）</p><blockquote><p>$\int_{x_0}^xS’(t)dt=S(t)|_{x_0}^x=S(x)-S(x_0)$ 因此 $S(x)=S(x_0)+\int_{x_0}^xS’(t)dt$。$x_0$通常选为中心点，好算</p></blockquote></li><li><p>先积后导（<strong>n在分子上</strong>）</p></li></ul></li></ul></li><li><p>函数展开成幂级数</p><ul><li>求法<ul><li>直接：麦克劳林公式展开</li><li>间接：利用已知展开式，变量代换、四则运算、求导积分、待定系数</li></ul></li></ul></li></ul><h2 id="十五、数一数二专题"><a href="#十五、数一数二专题" class="headerlink" title="十五、数一数二专题"></a>十五、数一数二专题</h2><h3 id="1-微分"><a href="#1-微分" class="headerlink" title="1.微分"></a>1.微分</h3><ul><li><p>物理应用</p></li><li><p><strong>相关变化率</strong>：$\frac{dy}{dt}=\frac{dy}{dx}\cdot\frac{dx}{dt}$ </p><blockquote><p>例：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146326.png" alt="image-20220304132010923" style="zoom:33%;" /></p></blockquote></li><li><p>几何应用：曲率$k=\frac{|y’’|}{[1+(y’)^2]^\frac{3}{2}}$，曲率半径$R=\frac{1}{k}$ </p></li></ul><h3 id="2-积分"><a href="#2-积分" class="headerlink" title="2.积分"></a>2.积分</h3><ul><li><p>物理应用</p><ul><li><p>抽水做功$W=x\cdot\int_a^b\rho gA(x)dx=\rho g\int_a^bxA(x)dx$ </p></li><li><p>水压力$F=\int_a^b\rho gx\cdot[f(x)-h(x)]dx$ </p><blockquote><p>例：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146327.png" alt="image-20220304134700776" style="zoom:33%;" /></p></blockquote></li></ul></li><li><p>几何应用</p><ul><li>平面上的曲边梯形 形心坐标公式 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146328.png" alt="image-20220304135107229" style="zoom:33%;" /></li><li>平面曲线弧长 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146329.png" alt="image-20220304135632785" style="zoom:33%;" /></li><li>旋转曲面表面积     <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146330.png" alt="image-20220304143235100" style="zoom:33%;" /></li><li>平行截面面积已知的立体体积</li></ul></li></ul><h3 id="3-欧拉方程"><a href="#3-欧拉方程" class="headerlink" title="3.欧拉方程"></a>3.欧拉方程</h3><p>形如$x^2y’’+pxy’+qy=f(x)$。解法：x&gt;0时令$x=e^t$，x&lt;0时令$x=-e^t$，方程化为$y’’_t+(p-1)y’_t+qy=f(e^x)$。</p><h3 id="4-傅立叶级数"><a href="#4-傅立叶级数" class="headerlink" title="4.傅立叶级数"></a>4.傅立叶级数</h3><ul><li><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146331.png" alt="image-20220304164107852" style="zoom:33%;" /> $\begin{cases}a_n=\frac{1}{l}\int_{-l}^lf(x)cos\frac{n\pi}{l}xdx,&amp;n=0,1,2…\\b_n=\frac{1}{l}\int_{-l}^lf(x)sin\frac{n\pi}{l}xdx,&amp;n=0,1,2…\\a_0=\frac{1}{l}\int_{-l}^lf(x)dx\end{cases}$ </li><li>定义域给一半，要求展开成正线级数或者余弦级数，按要求延拓再展开</li></ul><h2 id="十六、空间解析几何"><a href="#十六、空间解析几何" class="headerlink" title="十六、空间解析几何"></a>十六、空间解析几何</h2><h3 id="1-向量"><a href="#1-向量" class="headerlink" title="1.向量"></a>1.向量</h3><ul><li><strong>向量积</strong>：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146332.png" alt="image-20220304195443884" style="zoom:30%;" /></li><li>混合积 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146333.png" alt="image-20220304195707356" style="zoom:33%;" /></li><li>方向角和<strong>方向余弦</strong> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146334.png" alt="image-20220304195834666" style="zoom:33%;" /></li></ul><h3 id="2-平面与直线"><a href="#2-平面与直线" class="headerlink" title="2.平面与直线"></a>2.平面与直线</h3><ul><li><p>平面方程</p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146335.png" alt="image-20220304200430063" style="zoom:40%;" /></p></blockquote></li><li><p>直线方程</p><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146336.png" alt="image-20220304200733367" style="zoom:40%;" /></p></blockquote></li><li><p>点面距离：$d=\frac{|Ax_0+By_0+Cz_0+D|}{\sqrt{A^2+B^2+C^2}}$ </p></li></ul><h3 id="3-曲线与曲面"><a href="#3-曲线与曲面" class="headerlink" title="3.曲线与曲面"></a>3.曲线与曲面</h3><ul><li>空间曲线在坐标面上投影：联立$\begin{cases}F(x,y,z)=0\\G(x,y,z)=0\end{cases}$，消去z得到$\phi(x,y)=0$，则投影为$\begin{cases}\phi(x,y)=0\\z=0\end{cases}$ </li></ul><h3 id="4-曲面与曲面"><a href="#4-曲面与曲面" class="headerlink" title="4.曲面与曲面"></a>4.曲面与曲面</h3><ul><li><p>二次曲面</p><ul><li>椭球面 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146337.png" alt="image-20220304202328359" style="zoom:33%;" /></li><li>单叶双曲面 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146338.png" alt="image-20220304202444545" style="zoom:33%;" /></li><li>双叶双曲面 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146339.png" alt="image-20220304202540039" style="zoom:33%;" /> </li><li>椭圆抛物面 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146340.png" alt="image-20220304202758884" style="zoom:33%;" /></li><li>椭圆锥面 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146341.png" alt="image-20220304203041999" style="zoom:33%;" /></li><li>双曲抛物面（马鞍面） <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146356.png" alt="image-20220304203319488" style="zoom:33%;" /></li></ul></li><li><p>柱面 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146357.png" alt="image-20220304203534454" style="zoom:40%;" /></p></li><li><p>旋转曲面：绕谁转谁不变，另一个字母写成另外两个字母的平方和开根号</p></li><li><blockquote><p><img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146358.png" alt="image-20220304204422876" style="zoom: 33%;" /></p></blockquote></li><li><p>例：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146359.png" alt="image-20220304205216327" style="zoom:33%;" /></p></li></ul><h3 id="5-多元微分几何应用"><a href="#5-多元微分几何应用" class="headerlink" title="5.多元微分几何应用"></a>5.多元微分几何应用</h3><ul><li>==“切一刀，转一圈，投下来”==</li><li>曲线的切线与法平面<ul><li>参数方程给出：三个参数方程求导就是切向量</li><li>交面式方程给出 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146360.png" alt="image-20220305080443286" style="zoom:33%;" /></li></ul></li><li>曲面的切面与法线<ul><li>隐式给出：曲面对xyz求偏导就是法向量</li><li>显式给出：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146361.png" alt="image-20220305081518653" style="zoom:33%;" /></li></ul></li></ul><h3 id="6-场论"><a href="#6-场论" class="headerlink" title="6.场论"></a>6.场论</h3><ul><li>方向导数 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146362.png" alt="image-20220305083253965" style="zoom:40%;" /> 梯度点乘方向向量</li><li>散度旋度 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146363.png" alt="image-20220305084308586" style="zoom:33%;" /></li></ul><h2 id="十七、线面积分"><a href="#十七、线面积分" class="headerlink" title="十七、线面积分"></a>十七、线面积分</h2><h3 id="1-三重积分"><a href="#1-三重积分" class="headerlink" title="1.三重积分"></a>1.三重积分</h3><blockquote><p>曲面积分是一个面，表达式只有等号，而三重积分是一个体，小于等于号</p></blockquote><ul><li><p>计算</p><ul><li><p>基础方法</p><ul><li><p>直角坐标系</p><ul><li><p>先z后xy：<strong>有上下面，侧面没有或者是柱面</strong> </p><blockquote><p>积分时候xy写前面，z写后面先积分，用z的上下限</p></blockquote></li><li><p>先xy后z(定限截面法)：<strong>旋转体</strong></p></li></ul></li><li><p>柱面坐标系：一个定积分+极坐标系下的二重积分</p></li><li><p>球面坐标系：记得乘$r^2sin\phi$，$\begin{cases}x=rsin\phi cos\theta\\y=rsin\phi sin\theta\\z=rcos\phi\end{cases}$ </p></li></ul></li><li><p>技术方法</p><ul><li>对称性</li><li>形心公式逆用：规则几何体的三重积分可以用形心和体积计算</li></ul></li></ul></li></ul><h3 id="2-一型曲线积分"><a href="#2-一型曲线积分" class="headerlink" title="2.一型曲线积分"></a>2.一型曲线积分</h3><ul><li>概念性质<ul><li>概念：沿着一条曲线路径进行定积分<strong>(ds)</strong> <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146364.png" alt="image-20220308081455335" style="zoom:20%;" /> </li></ul></li></ul><h3 id="3-一型曲面积分"><a href="#3-一型曲面积分" class="headerlink" title="3.一型曲面积分"></a>3.一型曲面积分</h3><ul><li><p>概念：密度不均匀曲面片的质量<strong>（dS）</strong> </p></li><li><p>计算</p><ul><li>化为二重积分：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146365.png" alt="image-20220308220011588" style="zoom:20%;" /> </li></ul></li><li>应用<ul><li>几何量<ul><li>面积：例：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146366.png" alt="image-20220308224306051" style="zoom:25%;" /> </li></ul></li><li>转动惯量<ul><li>空间物体：$I_x=\iiint_\Omega (y^2+z^2)\rho(x,y,z)dv$。<strong>其他两个字母的平方和</strong>以及$\rho$来算三重积分</li></ul></li><li>引力<ul><li>空间物体：$F_x=Gm\iiint_\Omega\frac{\rho(x,y,z)(x-x_0)}{[(x-x_0)^2+(y-y_0)^2+(z-z_0)^2]^{\frac{3}{2}}}d v$。下面分母是<strong>距离的三次方</strong></li></ul></li></ul></li></ul><h3 id="4-二型曲线积分"><a href="#4-二型曲线积分" class="headerlink" title="4.二型曲线积分"></a>4.二型曲线积分</h3><ul><li><p>概念性质</p><ul><li>概念：$W=\int_{A\to B}Pdx+Qdy+rdz$ <strong>（有起点终点）</strong></li></ul></li><li><p>计算</p><ul><li><p>化为定积分：它的对称性需要一点一点理解</p><blockquote><p>对称性：<img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146367.png" alt="image-20220309075313192" style="zoom:25%;" /></p></blockquote></li><li><p><strong>格林公式</strong>：封闭曲线，左手在区域内，PQ有一阶连续偏导</p><ul><li><p>$\oint\limits_LPdx+Qdy=\iint\limits_D(Q_x-P_y)d\sigma$ </p></li><li><p>==看好谁是P谁是Q！！== </p></li><li><p>例：</p><blockquote><p>注意看正负怎么取的 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146368.png" alt="image-20220309231459992" style="zoom:25%;" /></p></blockquote></li></ul></li></ul></li></ul><h3 id="5-二型曲面积分"><a href="#5-二型曲面积分" class="headerlink" title="5.二型曲面积分"></a>5.二型曲面积分</h3><ul><li><p>计算</p><ul><li>化为二重积分（一投二代三计算）<ul><li>坐标轴的正方向和规定的正向量方向成锐角则为正</li></ul></li><li><strong>高斯公式</strong>：封闭曲面，取外侧，PQR都有一阶连续偏导<ul><li>$\oiint\limits_{\sum_{外}}Pdydz+Qdzdx+Rdxdy=\iiint\limits_\Omega(P_x+Q_y+R_z)dV$ </li></ul></li></ul></li><li><p>空间第二型曲线积分计算：<strong>斯托克斯公式</strong></p><ul><li><p>把空间封闭曲线的二型线积分转换为绷在此环上任何一个面的一型面积分</p><blockquote><p>公式 <img src="https://typora-gilgamesh.oss-cn-shanghai.aliyuncs.com/img/202204020146369.png" alt="image-20220310002940197" style="zoom:33%;" /> 环的右手系确定向量方向，单位化就是行列式第一行</p></blockquote></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>考研</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
